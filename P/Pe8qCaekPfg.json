{"0.82":{"start":"0.82","dur":"2.97","text":"&gt;&gt;Dr. Deborah Trytten: So now that we know\nprimitive data type and basic control statements,"},"3.79":{"start":"3.79","dur":"3.76","text":"we&#39;re going to put them together to write\na program that will allow us to choose cheap"},"7.55":{"start":"7.55","dur":"7","text":"audiobooks. Here&#39;s the problem statement:\nI have a subscription to Laudible.com, an"},"14.64":{"start":"14.639","dur":"4.991","text":"online retailer that sells audiobooks. Each\nmonth I get one credit for a fixed fee of"},"19.63":{"start":"19.63","dur":"5.79","text":"$14.95. Each book has a title, a length in\nhours and minutes, and a number of credits."},"25.42":{"start":"25.42","dur":"4.08","text":"We&#39;re going to write a program that reads\nthe data for the books and chooses the ones"},"29.50":{"start":"29.5","dur":"4.96","text":"that&#39;s the best value. What I mean by the\nbest value is the one where you get the most"},"34.46":{"start":"34.46","dur":"5.04","text":"number of minutes of time for the given credits.\nThat&#39;s probably not a very good way to choose"},"39.50":{"start":"39.5","dur":"3.989","text":"audiobooks, but it&#39;s what we&#39;re going to do\nthis morning anyways, and we&#39;ll end the input"},"43.49":{"start":"43.489","dur":"3.39","text":"with the Sentinel of END."},"46.88":{"start":"46.879","dur":"5.93","text":"Now that we&#39;re doing test-driven development,\nwe want to write the test data for the program"},"52.81":{"start":"52.809","dur":"7","text":"first. So here&#39;s some possible input. Let&#39;s\nsay A Tale of Two Cities took 150 hours and"},"60.03":{"start":"60.03","dur":"3.93","text":"5 minutes and cost one credit. Now I don&#39;t\nknow if it really took that long, but it probably"},"63.96":{"start":"63.96","dur":"5.479","text":"seemed like it took that long. A Tale of Three\nCities could take 100 hours and 55 minutes"},"69.44":{"start":"69.439","dur":"4.981","text":"and cost one credit. A Tale of Four Cities\ncould take 50 hours and 20 minutes and cost"},"74.42":{"start":"74.42","dur":"6","text":"two credits, and A Tale of Five Cities could\ntake 150 hours and 5 minutes and cost three"},"80.42":{"start":"80.42","dur":"3.87","text":"credits. When we look at these, we can see\nthat A Tale of Two Cities is the one that&#39;s"},"84.29":{"start":"84.29","dur":"5.45","text":"going to be the best value, and so that&#39;s\nthe one we&#39;ll have as the output."},"89.74":{"start":"89.74","dur":"4.43","text":"Notice that there is some unnecessary information\nin this problem statement. This is actually"},"94.17":{"start":"94.17","dur":"3.739","text":"very typical of what you get when you talk\nto people who want you to design software"},"97.91":{"start":"97.909","dur":"4.451","text":"for things. They tell you all kinds of stuff\nthat you don&#39;t need to know, and then you"},"102.36":{"start":"102.36","dur":"4.829","text":"have to pull out the things that are really\nrelevant. In this case, the fact that a monthly"},"107.19":{"start":"107.189","dur":"7","text":"subscription costs $14.95 is irrelevant. It&#39;s\nall about credits. We might consider some"},"116.13":{"start":"116.13","dur":"4.519","text":"boundary cases here, like what happens if\nthere aren&#39;t any audiobooks. I guess that"},"120.65":{"start":"120.649","dur":"3.421","text":"case doesn&#39;t particularly make sense because\nif there aren&#39;t any, you&#39;re not going to buy"},"124.07":{"start":"124.07","dur":"4.85","text":"any. If there&#39;s one, it will be the best deal\nautomatically, so those are some good boundary"},"128.92":{"start":"128.92","dur":"6.13","text":"cases this time. We might also consider what\nhappens with ties. Ties are one of those things"},"135.05":{"start":"135.05","dur":"6.36","text":"that tend to be a problem in computer science.\nOne strategy that you can use is sort of first-come,"},"141.41":{"start":"141.41","dur":"5.75","text":"first-serve. That is, if you find another\nvalue later that ties your first one, the"},"147.16":{"start":"147.16","dur":"4.5","text":"first one is the one that remains. It really\ndoesn&#39;t matter which way you settle ties,"},"151.66":{"start":"151.66","dur":"3.81","text":"but it&#39;s very important that you let people\nknow how they&#39;re settled, so they know what"},"155.47":{"start":"155.47","dur":"2.5","text":"to expect."},"157.97":{"start":"157.97","dur":"4.95","text":"Here&#39;s a tough question: how much test data\nis enough? I&#39;ve only put one piece of test"},"162.92":{"start":"162.92","dur":"4.83","text":"data here, and that probably isn&#39;t enough,\nbut you could go on writing test data all"},"167.75":{"start":"167.75","dur":"5.62","text":"day and all night and so you have to balance\nthat. For this program given that it&#39;s a relatively"},"173.37":{"start":"173.37","dur":"6.72","text":"simple program, probably this is sufficient\ntest data. We can always test more later."},"180.09":{"start":"180.09","dur":"4.99","text":"The next thing we&#39;re going to do is create\nour class, so let&#39;s go to Eclipse. I&#39;m opening"},"185.08":{"start":"185.08","dur":"7","text":"Eclipse from the launchpad, entering our workspace.\nSo let&#39;s create a new project for Laudible.com."},"204.34":{"start":"204.34","dur":"4.31","text":"Remember project names are allowed to have\nperiods in them, so this will work fine. When"},"208.65":{"start":"208.65","dur":"6.92","text":"we get to creating our class, however, we&#39;re\nonly going to be able to use Laudible. Once"},"215.57":{"start":"215.57","dur":"5.05","text":"again, I&#39;m having a main program put in the\nclass. Now in this case I forgot to select"},"220.62":{"start":"220.62","dur":"5.12","text":"the source directory when I started in, so\nI&#39;m going to have to browse for it now. So"},"225.74":{"start":"225.74","dur":"6.05","text":"I&#39;m going to find the Laudible.com project\nand select the source directory as the place"},"231.79":{"start":"231.79","dur":"5","text":"where I want my class file. One thing you&#39;ll\nnotice is that Eclipse is giving us a little"},"236.79":{"start":"236.79","dur":"5.61","text":"warning here. It&#39;s saying the use of the default\npackage is discouraged, and actually Eclipse"},"242.40":{"start":"242.4","dur":"4.75","text":"is right on this one, but it&#39;s okay for beginning\nprogrammers. We&#39;ll learn how to work around"},"247.15":{"start":"247.15","dur":"7","text":"that later. So here&#39;s our class, and as always\nwe&#39;re going to need to beautify it a little"},"256.63":{"start":"256.63","dur":"7","text":"bit. And it&#39;s been pretty handy having our\nproblem statement moved in, so let&#39;s go and"},"273.00":{"start":"273","dur":"7","text":"grab that from our PowerPoint"},"284.97":{"start":"284.97","dur":"7","text":"and put that as a comment at the top. Now\nthat got a little bit ugly, so we&#39;re going"},"298.04":{"start":"298.04","dur":"7","text":"to beautify it a little bit too. Notice that\nI&#39;m keeping it well within the bounds of the"},"317.68":{"start":"317.68","dur":"7","text":"code that we can see. That&#39;s always a good\nstrategy."},"329.21":{"start":"329.21","dur":"4.22","text":"The next thing to notice is the input and\ncalculation are intertwined here as they have"},"333.43":{"start":"333.43","dur":"4.46","text":"been in our last several programs. Don&#39;t worry,\nwe&#39;re going to stop having that soon, and"},"337.89":{"start":"337.89","dur":"4.31","text":"so you&#39;ll see something different. But for\nright now they&#39;re together, and so this means"},"342.20":{"start":"342.2","dur":"5","text":"that both the input and calculation are going\nto have to be part of our method signature."},"347.20":{"start":"347.2","dur":"3.82","text":"The parameter once again is going to be the\nscanner object that we bring in from the main"},"351.02":{"start":"351.02","dur":"5.46","text":"program, and we might want to think about\nthe return type. What exactly is it that we"},"356.48":{"start":"356.48","dur":"4.7","text":"want to get? Well, if you look back at our\noutput data that we did in our test-driven"},"361.18":{"start":"361.18","dur":"4.9","text":"development, you&#39;ll see that our output was\nA Tale of Two Cities. That&#39;s a string, and"},"366.08":{"start":"366.08","dur":"2.97","text":"so that&#39;s definitely what we want to have."},"369.05":{"start":"369.05","dur":"7","text":"Let&#39;s look at our method name inside the program.\nRemember that the methods go outside of the"},"376.68":{"start":"376.68","dur":"5.6","text":"main method but inside the class. Now I&#39;m\ngoing to make a mistake here on purpose because"},"382.28":{"start":"382.28","dur":"4.4","text":"there&#39;s a very simple thing to forget, and\nthat&#39;s to put public and static in front of"},"386.68":{"start":"386.68","dur":"5.63","text":"methods. And it gives a really crazy message,\nso I want you to see that message once. So"},"392.31":{"start":"392.31","dur":"7","text":"our return type was going to be string. We&#39;re\ngoing to read and find cheapest book, and"},"403.17":{"start":"403.17","dur":"7","text":"we&#39;re going to have an input scanner. Now\nas always, we need to remember to import Java"},"415.84":{"start":"415.84","dur":"7","text":"dot util dot scanner, so that the program\ndoesn&#39;t complain. And here let&#39;s just return"},"430.26":{"start":"430.26","dur":"6.47","text":"&#39;help me.&#39;"},"436.73":{"start":"436.73","dur":"6.64","text":"So we&#39;re going to call this from our main\nprogram now. We&#39;re going to need to create"},"443.37":{"start":"443.37","dur":"7","text":"our scanner object here. New scanner system\nin same as usual, and we&#39;ll call our \nread and find cheapest book stub from keyboard,"},"470.55":{"start":"470.55","dur":"4.92","text":"and you&#39;ll notice right now that Eclipse still\nhas a red X. You&#39;ll see this red X a lot."},"475.47":{"start":"475.47","dur":"5.31","text":"This is a very common mistake to make, so\nlet&#39;s look at the error message--cannot make"},"480.78":{"start":"480.78","dur":"5.56","text":"a static reference to the non-static method\nread and find cheapest book of scanner from"},"486.34":{"start":"486.34","dur":"6.99","text":"the type Laudible. That&#39;s really not a very\nhelpful message, but it does have a couple"},"493.33":{"start":"493.33","dur":"4.79","text":"of keywords in it that will help you remember\nhow to fix it. When it was talking about static"},"498.12":{"start":"498.12","dur":"6.09","text":"and non-static, what it was trying to say\nwas that this method that we&#39;re calling here"},"504.21":{"start":"504.21","dur":"7","text":"the read and find cheapest book is not a static\nmethod, and we called it from a static method."},"511.64":{"start":"511.639","dur":"6.871","text":"That combination isn&#39;t allowed. The way you\nfix that problem is by putting public static"},"518.51":{"start":"518.51","dur":"4.48","text":"in front of the method. Later on we&#39;ll have\ndifferent strategies, but for right now all"},"522.99":{"start":"522.99","dur":"6.099","text":"of our methods will be public and static.\nThe next thing we need to do is to read our"},"529.09":{"start":"529.089","dur":"5.521","text":"input in. We&#39;ll have a title, and that should\nbe on one line, and then the numbers of hours"},"534.61":{"start":"534.61","dur":"4.65","text":"and minutes and credits. Now there is a problem\nif you put the hours, and minutes, and credits"},"539.26":{"start":"539.26","dur":"6.24","text":"on the same line as the title. That doesn&#39;t\nwork because when we read in our choices are"},"545.50":{"start":"545.5","dur":"4.16","text":"to read in things between spaces, in which\ncase we would only get the first word of the"},"549.66":{"start":"549.66","dur":"6.09","text":"title, or to read in whole lines, in which\ncase we&#39;d get the title and the hours, minutes,"},"555.75":{"start":"555.75","dur":"6.63","text":"and credits, so we have to have those things\non two separate lines."},"562.38":{"start":"562.38","dur":"4.459","text":"The other thing we need to think about is\ndo we have our next versus next line problem"},"566.84":{"start":"566.839","dur":"5.151","text":"again? We talked about this problem in a previous\nvideo and it&#39;s a constant thorn in our side"},"571.99":{"start":"571.99","dur":"5.18","text":"when it comes to reading input, so we&#39;ll think\nabout that when we&#39;re writing our code. So"},"577.17":{"start":"577.17","dur":"7","text":"let&#39;s go and write our code. So inside the\nmethod we&#39;re going to create a string for"},"585.86":{"start":"585.86","dur":"7","text":"the title, an int for the hours, an int for\nthe minutes, and an int for the credits because"},"596.86":{"start":"596.86","dur":"7","text":"all of those things are integral. We&#39;re going\nto need a loop. Let me move our counsel out"},"607.94":{"start":"607.94","dur":"6.79","text":"of the way so we have a little bit more space\nto work. Now in this case even though we&#39;re"},"614.73":{"start":"614.73","dur":"4.48","text":"still going to have a while loop, this is\na sentinel controlled loop instead of a counter"},"619.21":{"start":"619.21","dur":"5.49","text":"controlled loop. And so we&#39;re going to have\nto use priming reads to make this work. So"},"624.70":{"start":"624.7","dur":"3.97","text":"that means we&#39;re going to prompt the user\nbefore the loop and get data before we enter"},"628.67":{"start":"628.67","dur":"5.95","text":"the loop. Then we&#39;ll start our while loop,\nand inside the while loop at the bottom is"},"634.62":{"start":"634.62","dur":"5.2","text":"when we&#39;ll read the data for the next execution.\nThat&#39;s the only way that you can get sentinels"},"639.82":{"start":"639.82","dur":"2.47","text":"to work properly in code."},"642.29":{"start":"642.29","dur":"7","text":"So we&#39;ll do system output line enter the title\nof your book on one line, and system out print"},"658.67":{"start":"658.67","dur":"7","text":"line and the hours, minutes, and credits on\nanother line. Notice I&#39;m giving the user some"},"670.42":{"start":"670.42","dur":"6.07","text":"very specific instructions because it makes\na big difference that they enter things correctly."},"676.49":{"start":"676.49","dur":"7","text":"So title will equal input dot next line because\nwe know it&#39;s on a line by itself. Hours will"},"687.50":{"start":"687.5","dur":"7","text":"equal input dot next int because it&#39;s an integer.\nMinutes will equal input dot next int, and"},"697.97":{"start":"697.97","dur":"7","text":"credits will equal input dot next int. So\nthere we have all of our data. Now it&#39;s time"},"705.14":{"start":"705.14","dur":"5.8","text":"to think about whether we have the next versus\nnext line problem. After we finish reading"},"710.94":{"start":"710.94","dur":"4.81","text":"credits, there is a new line character that&#39;s\nsitting on the screen. That&#39;s what gets entered"},"715.75":{"start":"715.75","dur":"6.089","text":"when you hit enter on your keyboard. So if\nwe go and read the title now using next line,"},"721.84":{"start":"721.839","dur":"5.141","text":"it will get that empty character, and it won&#39;t\nget the title correctly. And then our program"},"726.98":{"start":"726.98","dur":"1.81","text":"will break immediately."},"728.79":{"start":"728.79","dur":"5.95","text":"So we have the next line problem, and we need\nto use next line again to get rid of it. So"},"734.74":{"start":"734.74","dur":"6.11","text":"we do input dot next line. Now things like\nthat are really hard to figure out when you&#39;re"},"740.85":{"start":"740.85","dur":"4.54","text":"reading the code, so you definitely want to\nput a comment there to explain what&#39;s going"},"745.39":{"start":"745.39","dur":"7","text":"on. I&#39;m going to put this one on the side.\nRead in the carriage return at the end of"},"755.33":{"start":"755.33","dur":"5.379","text":"the line. You don&#39;t always think of doing\nthings like this when you&#39;re reading input"},"760.71":{"start":"760.709","dur":"3.451","text":"initially, but you&#39;ll remember to do it once\nyou&#39;ve programmed a bit and had your programs"},"764.16":{"start":"764.16","dur":"7","text":"break every time you forget. So this is before\nthe while loop. Now we need our while loop."},"773.32":{"start":"773.32","dur":"7","text":"Title equals end. And we want a not in front\nof that of course because we want to stop"},"788.41":{"start":"788.41","dur":"5.79","text":"when the title equals end. We want to continue\nwhen the title is not equal to end. Remember"},"794.20":{"start":"794.2","dur":"6.36","text":"that we use equals because we&#39;re comparing\nstrings here, and so that makes a difference."},"800.56":{"start":"800.56","dur":"3.6","text":"The other thing that we might notice is that\nwe didn&#39;t actually tell the user about that"},"804.16":{"start":"804.16","dur":"7","text":"end thing. That&#39;s going to cause problems\nbecause they won&#39;t know what to do. System"},"812.31":{"start":"812.31","dur":"7","text":"out print line enter end when the program\nis finished. So now we&#39;ve given the user correct"},"826.95":{"start":"826.95","dur":"1.11","text":"instructions."},"828.06":{"start":"828.06","dur":"6.56","text":"Oh, I see Eclipse is unhappy once again about\ncredit. That&#39;s because I called it credits"},"834.62":{"start":"834.62","dur":"7","text":"above instead of credit. We can fix it either\nway, but that will get rid of the little red"},"843.22":{"start":"843.22","dur":"7","text":"X. Okay, so here&#39;s our while statement. The\nother comment we haven&#39;t put in here is that"},"856.01":{"start":"856.01","dur":"6.3","text":"we&#39;re doing priming reads. You definitely\nwant to tell somebody who&#39;s reading the code"},"862.31":{"start":"862.31","dur":"7","text":"about that. Remember all this stuff is going\nto go at the end of the loop too, so we will"},"870.54":{"start":"870.54","dur":"7","text":"copy it. Notice I even copied the comment\nin and put it in there. We&#39;re trying to find"},"881.51":{"start":"881.51","dur":"5.85","text":"the cheapest book. We&#39;ve read in the number\nof hours, the number of minutes, and the credits,"},"887.36":{"start":"887.36","dur":"5.7","text":"and so what we need to calculate is the cost\nper minute in terms of credits. So let&#39;s make"},"893.06":{"start":"893.06","dur":"7","text":"a comment about that. So we need a double\nfor the cost per minutes. The value of that"},"910.90":{"start":"910.899","dur":"7","text":"will equal the number of hours times 60 plus\nthe number of minutes divided by the credits."},"921.42":{"start":"921.42","dur":"5.24","text":"We want to think about our precedence a little\nbit because we may not have the precedence"},"926.66":{"start":"926.66","dur":"5.989","text":"correct. So remember multiplicative operators\nlike times and divide get done before additive"},"932.65":{"start":"932.649","dur":"7","text":"operators, so we definitely want to put some\nparentheses around here. I actually like to"},"940.49":{"start":"940.49","dur":"4.69","text":"put in a lot of parentheses in my programs\nanyways because it makes it clear what your"},"945.18":{"start":"945.18","dur":"7","text":"intention was. This is what we want: the total\nnumber of minutes to be calculated first and"},"953.97":{"start":"953.97","dur":"3.46","text":"then the credits to be divided out at the\nend."},"957.43":{"start":"957.43","dur":"4.849","text":"The next thing we need to do is to find the\nminimum. Now we&#39;ve done the minimum thing"},"962.28":{"start":"962.279","dur":"7","text":"before, so we know we need a variable to keep\ntrack of the minimum. So we&#39;ll call it minimum"},"974.80":{"start":"974.8","dur":"7","text":"cost per minute, and we have to think about\nwhat this value should be set to. Now this"},"982.15":{"start":"982.149","dur":"5.56","text":"is a double value, so we can&#39;t use integer\nmax value like we did before. That isn&#39;t going"},"987.71":{"start":"987.709","dur":"4.841","text":"to work, and it turns out the double class\ndoesn&#39;t have a maximum value. So we might"},"992.55":{"start":"992.55","dur":"5.74","text":"want to think about how we could initialize\nthis. Well, one easy way to do it is to initialize"},"998.29":{"start":"998.29","dur":"6.31","text":"it to the cost per minute of the first value.\nThat way we know we&#39;ll have a legal value."},"1004.60":{"start":"1004.6","dur":"6.1","text":"We can grab that right from here. We can&#39;t\nuse cost per minute up there because it&#39;s"},"1010.70":{"start":"1010.7","dur":"5.36","text":"declared inside the loop, and so it&#39;s out\nof scope at this point, but the other values"},"1016.06":{"start":"1016.06","dur":"3.05","text":"still work."},"1019.11":{"start":"1019.11","dur":"3.87","text":"Now if you think about it, in addition to\nknowing the minimum cost, we also want to"},"1022.98":{"start":"1022.98","dur":"7","text":"know which book had the minimum cost, so we&#39;re\ngoing to need a string to store that. So we&#39;ll"},"1030.84":{"start":"1030.839","dur":"7","text":"call it cheapest book so far, and that&#39;s going\nto be the title of the first one. Inside the"},"1043.87":{"start":"1043.869","dur":"7","text":"loop if the cost per minute is greater than\u2014whoops,\nI&#39;m sorry\u2014less than cheapest book so far,"},"1057.03":{"start":"1057.029","dur":"7","text":"what that means is we found a new book that&#39;s\ncheaper. So cheapest book so far will get"},"1064.55":{"start":"1064.549","dur":"7","text":"the value of cost per minute, and\u2014oh, I&#39;m\nsorry, I&#39;m using the wrong variable. Cheapest"},"1074.09":{"start":"1074.09","dur":"7","text":"book so far is our string, so that should\nget the value of title, not cost per minute."},"1081.48":{"start":"1081.48","dur":"3.74","text":"Notice that Eclipse was telling me that I\nwas making a mistake there, and if I&#39;d paid"},"1085.22":{"start":"1085.22","dur":"4.819","text":"attention to it a little bit sooner, I might\nnot have typed so much stuff wrong. Cost per"},"1090.04":{"start":"1090.039","dur":"7","text":"minute has to be less than \nminimum cost per minute. I expect Eclipse\nis about to be happier soon. Minimum cost"},"1106.26":{"start":"1106.259","dur":"7","text":"per minute equals cost per minute. So we&#39;ve\ngot an interesting structure here between"},"1118.09":{"start":"1118.09","dur":"4.019","text":"the priming reads and the if statement in\nthe middle of the while loop. We&#39;ve got a"},"1122.11":{"start":"1122.109","dur":"5.16","text":"pretty substantial while loop, so let&#39;s put\nin some more comments to help it make more"},"1127.27":{"start":"1127.269","dur":"7","text":"sense. So find the let&#39;s say find whether\nthe current element is the minimum. So notice"},"1139.97":{"start":"1139.97","dur":"4.189","text":"we&#39;ve got two or three lines of code and a\ncomment before each. That&#39;s a really nice"},"1144.16":{"start":"1144.159","dur":"7","text":"balance in code. Then we&#39;ve got our priming\nreads, and now instead of returning &#39;help"},"1154.52":{"start":"1154.519","dur":"7","text":"me,&#39; we can return cheapest book so far. So\nit looks like we may have our method done,"},"1163.16":{"start":"1163.159","dur":"4.25","text":"or at least we will when I put the c back\nin cheapest."},"1167.41":{"start":"1167.409","dur":"7","text":"Now is a good time to test. So here we go.\nSo we have A Tale of Two Cities, and it&#39;s"},"1183.22":{"start":"1183.22","dur":"7","text":"going to run for 500 hours and 5 minutes and\ncost one credit. Then we have A Tale of Three"},"1191.42":{"start":"1191.419","dur":"7","text":"Cities, and it&#39;s going to run for 250 minutes\nor hours and 10 minutes and cost one credit,"},"1200.94":{"start":"1200.94","dur":"7","text":"and then we have A Tale of Four Cities, and\nit&#39;s going to run for 100 hours and 55 minutes"},"1208.57":{"start":"1208.57","dur":"7","text":"and cost five credits, and then we&#39;re at the\nend. Uh oh, something went wrong. We don&#39;t"},"1218.56":{"start":"1218.559","dur":"5.2","text":"see any output. Now what&#39;s happened here is\nactually an input problem, and we&#39;re going"},"1223.76":{"start":"1223.759","dur":"4.681","text":"to have to go to the code to see it. One of\nthe things that you can notice here is that"},"1228.44":{"start":"1228.44","dur":"4.569","text":"this little red box is still lighted up. That\nmeans our program is still running. The real"},"1233.01":{"start":"1233.009","dur":"4.85","text":"problem here is we didn&#39;t give the user very\ngood instructions because when they enter"},"1237.86":{"start":"1237.859","dur":"7","text":"end, as you&#39;ll see when we look at the code,\nthe title gets read and then the computer"},"1248.11":{"start":"1248.109","dur":"4.611","text":"is waiting to read the hours and minutes and\ncredits. It can&#39;t tell that end has been read"},"1252.72":{"start":"1252.72","dur":"7","text":"if we don&#39;t tell it, and so we need to put\nan if statement in here to fix it. So if title"},"1260.90":{"start":"1260.899","dur":"7","text":"equals end, a curly brace to start and a curly\nbrace to end. We&#39;re going to move those over."},"1282.70":{"start":"1282.7","dur":"6.169","text":"Now we might want to think about it very carefully.\nDo we want to do this when titles equals end"},"1288.87":{"start":"1288.869","dur":"5.13","text":"or when title is not equal to end? Well, we\ngo on and read the input when title is not"},"1294.00":{"start":"1293.999","dur":"6.071","text":"equal to end, so that means we need a little\nexclamation point here to say not. So now"},"1300.07":{"start":"1300.07","dur":"4.569","text":"if we get end, we don&#39;t try to read the other\nthings. Now there are other ways that you"},"1304.64":{"start":"1304.639","dur":"4.76","text":"can have tried to fix this program. For example,\nyou could have prompted the user to enter"},"1309.40":{"start":"1309.399","dur":"3.951","text":"end and then to enter fake data, but that\nisn&#39;t respectful to users, and it makes your"},"1313.35":{"start":"1313.35","dur":"3.85","text":"programs look unprofessional. So we don&#39;t\ndo things that way."},"1317.20":{"start":"1317.2","dur":"7","text":"Let&#39;s run the program again and see if it\nworks. Here we go. A Tale of Two Cities, 500"},"1332.44":{"start":"1332.44","dur":"7","text":"hours, 5 minutes, one credit. A Tale of Three\nCities, 250 hours, 10 minutes, one credit."},"1347.12":{"start":"1347.119","dur":"7","text":"A Tale of Four Cities, 100 hours, 55 minutes,\ntwo credits, and A Tale of Five Cities, 50"},"1357.33":{"start":"1357.33","dur":"7","text":"hours, 25 minutes, and three credits. Here\ncomes the moment of truth. We&#39;re entering"},"1365.21":{"start":"1365.21","dur":"6.76","text":"end, and our program stopped. Now why did\nour program not give any output? Well, that&#39;s"},"1371.97":{"start":"1371.97","dur":"4.38","text":"easy. We didn&#39;t write any output for it to\ngive, so we need to go back to our main program"},"1376.35":{"start":"1376.35","dur":"7","text":"and fix that. Some people when they develop\nprograms write the output first, and then"},"1383.68":{"start":"1383.679","dur":"5.08","text":"write the calculation, and then write the\ninput. That strategy is called backward chaining,"},"1388.76":{"start":"1388.759","dur":"5.04","text":"and it can work really well. So notice here\neven though we returned the title we didn&#39;t"},"1393.80":{"start":"1393.799","dur":"7","text":"store it in a variable, and we didn&#39;t print\nit out. Let&#39;s store it in a variable. Best"},"1401.34":{"start":"1401.34","dur":"7","text":"title equals, and then print something out\nto the user system out print line \nthe cheapest book is \nbest title. Notice that I was careful to add"},"1428.53":{"start":"1428.529","dur":"5.58","text":"in a space after the cheapest book is so all\nthe words didn&#39;t get smashed together. I notice"},"1434.11":{"start":"1434.109","dur":"5.87","text":"though that I&#39;ve gotten a couple of extra\nlittle lines, so we want to get rid of those."},"1439.98":{"start":"1439.979","dur":"7","text":"We&#39;re ready to run again. Here we go\u2014A Tale\nof Two Cities, A Tale of Three Cities, A Tale"},"1462.57":{"start":"1462.57","dur":"7","text":"of Four Cities, and A Tale of Five Cities,\nand the cheapest book is A Tale of Five Cities."},"1478.68":{"start":"1478.679","dur":"7","text":"Uh oh, what happened? We need to go back and\nlook at the logic in our program again. So"},"1487.94":{"start":"1487.94","dur":"7","text":"we know this has to do the calculation. So\nwe have the hours times 60 plus minutes. Now"},"1499.28":{"start":"1499.279","dur":"6.301","text":"let&#39;s think carefully about what&#39;s going on\nhere. When we have the hours times 60 plus"},"1505.58":{"start":"1505.58","dur":"5.699","text":"minutes, all of these things were integers\nas were the credits. That means that we did"},"1511.28":{"start":"1511.279","dur":"5.25","text":"integer division. Remember that&#39;s one of those\ntroublesome operations, so we might want to"},"1516.53":{"start":"1516.529","dur":"5.85","text":"think about how we could fix that. Well, the\neasiest way is to make one of the values integers."},"1522.38":{"start":"1522.379","dur":"5.48","text":"One way that people sometimes try to fix it\nis by casting to double early on, and that"},"1527.86":{"start":"1527.859","dur":"7","text":"can work, but where I like to cast is right\nhere. I like to cast the denominator. So that"},"1535.00":{"start":"1534.999","dur":"5.52","text":"tells it to use the number of credits. So\nwe fixed one problem. Let&#39;s see if that solves"},"1540.52":{"start":"1540.519","dur":"7","text":"the issue. Remember there&#39;s often more than\none problem in code."},"1559.86":{"start":"1559.859","dur":"7","text":"So here&#39;s our test data being entered again.\nUh oh, it&#39;s still A Tale of Five Cities. So"},"1582.35":{"start":"1582.349","dur":"4.471","text":"even though we fixed one problem, we didn&#39;t\nfix all the problems. This is very typical"},"1586.82":{"start":"1586.82","dur":"7","text":"of program development. So we think that this\nmay be correct, so let&#39;s look at this comparison."},"1594.26":{"start":"1594.259","dur":"5.61","text":"If the cost per minute is less than the minimum\ncost per minute, then the minimum cost per"},"1599.87":{"start":"1599.869","dur":"5.8","text":"minute becomes cost per minute. That seems\ncorrect, so that probably isn&#39;t the problem."},"1605.67":{"start":"1605.669","dur":"4.401","text":"Let&#39;s look and see how we initialized cost\nper minute and see if we did that correctly."},"1610.07":{"start":"1610.07","dur":"6.13","text":"Well, the minimum cost per minute was originally\nset to hours times 60 plus minutes divide"},"1616.20":{"start":"1616.2","dur":"6.319","text":"by credits. Uh oh, we used that formula over\nand we didn&#39;t fix it. So let&#39;s fix this one"},"1622.52":{"start":"1622.519","dur":"5.191","text":"too. Now we don&#39;t know if this is the ultimate\nproblem, but it&#39;s one more problem with a"},"1627.71":{"start":"1627.71","dur":"2.399","text":"code that we&#39;re fixing."},"1630.11":{"start":"1630.109","dur":"7","text":"Here we go. Same old data. And you may figured\nout what&#39;s wrong with the problem all\u2014I&#39;m"},"1657.27":{"start":"1657.269","dur":"7","text":"sorry, what&#39;s wrong with the problem already,\nin which case good for you. That&#39;s a skill"},"1665.87":{"start":"1665.869","dur":"7","text":"you learn. We&#39;re still at A Tale of Five Cities.\nWell, let&#39;s give it a little bit more thought"},"1674.56":{"start":"1674.559","dur":"7","text":"here about what we&#39;ve done. Did we really\ncalculate the cost per minute or did we calculate"},"1681.70":{"start":"1681.7","dur":"6.25","text":"the minutes per credit? We have our equation\nupside down. These are the mistakes you make"},"1687.95":{"start":"1687.95","dur":"4.659","text":"all the time when you&#39;re programming, and\nyou definitely need to learn to spot them."},"1692.61":{"start":"1692.609","dur":"5.41","text":"There are a couple of different ways we could\nfigure it. One is we could change our calculation"},"1698.02":{"start":"1698.019","dur":"5.02","text":"to look for the maximum number of minutes\nper credit. That&#39;s probably a really good"},"1703.04":{"start":"1703.039","dur":"4.36","text":"solution here. Then we don&#39;t have to turn\nour mathematical equation that we spent so"},"1707.40":{"start":"1707.399","dur":"5.171","text":"much time working on upside down. Now I hasten\nto add that the two errors we found in the"},"1712.57":{"start":"1712.57","dur":"4.89","text":"program before were real mistakes, and we\nwere going to have to fix those sooner or"},"1717.46":{"start":"1717.46","dur":"4.929","text":"later, so the fact that we fix them before\nthis one instead of after that doesn&#39;t matter."},"1722.39":{"start":"1722.389","dur":"4.64","text":"So let&#39;s go and change some variable names\nand get our program doing the right thing."},"1727.03":{"start":"1727.029","dur":"7","text":"What we&#39;re going to want now is the maximum\nminutes per credit. Now see that makes a lot"},"1737.96":{"start":"1737.96","dur":"5.189","text":"more sense one way or another because you&#39;ve\ngot minutes in the numerator and credits in"},"1743.15":{"start":"1743.149","dur":"4.441","text":"the denominator. Although notice our credits\nhave scrolled off screen, which makes them"},"1747.59":{"start":"1747.59","dur":"5.75","text":"hard to read, so we&#39;re going to move them\nover. Now our cheapest book so far, that part"},"1753.34":{"start":"1753.34","dur":"7","text":"is okay. Instead of cost per minute, we&#39;ll\nchange this to minutes per credit, and we&#39;ll"},"1777.06":{"start":"1777.059","dur":"7","text":"have to move this and change it all the way\ndown. So this is now maximum minutes per credit,"},"1789.50":{"start":"1789.499","dur":"7","text":"and this is now minutes per credit. And we&#39;ll\nhave to change these too, and everything else"},"1820.20":{"start":"1820.2","dur":"0.979","text":"looks fine."},"1821.18":{"start":"1821.179","dur":"4.46","text":"When you make those kind of changes, make\nsure you check over to the side to make sure"},"1825.64":{"start":"1825.639","dur":"4.61","text":"there are no little red boxes, and over on\nthis side for red X&#39;s because Eclipse will"},"1830.25":{"start":"1830.249","dur":"4.98","text":"tell you if you found everything or not. Okay,\nso maybe our program is going to work this"},"1835.23":{"start":"1835.229","dur":"7","text":"time. 500 hours, 5 minutes, one credit. Cross\nyour fingers. The cheapest book is A Tale"},"1869.89":{"start":"1869.889","dur":"6.1","text":"of Five Cities still. Okay, so we really have\na problem here. So we need to look and see"},"1875.99":{"start":"1875.989","dur":"7","text":"what&#39;s going on. Well, we think we fixed that\nokay, but look at what we did in this part"},"1883.38":{"start":"1883.379","dur":"5.8","text":"of the statement right here. We changed our\nwords to be maximum instead of minimum, but"},"1889.18":{"start":"1889.179","dur":"5.59","text":"we forgot to change our mathematical symbol,\nand that&#39;s why it didn&#39;t get fixed. When we&#39;re"},"1894.77":{"start":"1894.769","dur":"7","text":"finding a maximum, we want to change it when\nit&#39;s greater, not when it&#39;s smaller. The other"},"1901.90":{"start":"1901.899","dur":"4.811","text":"thing to think about is how we initialize\nthat to start with. Now it happens that we"},"1906.71":{"start":"1906.71","dur":"5.12","text":"initialized it to the first value, and so\nthat should still work okay. If we had initialized"},"1911.83":{"start":"1911.83","dur":"6.709","text":"it to a small number, we would have to reconsider\nthat when we change it to minimum to maximum."},"1918.54":{"start":"1918.539","dur":"7","text":"One more time. A Tale of Two Cities, hallelujah!\nNotice also that having our test data in advance"},"1954.93":{"start":"1954.929","dur":"3.12","text":"really helped us out here because then when\nwe made a mistake in the program, we were"},"1958.05":{"start":"1958.049","dur":"6.46","text":"able to find it. Here&#39;s something to think\nabout with a program\u2014is it possible to test"},"1964.51":{"start":"1964.509","dur":"6.79","text":"a program too much? Well, yes, but no one\never really does. In fact, testing programs"},"1971.30":{"start":"1971.299","dur":"4.151","text":"is not really the greatest way to check and\nsee that they&#39;re working or not. There is"},"1975.45":{"start":"1975.45","dur":"4.929","text":"a better way to make sure that your programs\nare correct. It&#39;s actually possible to prove"},"1980.38":{"start":"1980.379","dur":"4.321","text":"that a program is correct. Now this is a very\nadvanced technique. It&#39;s not something that"},"1984.70":{"start":"1984.7","dur":"4.669","text":"beginning programmers usually learn, but it&#39;s\na really great idea, and it is important because"},"1989.37":{"start":"1989.369","dur":"6.63","text":"so much of what we do with software now depends\non the software working correctly. Is it really"},"1996.00":{"start":"1995.999","dur":"4.53","text":"possible to prove that programs are correct?\nWell, yes, not only is it possible, you could"},"2000.53":{"start":"2000.529","dur":"5.07","text":"even automate the process. If you&#39;re interested\nin things like this, you&#39;re going to want"},"2005.60":{"start":"2005.599","dur":"4.31","text":"to learn a language where it&#39;s a little easier\nto do this. One of the easiest languages to"},"2009.91":{"start":"2009.909","dur":"5.01","text":"learn that does this is a language called\nLisp. I actually wrote my doctoral dissertation"},"2014.92":{"start":"2014.919","dur":"6.5","text":"research code in Lisp. It&#39;s a wonderful language\nto use. It&#39;s called ACL2 if you look for it"},"2021.42":{"start":"2021.419","dur":"4.96","text":"online, and it&#39;s a really good language for\nproving that programs are correct. If you&#39;re"},"2026.38":{"start":"2026.379","dur":"5.561","text":"interested in this part of computer science,\nyou may want to take CS 2603 Applied Logic"},"2031.94":{"start":"2031.94","dur":"5","text":"for Hardware and Software. That class has\nthis class as a prerequisite so you could"},"2036.94":{"start":"2036.94","dur":"1.17","text":"do it next semester."}}