{"16":{"dur":1,"text":"STEVEN G. HARMS: Hi. Good afternoon everyone."},"17":{"dur":2,"text":"We're starting a little bit late, I think,"},"20":{"dur":6,"text":"because of AV issues. So I think we're gonna\nhave to breeze through."},"27":{"dur":1,"text":"So you are in the right place if you wanted\nto hear"},"28":{"dur":4,"text":"about preferring object-orientation to metaprogramming."},"32":{"dur":2,"text":"My name is Steven Harms, just a brief rundown."},"34":{"dur":1,"text":"I live in San Francisco like a great many"},"36":{"dur":3,"text":"of you. You can Tweet at me @SGHarms. I'll"},"40":{"dur":2,"text":"also supply an email address if you like to"},"42":{"dur":2,"text":"interact in a slower form of communication."},"45":{"dur":2,"text":"What I'd like to do is talk to you"},"47":{"dur":3,"text":"about preferring object-orientation to metaprogramming.\nNow I have to"},"51":{"dur":1,"text":"admit I'm a little bit scared to be up"},"52":{"dur":2,"text":"here, because two years ago I was extolling\nthe"},"54":{"dur":3,"text":"virtues of metaprogramming left and right\nin New Orleans."},"58":{"dur":3,"text":"So, well thank you very much."},"62":{"dur":1,"text":"But I, you know, you can all tell your"},"64":{"dur":3,"text":"significant other that, apparently, one time,\na programmer did"},"67":{"dur":3,"text":"admit that he or she was wrong. So I"},"71":{"dur":2,"text":"was wrong. And I hope to light, guide you"},"73":{"dur":3,"text":"on that journey, sitting up here, or, rather,\nstanding"},"77":{"dur":1,"text":"up here and saying you're wrong is a very"},"79":{"dur":3,"text":"interesting experience. But I have been advised\nthat I"},"82":{"dur":3,"text":"should take my fear out of my back pocket"},"85":{"dur":2,"text":"and put it into me."},"92":{"dur":2,"text":"I would like to say, I love metaprogramming.\nIt's"},"94":{"dur":3,"text":"a fascinating topic. It's rich. It's something\nvery special"},"98":{"dur":2,"text":"to Ruby and I first got exposed to it"},"100":{"dur":4,"text":"at RubyConf 2007, hosted by the, our friend\nDr."},"105":{"dur":2,"text":"Jim Freeze - Jim might be here. I don't"},"108":{"dur":1,"text":"But I can't remember who it was, but somebody"},"110":{"dur":2,"text":"at lunch showed me this thing here, this thing"},"113":{"dur":4,"text":"on line four, where I- I don't know where"},"117":{"dur":1,"text":"you are, but when I saw that I was"},"118":{"dur":2,"text":"like, this is crazy. What, what language is\nthis?"},"121":{"dur":2,"text":"At the time, I was coming from Perl and,"},"124":{"dur":3,"text":"regrettably, Perl made solving some problems\nexceedingly painful."},"128":{"dur":3,"text":"So I was pretty much on, I was undecided"},"131":{"dur":2,"text":"between Python and Ruby, but when I saw that"},"133":{"dur":2,"text":"thing, I was like, whatever language uses\nthat to"},"135":{"dur":3,"text":"do something like define methods, I, I was\nwon"},"138":{"dur":2,"text":"over."},"141":{"dur":1,"text":"And then I saw something crazy like this,\nis"},"143":{"dur":3,"text":"that you could create instances and just put\nmethods"},"146":{"dur":2,"text":"only on that instance and not let other classes"},"149":{"dur":2,"text":"have access to it. I was thinking, this is"},"151":{"dur":2,"text":"why my Perl has sucked so bad. The reason"},"154":{"dur":2,"text":"Perl sucks is because Perl sucks and it doesn't"},"156":{"dur":2,"text":"have awesome constructs like this. It is not\nbecause"},"159":{"dur":5,"text":"I'm an ignorant, uninformed programmer. It's\nbecause Perl sucks."},"164":{"dur":4,"text":"And if you're looking for something that was\nabsolutely"},"168":{"dur":2,"text":"about to prove to you how bad Perl sucked"},"171":{"dur":2,"text":"and how awesome I was, it was that I"},"173":{"dur":3,"text":"could basically invoke methods that didn't\nexist, and Ruby"},"177":{"dur":2,"text":"would help me out. It would let me just"},"179":{"dur":2,"text":"keep stringing that noose along so that I\ncould"},"182":{"dur":3,"text":"hang myself good and proper later on. It would"},"185":{"dur":1,"text":"not blow up on me and I could say,"},"187":{"dur":1,"text":"hey, don't blow up, I want you to do"},"188":{"dur":4,"text":"something else. In this case, summon hateful\nspirits of"},"193":{"dur":4,"text":"the netherworld as inspired by H.P. Lovecraft."},"198":{"dur":2,"text":"But time passed, and thanks to my tools that"},"200":{"dur":2,"text":"I showed you, the metaprogramming tools, I\nwas able"},"202":{"dur":2,"text":"to build really, really complex software.\nAnd I was"},"205":{"dur":3,"text":"so proud of what metaprogramming made possible\nthat I"},"209":{"dur":2,"text":"went to New Orleans in 2011 and told all"},"212":{"dur":2,"text":"of you - some of you - how great"},"215":{"dur":2,"text":"metaprogramming was and what it could provide\nyou."},"217":{"dur":1,"text":"I had to live with that code for two"},"219":{"dur":3,"text":"years. Which involved me having to refactor\nit, having"},"223":{"dur":2,"text":"to own it, and some of my opinions might"},"225":{"dur":2,"text":"have changed. So that's what this talk is\nabout,"},"228":{"dur":2,"text":"is how might your opinions change if you are"},"231":{"dur":4,"text":"the maintainer of the heavily metaprogrammed\nlibrary."},"235":{"dur":4,"text":"We're gonna be guided by three questions here."},"239":{"dur":2,"text":"The first question is, when should I use metaprogramming?"},"242":{"dur":3,"text":"The second is, when should I prefer something\nelse?"},"246":{"dur":4,"text":"And if something else, what is that something?"},"250":{"dur":4,"text":"Regrettably, every time you talk about metaprogramming,\nyou have"},"255":{"dur":3,"text":"to define it first. Ruby Rogues number twelve,\nRuby"},"258":{"dur":3,"text":"Rogues number eighty, my talk in 2001, you\nalways"},"261":{"dur":2,"text":"have to define the terms, or else you're liable"},"264":{"dur":2,"text":"to get cited and get kicked out of RubyConf"},"267":{"dur":2,"text":"to come."},"269":{"dur":3,"text":"So my definition - oh, excuse me, wrong button."},"272":{"dur":4,"text":"My definition, definition is that you're writing\ncode that"},"277":{"dur":5,"text":"redirects passed messages at runtime. Or you're\naltering the"},"282":{"dur":6,"text":"structures that do the passing at runtime.\nAt runtime."},"288":{"dur":3,"text":"You see, Ruby is an interpreted language.\nSo there's"},"292":{"dur":3,"text":"really no difference between compile time\nand execution time."},"295":{"dur":2,"text":"Everything lives in the space of runtime.\nBut I"},"298":{"dur":2,"text":"would like to ask everyone's indulgence for\na moment"},"300":{"dur":2,"text":"to imagine that there is a magical phase right"},"303":{"dur":3,"text":"before runtime called parse time. And parse\ntime is"},"306":{"dur":3,"text":"where your constant tree is established. It's\nwhere all"},"309":{"dur":3,"text":"of your libraries are required. And then there's\nsomething"},"312":{"dur":1,"text":"else that happens once you enter the main\nthread"},"314":{"dur":1,"text":"of execution."},"315":{"dur":2,"text":"It's that main thread part is runtime, the\npart"},"318":{"dur":4,"text":"that happens before is parse time."},"322":{"dur":4,"text":"So redirected parse, past messages at run\ntime, providing"},"327":{"dur":4,"text":"and altering those structures at runtime."},"331":{"dur":2,"text":"That's metaprogramming. If we've all agreed\nthat that's the"},"334":{"dur":3,"text":"standard base of reference, the question that\nI asked"},"337":{"dur":2,"text":"in 2011 was how will I know that I"},"340":{"dur":2,"text":"should use metaprogramming? And I took that\nquestion and"},"343":{"dur":1,"text":"that time to be a reflection on, how do"},"345":{"dur":2,"text":"I know I'm smart enough to use metaprogramming?"},"347":{"dur":1,"text":"And at that time I was feeling pretty damn"},"349":{"dur":2,"text":"smart, and I wanted everyone else to feel\nthat"},"352":{"dur":5,"text":"smart and to jump off that metaprogramming\ncliff."},"357":{"dur":3,"text":"I think the question now is, when should I"},"361":{"dur":2,"text":"ever use metaprogramming? And I think I have\na"},"364":{"dur":2,"text":"new answer for that one. I think the answer"},"367":{"dur":1,"text":"is never."},"368":{"dur":6,"text":"Oh, all right, all right, I'm gonna hedge\nmy"},"374":{"dur":3,"text":"bets. Practically never. On the cons- in the\ncontrary"},"377":{"dur":1,"text":"case, the question should be, well, when should\nI"},"379":{"dur":7,"text":"use something else? Always. Eh, practically\nalways."},"386":{"dur":2,"text":"The trouble I said in 2011 was that we"},"388":{"dur":2,"text":"had unclear guidance about how to move forward\nin"},"391":{"dur":1,"text":"metaprogramming. It tended to be something\nthat was kind"},"393":{"dur":2,"text":"of showed by people at conferences and something\nthat"},"395":{"dur":2,"text":"was kind of obliquely referred to. But it\nwas"},"397":{"dur":2,"text":"never really explained as, here's a technique.\nHere's how"},"400":{"dur":1,"text":"you can grow better in it. Here's how you"},"401":{"dur":1,"text":"can learn more about it."},"403":{"dur":3,"text":"And there's a good reason for that. I'll quote"},"406":{"dur":3,"text":"Tim Connor, who I also quoted in 2011, was"},"410":{"dur":2,"text":"the first rule of metaprogramming is you don't\ntalk"},"412":{"dur":2,"text":"about it, because you'll get people to use\nit."},"415":{"dur":0,"text":"Accurate."},"416":{"dur":5,"text":"And then the second rule is that, when you"},"422":{"dur":3,"text":"do introduce it, you introduce a level of\ncomplexity"},"425":{"dur":5,"text":"that most people, due to just unfamiliarity,\nwill not"},"430":{"dur":3,"text":"understand how to parse. And now here's the\nsentence"},"433":{"dur":3,"text":"that kills me, is that unfortunately, you\ncannot simply,"},"436":{"dur":3,"text":"sorry, that was a typo, be told not to"},"440":{"dur":2,"text":"metaprogram. You must see it for yourself."},"442":{"dur":1,"text":"That's the part I take issue with. I can"},"444":{"dur":2,"text":"show you, I believe, in the remainder of this"},"446":{"dur":2,"text":"presentation, of why you should not use metaprogramming.\nIn"},"449":{"dur":2,"text":"short, I want you to say no to metaprogramming."},"452":{"dur":2,"text":"In fact, if you're from the Pacific Northwest,\nI"},"455":{"dur":4,"text":"want you to say cacao to metaprogramming."},"459":{"dur":3,"text":"Now, I'm gonna take a bit of a, a"},"463":{"dur":2,"text":"side long step here, and I'm going to kind"},"465":{"dur":2,"text":"of fall in the spirits, follow in the spirit"},"468":{"dur":3,"text":"of the philosophers Gilles and Guattari. I'm\ngoing to"},"471":{"dur":2,"text":"take apart the term metaprogramming itself.\nIt is a"},"473":{"dur":2,"text":"bad term."},"475":{"dur":2,"text":"First of all, it's hard to define. Every speaker,"},"478":{"dur":2,"text":"every time they use the word metaprogramming,\nhas to"},"480":{"dur":2,"text":"come in and define what they mean in order"},"482":{"dur":2,"text":"to try to establish some sort of consensual\nbasis."},"485":{"dur":2,"text":"If the term has to be renegotiated all the"},"488":{"dur":3,"text":"time, what is its value? Nothing."},"491":{"dur":3,"text":"Secondarily, I, I have a theory that it gets"},"494":{"dur":1,"text":"by a lot of time because it has this"},"496":{"dur":4,"text":"really awesome Greek prefix at the beginning\nof meta."},"500":{"dur":2,"text":"When I was that young programmer in Austin,\nsomebody"},"503":{"dur":2,"text":"showed me metaprogramming, and I thought,\nmy gosh I"},"505":{"dur":2,"text":"am so stupid. I am so ignorant. I don't"},"508":{"dur":2,"text":"know what metaprogramming is. I, I, I missed\nthat"},"511":{"dur":2,"text":"class in the CS curriculum. I don't know what"},"514":{"dur":1,"text":"it's about."},"515":{"dur":3,"text":"And, and having dug into it, I've dug into"},"519":{"dur":1,"text":"it and I understand it now and it's just"},"520":{"dur":3,"text":"a bad idea. And it skates by because it"},"524":{"dur":2,"text":"has this cool topic. Write a CFP, include\nthe"},"526":{"dur":7,"text":"word metaprogramming, you'll get a speaker\nslot. I know."},"535":{"dur":2,"text":"It's a bad term. But it's also a bad"},"538":{"dur":5,"text":"technique. Recall, well, foremost, let me\nsay that it"},"543":{"dur":2,"text":"has a bad conceptual framework, and I will\ndemonstrate"},"546":{"dur":3,"text":"this. The code itself, Ruby will tell you\ndon't"},"549":{"dur":2,"text":"do this. You can choose to ignore it, like"},"552":{"dur":2,"text":"me, but Ruby will try to help you avoid"},"554":{"dur":2,"text":"this trap. And lastly, I want to talk a"},"557":{"dur":5,"text":"little bit about normative social standards\nvisa vis metaprogramming."},"562":{"dur":3,"text":"So recall that when we talked about my definition"},"566":{"dur":3,"text":"of metaprogramming, is we focused relentlessly\non this concept"},"569":{"dur":2,"text":"of runtime. And here's the interesting this\nis that"},"571":{"dur":4,"text":"runtime specifies a temper, a temporarily\nto these clauses,"},"576":{"dur":3,"text":"but here's the thing. Check out the verb -"},"579":{"dur":1,"text":"alters, redirects."},"580":{"dur":4,"text":"These are verbs that express surprise. These\nare verbs"},"584":{"dur":5,"text":"that express something not doing what was\nexpected. Metaprogramming"},"590":{"dur":6,"text":"is writing code that willfully does something\nthat's surprising"},"596":{"dur":5,"text":"and contrary to convention. I think there's\na special"},"601":{"dur":3,"text":"word for that, right. You write code sometimes\nand"},"604":{"dur":5,"text":"it does something that you don't expect, right."},"610":{"dur":5,"text":"That one. Yeah. Metaprogramming, in effect,\nis engineering bugs"},"615":{"dur":4,"text":"that do the right thing. Not only that, but"},"620":{"dur":2,"text":"they do it adventitiously. I'm including this,\nnot because"},"622":{"dur":1,"text":"I'm talking down to you, but I do realize"},"624":{"dur":2,"text":"English isn't the first language of some people\nin"},"626":{"dur":3,"text":"Adventitious - coming from another source.\nNot inherent or"},"630":{"dur":2,"text":"innate. If your code does not innately do\nthe"},"633":{"dur":2,"text":"right thing, that means that it's more likely\nto"},"636":{"dur":3,"text":"do the wrong thing. So you are quite literally"},"639":{"dur":5,"text":"putting yourself in a position of possible\naccident."},"644":{"dur":4,"text":"Or, in short, metaprogramming is a series\nof aberrations"},"649":{"dur":2,"text":"that just happen to produce the right output\nmost"},"652":{"dur":1,"text":"of the time. Or, at least, as much as"},"653":{"dur":1,"text":"your test coverage says that they produce\nthe right"},"655":{"dur":1,"text":"output."},"657":{"dur":5,"text":"Missing image. Again, another form of bug.\nIt's a"},"662":{"dur":3,"text":"reminder of that when you think things are\nOK,"},"665":{"dur":3,"text":"they are, in fact, not OK. So let's talk"},"668":{"dur":5,"text":"about how a, whoa, it's a broken image. Well,"},"673":{"dur":1,"text":"that's a, that's a new bug for me too."},"674":{"dur":4,"text":"Let's see. OK. Well, I'm sorry. I can't show"},"679":{"dur":1,"text":"you this one cause the image isn't on this"},"681":{"dur":0,"text":"asset."},"682":{"dur":1,"text":"But the point being is that if you try"},"683":{"dur":2,"text":"to use a heavily metaprogrammed library, you\nknow that"},"686":{"dur":1,"text":"thing in IRB or Pry where you can do"},"688":{"dur":3,"text":"tab tab to complete a method name? Metaprogrammed\nmethods"},"692":{"dur":1,"text":"do not appear as part of that. That is"},"694":{"dur":2,"text":"Ruby trying to tell you, hey, I don't know"},"696":{"dur":2,"text":"what you're talking about, and the conventions\nand expectations"},"699":{"dur":2,"text":"that I have, you are not following. If you"},"702":{"dur":4,"text":"choose not to follow those conventions, it's\non you."},"706":{"dur":1,"text":"And because it's on you, you have the obligation"},"708":{"dur":2,"text":"to write extensive amounts of test coverage.\nIn this"},"711":{"dur":1,"text":"case, I had to write one thousand six hundred"},"712":{"dur":2,"text":"and forty-six assertions to feel like my library\nwas"},"715":{"dur":3,"text":"doing the right thing, whereas if I had chosen"},"718":{"dur":4,"text":"smaller, more constrained scopes of my objects,\nI would"},"723":{"dur":2,"text":"have felt more comfortable having fewer of\nthem."},"725":{"dur":1,"text":"As it stands, I had to write near two"},"727":{"dur":3,"text":"thous- well, all right, near sixteen hundred\nassertions to"},"731":{"dur":2,"text":"feel comfortable in my code. You should never\nhave"},"733":{"dur":2,"text":"to write that many assertions to feel comfortable\nin"},"735":{"dur":3,"text":"your code."},"738":{"dur":1,"text":"I'd also like to point out that, as I"},"740":{"dur":4,"text":"showed in the earlier sample, when you have\nmetaprogrammed"},"744":{"dur":4,"text":"code hinging on method missing, if something\nblows up,"},"748":{"dur":1,"text":"you're catching the method missing error.\nInstead of your"},"750":{"dur":3,"text":"error bubbling up to something saying hey,\nyou messed"},"754":{"dur":2,"text":"up, you need to backwar, backtrack this and\nfix"},"756":{"dur":3,"text":"it. Instead now you bear the responsibility\nfor handling"},"759":{"dur":2,"text":"how method missing works."},"761":{"dur":2,"text":"And because of that, you're taking on an additional"},"764":{"dur":3,"text":"cognitive burden, and you're taking on an\nadditional -"},"767":{"dur":4,"text":"that you just should not have to take on."},"771":{"dur":2,"text":"I spoke about social conventions. You don't\nhave to"},"774":{"dur":1,"text":"listen to me and you don't necessarily have\nto"},"776":{"dur":1,"text":"listen to the code, but you could listen to"},"777":{"dur":2,"text":"some dude on Twitter, which is what a lot"},"780":{"dur":3,"text":"of people do apparently. Joshua Timberman\nsaid, well actually,"},"784":{"dur":3,"text":"he didn't say, he metasaid, somebody- he metaTweeted\nthat"},"788":{"dur":3,"text":"someone said that his amount of disdain for\nRuby"},"791":{"dur":2,"text":"projects is directly proportional to the amount\nof magic"},"793":{"dur":1,"text":"it contains."},"795":{"dur":6,"text":"Metaprogramming and intercepting method missing,\nbolting on behavior onto"},"801":{"dur":3,"text":"instances. All of these things, in sum total,\naccount"},"804":{"dur":1,"text":"for magic."},"806":{"dur":2,"text":"So, what I would like to do is put"},"808":{"dur":2,"text":"an end to quote metaprogramming. What I would\nlike"},"811":{"dur":2,"text":"for us to do is to retire the term,"},"813":{"dur":2,"text":"retire the talks, and move on. I would like"},"816":{"dur":2,"text":"for this to be, you know, apologies to Francis"},"818":{"dur":2,"text":"Fukiyama, I'd like to be the, the last man"},"821":{"dur":3,"text":"standing on the topic of metaprogramming.\nI think we"},"825":{"dur":2,"text":"all need to move on and let's just close"},"827":{"dur":2,"text":"the door."},"829":{"dur":1,"text":"Now the question is, if you're going to say"},"831":{"dur":2,"text":"that something is bad, what do you recommend\nyou"},"833":{"dur":2,"text":"replace it with? So what I would like to"},"836":{"dur":3,"text":"do is talk about the replacement to metaprogramming.\nThe"},"840":{"dur":3,"text":"replacement to metaprogramming would, of course,\nbe something like"},"843":{"dur":3,"text":"anti-metaprogramming. It would be taking out\nall of that"},"847":{"dur":2,"text":"magic. It would be taking out all of your"},"849":{"dur":3,"text":"method missing calls, your conts get calls.\nIt would"},"853":{"dur":2,"text":"be taking out all those instance evals, class\nevals."},"856":{"dur":2,"text":"It would be taking out all these weird clojure"},"858":{"dur":3,"text":"things."},"861":{"dur":3,"text":"Anti-metaprogramming code would be deducible\nfrom the parse time"},"864":{"dur":1,"text":"state, that is to say, you could look at"},"866":{"dur":2,"text":"the code at rest and figure out what's going"},"868":{"dur":3,"text":"on. I alluded earlier that I considered metaprogramming\noften"},"872":{"dur":2,"text":"to be a type of bug. Often to understand"},"874":{"dur":2,"text":"the state of the application at the time,\nyou"},"876":{"dur":1,"text":"wind up having to use debugging tools."},"878":{"dur":1,"text":"As you're saying, well why is this not doing"},"880":{"dur":2,"text":"what I expect? What do you have to do,"},"882":{"dur":2,"text":"you have to drop in a Pry binding or"},"885":{"dur":2,"text":"you have to put in ByeBug or a debugger"},"887":{"dur":2,"text":"statement just to figure out what's going\non. And"},"889":{"dur":2,"text":"the reason is is because you're doing weird\nstuff"},"891":{"dur":3,"text":"at runtime. Don't do it."},"895":{"dur":4,"text":"I also believe that code, anti-metaprogramming\ncode, also known"},"899":{"dur":3,"text":"as good code, demonstrates its reason and\nits purpose"},"903":{"dur":4,"text":"in itself. That is to say, it's obvious. So"},"908":{"dur":2,"text":"let's take a look at some anti-patterns that\nI"},"910":{"dur":3,"text":"implemented around metaprogramming."},"913":{"dur":2,"text":"First one - def - oh man, that's really"},"916":{"dur":4,"text":"unfortunate. Hmm. Let's see here, what can\nI do"},"921":{"dur":3,"text":"about this? I want to know why it's showing"},"924":{"dur":6,"text":"up on my screen. Is that? Is it? I"},"930":{"dur":6,"text":"don't know. OK. Yes!"},"936":{"dur":3,"text":"AUDIENCE: Yay!"},"940":{"dur":3,"text":"S.G.H.: Thank you. Thank you all. Whew. Yeah,\nmaster"},"944":{"dur":3,"text":"debugger back here. Thank you. Wow, OK. Thanks\nso"},"948":{"dur":2,"text":"much. That was really helpful. Go team. Obviously\nsome"},"950":{"dur":2,"text":"garbage collectors in the audience."},"953":{"dur":2,"text":"I would like to point out define method. Define"},"956":{"dur":4,"text":"method - Rubyists new to, Rubyists who are\nnew"},"960":{"dur":4,"text":"to language may be surprised to find out that"},"964":{"dur":5,"text":"you can define methods based on taking out\nterms"},"969":{"dur":3,"text":"and then, and creating them dynamically at\nruntime. Don't"},"972":{"dur":2,"text":"do this. This is bad. And you may say,"},"975":{"dur":1,"text":"oh well, this isn't so bad, and you have"},"976":{"dur":1,"text":"this thing called prefix. You have an inner\nand"},"978":{"dur":2,"text":"an outer. I get what's going on here."},"980":{"dur":1,"text":"But the trouble you're gonna have is that\nit's"},"982":{"dur":2,"text":"not grep-able. And by grep I mean you can"},"984":{"dur":2,"text":"use Ack or Rack or some sort of search"},"986":{"dur":2,"text":"or, through your code. If you're looking for\nthe"},"988":{"dur":4,"text":"method that's called tear_down_the_pop_singer,\nyou're not gonna find it,"},"993":{"dur":3,"text":"because it's somehow being fabricated at runtime.\nYou basically"},"996":{"dur":4,"text":"made your code opaque to other introspective\ntools. Don't"},"1000":{"dur":2,"text":"do that. It's so much better just to write"},"1003":{"dur":1,"text":"And if you're complaining about writing it\nout, get"},"1005":{"dur":3,"text":"a better editor. Because, really, your editor\nshould be"},"1009":{"dur":1,"text":"able to take care of this amount of pain"},"1010":{"dur":3,"text":"for you."},"1013":{"dur":5,"text":"Again, it has low grepability and it has very"},"1019":{"dur":3,"text":"poor graspability. An alternative I propose\nis just to"},"1022":{"dur":3,"text":"use plain old, good old def, right. Here it"},"1025":{"dur":3,"text":"is. Where is tear_down_the_pop_singer defined?\nRight there. Or excuse"},"1029":{"dur":2,"text":"me. Right, right there. Yeah."},"1032":{"dur":3,"text":"The ability to resolve problems is so much\neasier"},"1035":{"dur":3,"text":"when you have this available to you."},"1039":{"dur":1,"text":"I'd also like to talk about another anti-pattern\nthat"},"1041":{"dur":4,"text":"I've seen recently discussed is the junk drawer\nmodule."},"1045":{"dur":2,"text":"Now if you took my previous recommendation\nthat you"},"1048":{"dur":2,"text":"actually define your methods, you may say,\nwell I've"},"1050":{"dur":2,"text":"created a large class. I don't like that.\nSo"},"1053":{"dur":1,"text":"what I'm going to proceed to do is I'm"},"1055":{"dur":4,"text":"going to bubble that out into a module and"},"1059":{"dur":3,"text":"then I'm gonna include that module into the\nclass."},"1062":{"dur":1,"text":"Don't do this."},"1063":{"dur":3,"text":"This is a classic bad anti-pattern. Because\nwhat you've"},"1067":{"dur":2,"text":"basically done is you've created a name space\nthat"},"1069":{"dur":3,"text":"has absolutely no purpose for its existence.\nIt is"},"1072":{"dur":2,"text":"important that we, as programmers, when communicating\nwith other"},"1075":{"dur":2,"text":"programmers who will read our code and not\nour"},"1078":{"dur":3,"text":"comments, we need to be able to understand\nwhat"},"1081":{"dur":2,"text":"is going on in this module. What is the"},"1083":{"dur":4,"text":"relationship? Why is raise_the_roof with tear_down_the_pop_star?\nThere is no"},"1088":{"dur":4,"text":"good reason. We have no intentionality behind\nthat module."},"1092":{"dur":2,"text":"And as a result of it, our class and"},"1094":{"dur":2,"text":"our module name will be entirely opaque to\nany"},"1097":{"dur":3,"text":"other programmer who comes along."},"1100":{"dur":6,"text":"Again, it's obvious, moderately, because it's\ngrepable. But the"},"1106":{"dur":2,"text":"graspability is it is poor, and as you add"},"1109":{"dur":3,"text":"additional modules, that graspability will\ngo down precipitously."},"1113":{"dur":7,"text":"So don't create junk drawer mixins using Ruby's\nmodules."},"1120":{"dur":1,"text":"I think Sarah may have brought this up recently."},"1122":{"dur":3,"text":"She said, you know, modules may solve the\nsize."},"1125":{"dur":1,"text":"You've got fewer lines of code. But you've\ndone"},"1127":{"dur":2,"text":"nothing to illuminate, to open the mind of\na"},"1129":{"dur":4,"text":"programmer who's coming along to this particular\nbit of"},"1133":{"dur":1,"text":"code."},"1135":{"dur":3,"text":"You could get slightly better. What if you\nchange"},"1138":{"dur":3,"text":"those mixin names and gave them something\nlike, some"},"1141":{"dur":3,"text":"hint of what they are. But really, you're\nnot"},"1144":{"dur":2,"text":"getting much for that level. You still have\nthe"},"1146":{"dur":5,"text":"greppability. Moderate graspability. But it's\ntrending down."},"1151":{"dur":2,"text":"Here's a nifty pattern that totally sucks.\nI did"},"1154":{"dur":1,"text":"this one heavily and I'm so embarrassed to\nshow"},"1156":{"dur":3,"text":"it. I'm gonna show it right now."},"1159":{"dur":3,"text":"What would happen if, instead of actually\ncreating modules,"},"1162":{"dur":4,"text":"you decided to create anonymous modules? Wow.\nYou just"},"1167":{"dur":3,"text":"completely hung yourself. That was awesome.\nAnd the reason"},"1171":{"dur":2,"text":"you've hanged yourself is because, look, you\nget this"},"1174":{"dur":2,"text":"really nice thing by looking at Ruby's ancestor\nchain."},"1177":{"dur":2,"text":"Cause you can ask an object, or rather, ask"},"1179":{"dur":3,"text":"an object's class what the inheritance chain\nof it,"},"1183":{"dur":1,"text":"of it is."},"1184":{"dur":2,"text":"We'd say, where'd you get methods? Where do\nyou"},"1186":{"dur":3,"text":"get properties? So I can see class, method\ndeffer,"},"1189":{"dur":2,"text":"gets modules from pop_singer_moves and housing_moves\nand object and"},"1192":{"dur":3,"text":"kernel and basic object. That's great. Guess\nwhat? When"},"1196":{"dur":4,"text":"you use anonymous modules, you get none of\nthat."},"1200":{"dur":2,"text":"So congratulations. You got to use a really,\nreally"},"1203":{"dur":3,"text":"cool stylistic invocation that made your code\nmore opaque."},"1206":{"dur":1,"text":"That one hurt."},"1208":{"dur":3,"text":"So, again, there is really no hope at this"},"1211":{"dur":4,"text":"point. You've really, really shot yourself\nin your foot."},"1216":{"dur":2,"text":"Here's another anti-pattern that I completely\ncommitted. How about"},"1218":{"dur":2,"text":"this one? What if you wanted to make a"},"1221":{"dur":3,"text":"class that's including a module do something\ncrazy when"},"1225":{"dur":2,"text":"it included that module? Wouldn't that be\ncompletely opaque?"},"1228":{"dur":2,"text":"Wouldn't that be impossible to understand?\nyes."},"1230":{"dur":5,"text":"Look at this. This is, this is humiliating.\nYou"},"1236":{"dur":2,"text":"may not be aware that module implements a,\na"},"1238":{"dur":3,"text":"call-back method, so that when you include\na module,"},"1241":{"dur":2,"text":"magic happens. And what if, in that silent\nbit"},"1244":{"dur":2,"text":"of magic, you decided to do magic back on"},"1247":{"dur":3,"text":"the thing that included the module?"},"1250":{"dur":1,"text":"This is just pure insanity. I don't even know"},"1251":{"dur":2,"text":"what I was thinking. I, I don't do drugs,"},"1254":{"dur":3,"text":"but I don't know what I was thinking. I,"},"1257":{"dur":1,"text":"I can kind of see, like, a bit of"},"1259":{"dur":2,"text":"nobility in here. There's a hint of the desire"},"1261":{"dur":3,"text":"to want to invert dependencies, but if you\nchoose"},"1265":{"dur":2,"text":"to invert a dependency, which we'll talk about\nin"},"1267":{"dur":2,"text":"just a moment, there are many more obvious\nways"},"1270":{"dur":2,"text":"of doing it. So don't do this."},"1272":{"dur":5,"text":"So, again, low greppability, abandon all hope.\nLow graspability."},"1277":{"dur":2,"text":"Abandon all hope. Do not do this."},"1280":{"dur":2,"text":"Here's an interesting pattern. Here's where\nthings start getting"},"1282":{"dur":2,"text":"a little bit better. What if you chose to"},"1284":{"dur":3,"text":"use the strategy pattern to apply behavior\nto the"},"1288":{"dur":4,"text":"inverted class? So let's take a look at this."},"1292":{"dur":2,"text":"So what if I decided to put those housing"},"1295":{"dur":3,"text":"moves in a module that I'm gonna call a"},"1298":{"dur":2,"text":"strategy? Now I realize someone's gonna take\nme to"},"1301":{"dur":2,"text":"task on Twitter and say, you're dumb. You\ndon't"},"1303":{"dur":2,"text":"understand what the strategy pattern's about.\nIt's not modules,"},"1306":{"dur":1,"text":"it's classes. OK, I get it."},"1308":{"dur":1,"text":"But for the sake of this argument, let's kind"},"1309":{"dur":3,"text":"of keep with the idea that what, what is"},"1313":{"dur":2,"text":"happening in these strategies is that I've\nbasically given"},"1315":{"dur":3,"text":"this mixin a meaningful name. I've said, this\nmixin"},"1319":{"dur":2,"text":"isn't just a mixin of some random mod- rad-"},"1321":{"dur":2,"text":"random methods that you want to throw into\nyour"},"1324":{"dur":2,"text":"class. What I'm saying is that there's an\nintention"},"1326":{"dur":2,"text":"behind it. It's that if you're interested\nin housing"},"1328":{"dur":2,"text":"moves, you're going to have some relationship\nwith this"},"1331":{"dur":1,"text":"particular strategy."},"1333":{"dur":2,"text":"So here's how I chose to invert that dependency."},"1335":{"dur":2,"text":"Is what happens is that when you create a"},"1338":{"dur":5,"text":"method deffer class, it then proceeds to instantiate\na"},"1343":{"dur":7,"text":"class called apply_core_strategies, passing\nitself. The apply_core_strategies then looks"},"1350":{"dur":4,"text":"at the essential strategies, intelligible\nfor the next programmer,"},"1355":{"dur":3,"text":"of housing_move strategy and pop_movesto_strategy,\nthen it proceeds to"},"1359":{"dur":3,"text":"bolt those on, on the calling class."},"1362":{"dur":1,"text":"So I feel like, at this place, we're actually"},"1364":{"dur":5,"text":"getting a hint of the, of, we're starting\nto"},"1369":{"dur":2,"text":"tease apart some of the metaprogramming. We're\nstarting to"},"1372":{"dur":5,"text":"create small, tiny classes that bear responsibility\nfor certain"},"1377":{"dur":4,"text":"tasks of thinking. And I can definitely say\nthe"},"1381":{"dur":3,"text":"woman who taught me to start thinking this\nterms"},"1384":{"dur":3,"text":"was Sandy Metts. So I can't say enough about"},"1387":{"dur":2,"text":"how she dug me out of my conceptual bad"},"1390":{"dur":5,"text":"spot by introducing me to some of these ideas."},"1395":{"dur":3,"text":"Again, the obviousness is moving, is moving\nupward. The"},"1399":{"dur":1,"text":"reason is is that we can always take a"},"1401":{"dur":1,"text":"look, you say oh well he implemented this\nmethod"},"1402":{"dur":2,"text":"poorly or this method poorly, or this strategy\nis"},"1405":{"dur":2,"text":"poorly named, or why are we doing this with"},"1407":{"dur":2,"text":"modules? Why don't we use classes so that\nthey"},"1409":{"dur":2,"text":"can have a meaningful state? We're trending\nin a"},"1412":{"dur":3,"text":"good direction. We're trending out of opaqueness\nand difficulty"},"1415":{"dur":2,"text":"that we normally associate with metaprogramming,\nand we're moving"},"1418":{"dur":3,"text":"to something that's more deducable, that has\nsmaller scope"},"1421":{"dur":3,"text":"that's greppable."},"1424":{"dur":4,"text":"It's also more graspable. Again, fewer lines\nof code,"},"1428":{"dur":4,"text":"higher graspability. that's it."},"1433":{"dur":3,"text":"On the topic of good O-O, I, I don't"},"1436":{"dur":1,"text":"have to say Sandy taught me everything I can"},"1438":{"dur":3,"text":"stand to know on the topic. The heart of"},"1442":{"dur":5,"text":"what makes metaprogramming so bad is that\nit will"},"1447":{"dur":3,"text":"pry- that it puts a very heavy cognitive burden"},"1451":{"dur":2,"text":"on the developer. And what I like to say"},"1453":{"dur":2,"text":"is that it puts a mind of god burden"},"1456":{"dur":1,"text":"on the developer."},"1457":{"dur":3,"text":"Specifically, if you look at metaprogramming\ntechniques that break"},"1461":{"dur":3,"text":"object incapsulation, you can actually start\nto see that"},"1464":{"dur":3,"text":"metaprogramming is the last refuge of the\nprocedural programmer."},"1468":{"dur":2,"text":"You have to hold in your mind all of"},"1470":{"dur":3,"text":"the possible methods and all of the possible\nvariables"},"1474":{"dur":1,"text":"that could be called and all the possible\ncode"},"1476":{"dur":0,"text":"paths."},"1477":{"dur":3,"text":"If you're saying no, Ruby, don't do your default"},"1480":{"dur":3,"text":"blow-up behavior on Method Missing, you're\nsaying, I'll take"},"1484":{"dur":3,"text":"that responsibility on. If you're cracking\nover someone else's"},"1488":{"dur":5,"text":"class, you're saying, don't worry, thread\nclass, I'll take"},"1493":{"dur":3,"text":"responsibility in making sure that all your\ninterfaces always"},"1496":{"dur":2,"text":"work in all the possible code."},"1499":{"dur":1,"text":"And if you basically say, oh I need to"},"1501":{"dur":2,"text":"define core methods within the Ruby language\nby defining"},"1503":{"dur":2,"text":"a kernel method, what you're saying is, don't\nworry"},"1506":{"dur":2,"text":"Ruby, I got you on this one. You are"},"1508":{"dur":4,"text":"deficient, I know better. Am I really ever\ngonna"},"1512":{"dur":2,"text":"say that to Matz?"},"1514":{"dur":3,"text":"No. I'm not."},"1517":{"dur":3,"text":"Loveable angry panda Rein Henrichs has this\npretty, pretty"},"1520":{"dur":2,"text":"succinctly said, is if you can go around monkeying"},"1523":{"dur":3,"text":"with the core object class or the core fundaments"},"1527":{"dur":3,"text":"of the Ruby universe, he and his loved ones"},"1531":{"dur":3,"text":"should be under no obligation to maintain\nyour level"},"1535":{"dur":2,"text":"of insanity."},"1537":{"dur":4,"text":"In fact, what I love about RubyConf is that,"},"1541":{"dur":1,"text":"as you write your talk, you write it in"},"1543":{"dur":1,"text":"a vacuum. Then all of the sudden you come"},"1544":{"dur":2,"text":"into RubyConf and you pick up these pneumatic\ncurrents"},"1546":{"dur":1,"text":"that are floating about. And what I've seen\nin"},"1548":{"dur":4,"text":"a number of talks, particular yesterday, was\nRuby is"},"1552":{"dur":3,"text":"maturing. And as a result of it, we now"},"1555":{"dur":2,"text":"have a nice variety of gems where people have"},"1558":{"dur":3,"text":"shared their solutions to famous problems\nthat other developers"},"1562":{"dur":2,"text":"might encounter."},"1565":{"dur":2,"text":"But when you metaprogram, you make it so that"},"1567":{"dur":4,"text":"your code can't interact predictably with\nother peoples' libraries."},"1572":{"dur":3,"text":"Jason Clark talked about extending gems. He's\ntalking about"},"1575":{"dur":3,"text":"problems that he had at New Relic with other"},"1579":{"dur":4,"text":"developers stomping on his name space. I mean,\nthese"},"1583":{"dur":2,"text":"are developers who sit, you know, in San Francisco,"},"1585":{"dur":1,"text":"so it's not a very big place."},"1587":{"dur":2,"text":"So he could see these developers every day\nand"},"1589":{"dur":2,"text":"they still managed to step on each others'\ntoes."},"1592":{"dur":3,"text":"What happens in the case that your gem does"},"1596":{"dur":3,"text":"something where it overrides some poor kernel\nfunctionality, or"},"1600":{"dur":3,"text":"it overrides the core functionality of thread\nor module"},"1603":{"dur":3,"text":"or object? Your mind of god is going to"},"1606":{"dur":2,"text":"be put in direct contention with someone else's\nmind"},"1609":{"dur":2,"text":"of god, and I'm not sure how that ends,"},"1612":{"dur":1,"text":"depending on your theology, but I'm pretty\nsure it's"},"1613":{"dur":1,"text":"bad for us."},"1615":{"dur":4,"text":"Also, Emily, yesterday, talked a lot about\nwriting good"},"1619":{"dur":2,"text":"APIs for other developers to be able to make"},"1622":{"dur":4,"text":"use of your gems. Again, metaprogramming requires\nthat everyone"},"1627":{"dur":2,"text":"else enter your mind of god in order to"},"1630":{"dur":5,"text":"code around the barriers that you built. So\nI"},"1635":{"dur":4,"text":"really, really discourage any pattern which\nlooks anything like"},"1639":{"dur":2,"text":"taking on the mind of god, taking on the"},"1641":{"dur":4,"text":"full level of responsibility for managing\nall levels of"},"1646":{"dur":1,"text":"interaction."},"1647":{"dur":6,"text":"Again, these three particular recipes, and\nthe metaprogramming cannon,"},"1654":{"dur":5,"text":"are extremely dangerous. Greppable? Eh, I\ndon't know. Sometimes."},"1659":{"dur":2,"text":"In, depending on how things are made. Are\nthey"},"1662":{"dur":5,"text":"graspable? Not really. They usually have very\nunpredictable behavior."},"1667":{"dur":2,"text":"What I prefer instead are these two bread\nand"},"1669":{"dur":4,"text":"butter solutions out of the object-orientation\nplaybook. Strategies and"},"1674":{"dur":2,"text":"delegates. I showed strategies a little bit\nearlier, where"},"1677":{"dur":2,"text":"what would happen is that you say, OK, well"},"1680":{"dur":2,"text":"including class, I want you to take on some"},"1682":{"dur":3,"text":"behavior, but managing that bolt onto the\nbehavior can"},"1686":{"dur":1,"text":"be handled somewhere else."},"1688":{"dur":1,"text":"And this is a type of a interaction that"},"1689":{"dur":2,"text":"should be intimately familiar to all of us.\nAs"},"1691":{"dur":2,"text":"Americans, well, those of us who are Americans,\nwe"},"1693":{"dur":3,"text":"are bred on the model of the assembly line."},"1697":{"dur":2,"text":"The Henry Ford model. The great innovation\nof Ford"},"1699":{"dur":2,"text":"was not the car but the assembly line."},"1702":{"dur":2,"text":"We think about the chassy coming down that\nassembly"},"1705":{"dur":2,"text":"line, it stops at a little station. That station"},"1708":{"dur":2,"text":"puts on wheels. The next station puts on windows."},"1711":{"dur":2,"text":"The next station puts on doors. Hopefully\nit puts"},"1713":{"dur":2,"text":"on the doors before the windows, but, yeah.\nDepending"},"1715":{"dur":3,"text":"on which car you have, I suppose."},"1718":{"dur":1,"text":"But the point being is that the idea that"},"1720":{"dur":2,"text":"you need to have the chassy go hey, I"},"1723":{"dur":2,"text":"need wheels and bolts it on itself. Hey, I"},"1726":{"dur":2,"text":"need windows, hey I need doors. You're making\nthat"},"1728":{"dur":4,"text":"chassy participate in the mind of god type\nbehavior."},"1733":{"dur":2,"text":"You should think of the classes as you construct"},"1735":{"dur":3,"text":"them as being on an assembly line, delegate\nthat"},"1738":{"dur":3,"text":"big piece you're building to a station. Ask\nfor"},"1742":{"dur":3,"text":"it back. Move down to the next station. Ask"},"1745":{"dur":4,"text":"it back."},"1749":{"dur":4,"text":"One other anti-pattern is laziness lookups.\nOh, excuse me,"},"1754":{"dur":0,"text":"whoops."},"1755":{"dur":4,"text":"Constant_get and constantize. These make your\ncode virtually ungreppable,"},"1759":{"dur":2,"text":"as it's very hard to find that place where"},"1761":{"dur":5,"text":"somebody chose to, why did they constantize\nsome string"},"1767":{"dur":2,"text":"that came from the user? Who knows. It's ungreppable."},"1770":{"dur":3,"text":"Don't do it. I like to type it out,"},"1773":{"dur":1,"text":"and I'll just ask the simple question - what's"},"1775":{"dur":2,"text":"wrong with a hash? I mean, a hash is"},"1777":{"dur":2,"text":"so greppable, a hash is so friendly. You look"},"1779":{"dur":2,"text":"at it, you know what's going on. Why do"},"1782":{"dur":3,"text":"you need to use constantize? Just, to be cool?"},"1786":{"dur":2,"text":"Don't. Don't do that. Don't do it."},"1788":{"dur":1,"text":"So I'd like to talk about principle techniques\nfor"},"1790":{"dur":4,"text":"happier programmer. Make lots of small, greppable\nclasses. Lots"},"1794":{"dur":2,"text":"of them. There's nothing wrong with lots of\nclasses."},"1797":{"dur":1,"text":"A lot of people say, well, it requires me"},"1798":{"dur":1,"text":"to open up a lot of files. If that's"},"1800":{"dur":2,"text":"the problem, learn your editor better. Because\neditors are"},"1803":{"dur":2,"text":"now very good at cutting vertically as well\nas"},"1806":{"dur":0,"text":"horizontally."},"1807":{"dur":3,"text":"Things like C-tags, I know, Sublime, FuzzySearch.\nBe more"},"1810":{"dur":4,"text":"comfortable creating lots and lots of tiny\nclasses. Prefer"},"1815":{"dur":3,"text":"composition and delegation. That is to say,\ndon't look"},"1819":{"dur":3,"text":"to have a mind of god object that rigs"},"1823":{"dur":4,"text":"itself together. Look for collaborators within\nyour object space"},"1828":{"dur":3,"text":"to provide small, little objects, which are\nexperts in"},"1832":{"dur":4,"text":"singular particular fields."},"1836":{"dur":2,"text":"The pattern, or the, the fancy name for this"},"1838":{"dur":4,"text":"is, is injection. That's when you create a\nsomething"},"1843":{"dur":3,"text":"special and then pass it in to an obect"},"1847":{"dur":4,"text":"that will create a, a concert of those passed-in"},"1851":{"dur":1,"text":"objects."},"1853":{"dur":3,"text":"I encourage you to love dep- inversion. Inversion\nis"},"1856":{"dur":4,"text":"just, it opens up so many pathways of thought,"},"1861":{"dur":1,"text":"is that if you think that you need to"},"1863":{"dur":3,"text":"manually bolt everything on yourself, participate\nin that god"},"1866":{"dur":3,"text":"pattern, inversion is, is freedom from that.\nWhen you"},"1870":{"dur":2,"text":"engage in the god pattern delusion, what you\nare"},"1873":{"dur":3,"text":"basically saying is that I don't trust anyone.\nYou're"},"1876":{"dur":4,"text":"being a totalitarian. Build small objects.\nYield to those"},"1880":{"dur":2,"text":"objects. And trust those tiny objects to do\nthe"},"1882":{"dur":1,"text":"right thing."},"1883":{"dur":3,"text":"Lastly, a, a thing that's kind of been in"},"1887":{"dur":2,"text":"the, in the medics of this conference is well,"},"1889":{"dur":1,"text":"what to do about comments. Should we have\ncomments"},"1891":{"dur":3,"text":"or not comments? If you embrace the strategy\npatterns,"},"1895":{"dur":4,"text":"your strategies will usually reflect that\nthing you're commenting."},"1899":{"dur":4,"text":"Like, deal_with_bobs_brain_dead_hack_for_dead\nlocks. If you name a strategy that"},"1903":{"dur":2,"text":"way, it's very obvious why you did it, what"},"1906":{"dur":2,"text":"it's for, and it turns out that the object"},"1908":{"dur":3,"text":"name space can teach other readers of your\ncode"},"1911":{"dur":2,"text":"as much about your code as a comment could."},"1914":{"dur":3,"text":"Further, comments age rapidly. Code is always\ngonna be"},"1917":{"dur":2,"text":"executed. So keep in mind that your code will"},"1920":{"dur":3,"text":"always speak louder than your comment."},"1924":{"dur":5,"text":"For further reference, practical object-oriented\ndesign with Ruby. I"},"1929":{"dur":1,"text":"can't sing it highly enough. I was, as a"},"1931":{"dur":2,"text":"programmer, I was very frustrated. I was very\npainted"},"1934":{"dur":3,"text":"into a corner. In seven chapters, Sandy Mets\ncan"},"1937":{"dur":2,"text":"help you out of your particular corner and\nwill"},"1940":{"dur":4,"text":"invite you beyond. By beyond, the next book\nthat"},"1944":{"dur":2,"text":"helped me get further out was refactoring\nthe Ruby"},"1947":{"dur":3,"text":"edition. And thirdly, the design patterns\nin Ruby book."},"1951":{"dur":1,"text":"I don't know if they intended it, but Adam"},"1952":{"dur":2,"text":"and Wesley have basically built a stack of\nfree"},"1954":{"dur":2,"text":"books that are superb at moving you from a"},"1957":{"dur":4,"text":"beginner to intermediate Rubyist to maybe\nan intermediate advanced"},"1962":{"dur":5,"text":"object-oriented, object-loving Rubyist."},"1967":{"dur":3,"text":"So winding up, metaprogramming. Don't write\nmore of it."},"1970":{"dur":3,"text":"But let's just stop. Do understand it. The\nreason"},"1974":{"dur":1,"text":"you have to understand it, is well there's\na"},"1975":{"dur":2,"text":"whole lot of legacy code out there that needs"},"1978":{"dur":3,"text":"some refactoring. And the other part is that\nit's"},"1982":{"dur":2,"text":"also a very helpful technique when you're\nin a"},"1984":{"dur":3,"text":"really, really difficult debugger situation.\nIf you need to"},"1987":{"dur":3,"text":"live update something it's very handy. Although,\nthat said,"},"1991":{"dur":2,"text":"I saw some things in Pry yesterday that make"},"1993":{"dur":3,"text":"this less and less of a necessity, so."},"1997":{"dur":1,"text":"Use it only to refactor. It seems to be"},"1998":{"dur":1,"text":"the future direction."},"1999":{"dur":3,"text":"I'd like to thank everyone I work with at"},"2002":{"dur":2,"text":"Shop it To Me. All of them have dealt"},"2005":{"dur":3,"text":"with my kooky ideas about metaprogramming\nfor a long"},"2008":{"dur":2,"text":"time, and some of them have let me know"},"2010":{"dur":3,"text":"quite noisily that they don't like it. I want"},"2014":{"dur":1,"text":"to thank the Addison Wesley authors who have\nreally"},"2016":{"dur":3,"text":"tren, a great transitional series for developers.\nI thank"},"2019":{"dur":2,"text":"my lovely girlfriend Lauren who put up with\nme"},"2021":{"dur":2,"text":"yelling about this sort of stuff at dinner.\nAnd"},"2024":{"dur":2,"text":"I want to thank everyone here because you\nare"},"2026":{"dur":4,"text":"all my favorite garbage collectors."},"2030":{"dur":2,"text":"There is no shame in garbage collecting. It\nis,"},"2032":{"dur":3,"text":"it is a great and noble profession. You have"},"2036":{"dur":1,"text":"to keep in mind that the scarab was holy"},"2037":{"dur":2,"text":"in Egypt so, and that's the lowliest of the"},"2040":{"dur":3,"text":"garbage collectors of all. So I hope that\nyou'll"},"2043":{"dur":2,"text":"take forward a lot of the object-oriented\ntechniques that"},"2045":{"dur":2,"text":"I've presented to you. I hope that you'll\nuse"},"2047":{"dur":2,"text":"them to attack code and furthermore, hope\nthat you'll"},"2050":{"dur":3,"text":"forgive me for spreading a bad meme that metaprogramming"},"2054":{"dur":1,"text":"was an awesome thing to do."},"2056":{"dur":3,"text":"Thanks so much, and I'll say one last word"},"2059":{"dur":3,"text":"is that I hope all of you always have"},"2063":{"dur":1,"text":"the courage to face your problems, and when\nthey"},"2065":{"dur":2,"text":"feel a little bit too large, just remark to"},"2067":{"dur":3,"text":"your heart, all is well. And be ready to"},"2070":{"dur":2,"text":"give those talks. I'm ready to hear some new"},"2072":{"dur":2,"text":"garbage collectors next year. So thank you\nagain."}}