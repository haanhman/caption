{"0":{"dur":3,"text":"[MUSIC PLAYING]"},"4":{"dur":2,"text":"As Paul was meant to\nsay, I'm Mat Scales."},"7":{"dur":2,"text":"I'm on Google's Web\nDeveloper Relations team,"},"9":{"dur":3,"text":"and I'm here to talk to you\nabout tools and libraries"},"13":{"dur":1,"text":"for building\nprogressive web apps."},"17":{"dur":2,"text":"Part of what makes\nprogressive web apps possible,"},"20":{"dur":2,"text":"now, is a shift in the way\nthat the platform itself"},"22":{"dur":3,"text":"is being developed."},"25":{"dur":3,"text":"On the old web, we got custom\ndesigned, high level features"},"29":{"dur":2,"text":"for achieving things\nthat W3C thought"},"31":{"dur":2,"text":"developers wanted to do."},"33":{"dur":2,"text":"Developers want images, so\nwe'll give them an image tag."},"36":{"dur":1,"text":"Developers want to lay\nthings out in tables,"},"38":{"dur":3,"text":"so we'll have a table tag."},"41":{"dur":2,"text":"The new idea is this thing\ncalled the Extensible Web,"},"44":{"dur":3,"text":"and it says that rather\nthan building simple APIs"},"47":{"dur":2,"text":"for specific things,\nwe should be getting"},"50":{"dur":2,"text":"low level, deep,\npowerful APIs that enable"},"53":{"dur":3,"text":"a much broader range of things."},"56":{"dur":1,"text":"So, rather than\na tag for images,"},"57":{"dur":1,"text":"let's have a tag for\narbitrary graphics."},"59":{"dur":3,"text":"Rather than a tag tables,\nlet's have CSS properties"},"63":{"dur":4,"text":"that let's us lay things\nout however we want."},"67":{"dur":2,"text":"This is great, and it allows us\nto upgrade our pages into apps,"},"70":{"dur":3,"text":"but there's this gap between\nthe level the platform gives us"},"73":{"dur":1,"text":"and the level we'd\nlike to work at."},"75":{"dur":2,"text":"And we can fill that\ngap with libraries."},"81":{"dur":2,"text":"In the Extensible\nWeb, the community"},"84":{"dur":3,"text":"is given the responsibility of\nproviding simple, easy to use"},"87":{"dur":3,"text":"libraries to handle the specific\nthings that developers actually"},"91":{"dur":3,"text":"want to do, and this is great\nbecause it's much easier"},"94":{"dur":2,"text":"to iterate on the\nAPI of a library"},"96":{"dur":3,"text":"than it is to iterate\nthe web platform itself."},"100":{"dur":1,"text":"This means that\neven as we speak,"},"101":{"dur":2,"text":"someone is out there\nsolving hard problems"},"104":{"dur":1,"text":"so that you don't have to."},"108":{"dur":2,"text":"Today, I'm going to talk\nabout libraries and tools"},"111":{"dur":1,"text":"for service workers."},"113":{"dur":3,"text":"I'm going to talk\nabout the new web app"},"116":{"dur":1,"text":"features in Chrome DevTools."},"118":{"dur":1,"text":"I'm also going to try\nand answer the question"},"120":{"dur":3,"text":"of is the thing that I built\nactually a progressive web app,"},"123":{"dur":1,"text":"and is there anything\nelse I need to do?"},"128":{"dur":1,"text":"Obviously, the most\nimportant new technologies"},"130":{"dur":1,"text":"as far as progressive\nweb apps are"},"132":{"dur":1,"text":"concerned is service workers."},"134":{"dur":2,"text":"Just a quick recap,\na service worker"},"136":{"dur":1,"text":"is a background thread\nfor your application."},"138":{"dur":3,"text":"It opens up new features\nlike offline push messaging"},"141":{"dur":3,"text":"and background dates sync."},"145":{"dur":3,"text":"For the offline use case,\nit acts as a network proxy"},"149":{"dur":1,"text":"right in the client."},"150":{"dur":3,"text":"So whenever your page\nrequests a resource,"},"153":{"dur":4,"text":"the service worker gets a chance\nto respond to that request."},"158":{"dur":4,"text":"It gets a chance to get in the\nway and do whatever it wants."},"162":{"dur":1,"text":"And also, just to\nremind you, this"},"164":{"dur":4,"text":"isn't about working\noffline, necessarily,"},"168":{"dur":3,"text":"because even being online\ncan be a terrible experience."},"171":{"dur":2,"text":"If you have Li-Fi,\nor if you just"},"173":{"dur":4,"text":"have a slow connection, maybe\nconnecting to hotel Wi-Fi,"},"177":{"dur":3,"text":"or maybe you're somewhere where\ndata costs a lot of money,"},"180":{"dur":4,"text":"what you really want is\nnetwork independence."},"184":{"dur":1,"text":"You want the\nexperience of your app"},"186":{"dur":2,"text":"to be great regardless\nof the network situation."},"191":{"dur":3,"text":"But in order to achieve\nthat, compact apps"},"195":{"dur":2,"text":"are going to require pretty\ncomplex service workers."},"197":{"dur":2,"text":"There'll be a lot of code,\nand there's a lot of new APIs"},"200":{"dur":1,"text":"to learn."},"201":{"dur":2,"text":"So, we're going to help\nwith that with a library"},"203":{"dur":4,"text":"we built called Service Worker\nTool Box, or SW-Toolbox."},"208":{"dur":2,"text":"This was created by\nour team at Google"},"210":{"dur":2,"text":"to abstract away\nthe common patterns"},"213":{"dur":1,"text":"for connectivity independence."},"217":{"dur":3,"text":"Here's a pretty simple example\nof a service worker written"},"221":{"dur":2,"text":"with Service Worker Toolbox."},"223":{"dur":5,"text":"You import the script from\nwherever it's residing,"},"228":{"dur":2,"text":"and that gives you a\nglobal object called"},"231":{"dur":3,"text":"toolbox that exposes the API."},"234":{"dur":3,"text":"Here we call\ntoolbox.precache, and we"},"238":{"dur":1,"text":"pass in a list of resources."},"239":{"dur":3,"text":"This says that when our\nservice worker is installed,"},"243":{"dur":3,"text":"go ahead, fetch all these\nthings, stick them in a cache"},"246":{"dur":2,"text":"so that we know that whenever\nour service worker is running,"},"249":{"dur":2,"text":"it has access to\nthese resources."},"251":{"dur":3,"text":"And you use the app shell and\nperhaps any really common,"},"255":{"dur":2,"text":"small resources\nthoroughout your app."},"261":{"dur":6,"text":"Then we use toolbox.router\nto match different behavior"},"267":{"dur":2,"text":"to different parts\nof our application."},"270":{"dur":1,"text":"So here, we're going\nto set a default."},"271":{"dur":2,"text":"We're going to say that the\ndefault behavior for any route"},"274":{"dur":2,"text":"will be something\ncalled toolbox.fastest,"},"277":{"dur":2,"text":"which we'll get to in a moment."},"279":{"dur":2,"text":"And here, you can see just\nan example of a specific more"},"281":{"dur":1,"text":"specific route."},"283":{"dur":2,"text":"This is based on\nExpressJS routing,"},"285":{"dur":2,"text":"for anyone who's built\nthis over in mode."},"288":{"dur":1,"text":"Toolbox.router.get."},"289":{"dur":4,"text":"And then there's a URL pattern,\n\/API\/, followed by anything."},"294":{"dur":2,"text":"And then the behavior here\nwill be toolbox.networkFirst."},"299":{"dur":2,"text":"Let's talk about\ntoolbox.fastest,"},"301":{"dur":2,"text":"toolbox.network first."},"304":{"dur":2,"text":"These methods are what\nwe call strategies."},"310":{"dur":1,"text":"Typically, you need to\nthink pretty carefully"},"312":{"dur":2,"text":"about exactly what\nbehavior you want"},"314":{"dur":3,"text":"for different parts\nof your application."},"318":{"dur":1,"text":"So, you need to choose\na different strategy"},"320":{"dur":4,"text":"for each route, or potentially."},"324":{"dur":4,"text":"SW-Toolbox comes with five\nbuilt-in strategies, fastest,"},"328":{"dur":4,"text":"networkFirst, cacheFirst,\ncacheOnly, and networkOnly."},"332":{"dur":2,"text":"Let's go over what they are."},"338":{"dur":3,"text":"With the fastest strategy,\na request comes in,"},"341":{"dur":2,"text":"and we race the\nnetwork and the cache."},"344":{"dur":1,"text":"Whichever one is going\nto come back first"},"346":{"dur":2,"text":"is going to return to the page."},"348":{"dur":1,"text":"In this example,\nthe cache is going"},"350":{"dur":3,"text":"to come back first, which\nis probably pretty obvious."},"353":{"dur":2,"text":"Though obviously,\nthe network will"},"355":{"dur":3,"text":"win if it wasn't in the\ncache in the first place."},"359":{"dur":1,"text":"If and when the\nnetwork ever does"},"361":{"dur":2,"text":"succeed, it updates the cache\nso that the next time this"},"363":{"dur":2,"text":"happens, even if it\ngoes to the cache,"},"365":{"dur":4,"text":"it's a slightly fresher\nversion of the resource."},"369":{"dur":2,"text":"This is good for stuff\nthat you want to be fast"},"372":{"dur":3,"text":"but is allowed to be maybe\na little bit out of date."},"376":{"dur":3,"text":"And just as a note, because this\none always uses the network,"},"379":{"dur":2,"text":"if your goal is to save\nyour user's data plan,"},"382":{"dur":2,"text":"this is obviously not\nnecessarily the best thing"},"384":{"dur":1,"text":"to do for all your resources."},"389":{"dur":2,"text":"NetworkFirst."},"391":{"dur":2,"text":"Request comes in, first\nof all we try the network,"},"394":{"dur":5,"text":"and we give that time to succeed\nor fail, and only if it fails,"},"399":{"dur":4,"text":"do we then go to the cache\nand return that to the page."},"403":{"dur":1,"text":"And if the network\nrequest does succeed,"},"405":{"dur":1,"text":"that updates the cache\neven though we're not"},"407":{"dur":1,"text":"coming from the cache\nthis time around."},"409":{"dur":1,"text":"So the next time we try\nit when we're offline"},"411":{"dur":4,"text":"or whether the network times\nout, we get more a up to date"},"415":{"dur":0,"text":"cached version."},"420":{"dur":2,"text":"You can imagine, fastest\nand networkFirst,"},"422":{"dur":2,"text":"good for slightly\ndifferent things."},"425":{"dur":3,"text":"If you imagine a Twitter\nclient, then when you first"},"428":{"dur":3,"text":"load your application,\nyour highest priority"},"431":{"dur":3,"text":"is getting stuff on screen so\nthe user has your application."},"435":{"dur":3,"text":"So, perhaps you use fastest\nto load the latest tweets"},"438":{"dur":3,"text":"because it's better to show\nold tweets than show no tweets."},"441":{"dur":3,"text":"Whereas when the user\ndoes a pull to refresh,"},"445":{"dur":2,"text":"that's a pretty strong\nsignal they actually"},"447":{"dur":1,"text":"want the freshest data."},"449":{"dur":2,"text":"So, go to the network,\nand only go from the cache"},"451":{"dur":1,"text":"if you can't use the network."},"456":{"dur":2,"text":"There's an important\nextra option to this one"},"459":{"dur":2,"text":"because it turns out\nthat on mobile devices,"},"461":{"dur":3,"text":"that network timeout\ncan be two minutes."},"465":{"dur":3,"text":"So, if you have Li-Fi, and\nyour device is absolutely"},"468":{"dur":3,"text":"convinced it has a connection\nbut it doesn't really,"},"472":{"dur":2,"text":"then you can have\nsome sort of action,"},"474":{"dur":2,"text":"and it can be two\nminutes before you even"},"477":{"dur":1,"text":"decide to try the cache."},"479":{"dur":3,"text":"So, we've added an option\nfor the networkFirst strategy"},"482":{"dur":3,"text":"that lets you say give a\nmore reasonable time out."},"486":{"dur":1,"text":"Here we're saying,\nafter five seconds."},"487":{"dur":1,"text":"I don't care about\nwhat's on the network."},"489":{"dur":1,"text":"I'd rather show something."},"495":{"dur":2,"text":"CacheFirst."},"497":{"dur":1,"text":"Go to the cache."},"498":{"dur":3,"text":"Only if it's not there\ndo we go to the network."},"501":{"dur":3,"text":"Sort of the opposite\nof networkFirst."},"504":{"dur":2,"text":"Again, the network\nwill update the cache,"},"507":{"dur":2,"text":"but one of the important\nthings to realize here"},"509":{"dur":3,"text":"is that once that network\nrequest has succeeded once,"},"512":{"dur":1,"text":"it will be in the cache,\nand so the cache will"},"514":{"dur":4,"text":"be consulted every time, and\nit will never be updated."},"519":{"dur":2,"text":"This is still pretty\ngood for some cases."},"521":{"dur":2,"text":"If you have versioned URLs,\nif you have some reason where"},"524":{"dur":3,"text":"the URL will change whenever\nthe content changes,"},"527":{"dur":3,"text":"this will work fine for that."},"531":{"dur":4,"text":"And this might be\nfor things that you"},"535":{"dur":2,"text":"want to be able to cache,\nthe things that don't change"},"538":{"dur":3,"text":"but aren't part of\nyour application shell."},"541":{"dur":2,"text":"The example I've been\nusing is blog posts."},"543":{"dur":2,"text":"You don't want to download\n10 years worth of blog post's"},"545":{"dur":2,"text":"the very first time\nsomeone comes to your blog,"},"547":{"dur":1,"text":"but if they have\nbeen to your site"},"549":{"dur":3,"text":"and downloaded a few posts, it's\nreasonable to keep them around."},"555":{"dur":1,"text":"CacheOnly."},"556":{"dur":4,"text":"This is go to the cache, and\nif it's not in the cache, fail."},"561":{"dur":2,"text":"This is good for the\nstuff that you precached"},"563":{"dur":1,"text":"because you know it's there."},"565":{"dur":3,"text":"And then networkOnly, go to\nthe network, and if it fails,"},"568":{"dur":2,"text":"This is what you got\nwithout service worker,"},"571":{"dur":1,"text":"and the only real\nreason to use this"},"573":{"dur":2,"text":"is that if you've overridden\nthe default with something"},"575":{"dur":2,"text":"like toolbox.fastest,\nthis allows"},"578":{"dur":2,"text":"you to go back to the original\nbehavior just for one route."},"584":{"dur":3,"text":"And if those don't do\neverything you need to do,"},"587":{"dur":2,"text":"you can also define\nyour own strategies."},"590":{"dur":6,"text":"Here we have a function I've\ncreated called fallbackImage."},"597":{"dur":2,"text":"What this does is\nit takes a request,"},"599":{"dur":3,"text":"and it will try and fetch\nthat request from the network."},"603":{"dur":2,"text":"And if it fails, it will\nrespond from the cache,"},"605":{"dur":4,"text":"but it won't try and\nrespond with that a cache"},"609":{"dur":1,"text":"of that specific request."},"611":{"dur":3,"text":"It will always respond\nwith this fallback.jpg."},"615":{"dur":2,"text":"You can use this, for example,\nif you have hundreds of profile"},"617":{"dur":1,"text":"images on a page somewhere."},"619":{"dur":2,"text":"Perhaps it's not actually\nthat important to have"},"621":{"dur":1,"text":"that in your offline\nexperience, and you"},"623":{"dur":4,"text":"don't want to fill the user's\ndevice with those images,"},"628":{"dur":2,"text":"so you have a single image\nthat uses a fallback instead."},"631":{"dur":1,"text":"And to make this\nuseful, you have"},"632":{"dur":2,"text":"to make sure you've\nprecached the fallback image"},"635":{"dur":2,"text":"and then set up a route\nthat actually uses it."},"637":{"dur":1,"text":"It's just the same as\nbefore, except instead"},"639":{"dur":2,"text":"of using toolbox dot whatever,\nwe've used fallbackImage."},"645":{"dur":5,"text":"And finally on toolbox, you can\nget fine control of the cache"},"650":{"dur":0,"text":"as well."},"651":{"dur":2,"text":"By default, when\nyou call precache,"},"653":{"dur":4,"text":"or when you use cacheOnly,\nor fastest, or whatever,"},"657":{"dur":3,"text":"the cache that it uses\nis shared over everything"},"661":{"dur":1,"text":"in your whole application."},"662":{"dur":3,"text":"It's a default cache that\nSW-Toolbox creates for you."},"669":{"dur":2,"text":"You can on an ad hoc\nbasis say for this route,"},"671":{"dur":2,"text":"I want to use a different\ncache for whatever reason."},"674":{"dur":2,"text":"Here, we passed in an\noption called cache,"},"677":{"dur":2,"text":"and we've set a name so that\nit will be a different named"},"679":{"dur":3,"text":"cache that it uses, and now we\ncan set options on that cache"},"683":{"dur":3,"text":"so that this cache can only\nhave up to 500 entries,"},"686":{"dur":5,"text":"and entries can only be in\nthere for up to five days."},"691":{"dur":3,"text":"And SW-Toolbox will go in\nand clean up periodically."},"700":{"dur":2,"text":"Something we've kind of glossed\nover there with SW-Toolbox"},"702":{"dur":3,"text":"is that that precaching\nstep is actually trickier"},"705":{"dur":1,"text":"than it looks there."},"707":{"dur":2,"text":"There are a few problems."},"710":{"dur":4,"text":"One is that in order to\nget a new install event,"},"714":{"dur":2,"text":"you need to change the\nservice worker script."},"716":{"dur":2,"text":"Not something that service\nworker script imports,"},"719":{"dur":1,"text":"but the actual, original\nservice worker script."},"721":{"dur":1,"text":"So you have to remember\nto actually update"},"722":{"dur":3,"text":"that every time you do a\nrelease that changes some"},"726":{"dur":3,"text":"of the resource even if\nthe service worker itself,"},"729":{"dur":2,"text":"the logic, doesn't\nneed to change."},"732":{"dur":3,"text":"Another problem is that when\nthe install event happens,"},"736":{"dur":2,"text":"SW-Toolbox will take\nall those resources"},"738":{"dur":3,"text":"and just download them all\nagain even if none of them"},"741":{"dur":0,"text":"have actually changed."},"746":{"dur":3,"text":"You also have to maintain\na list of which resources"},"750":{"dur":1,"text":"need to be precached."},"752":{"dur":2,"text":"It would be quite easy to miss\nsomething out of that array"},"754":{"dur":2,"text":"and then find that\nin your next release,"},"757":{"dur":3,"text":"your offline experience is\nslightly broken because a file"},"760":{"dur":1,"text":"didn't make it into there."},"767":{"dur":4,"text":"So, we created a tool to help\nwith this called SW-Precache."},"771":{"dur":2,"text":"What this does is it takes\na few simple options,"},"774":{"dur":2,"text":"and it writes a\nservice worker for you."},"776":{"dur":3,"text":"It's something you can\nstick in your build step."},"779":{"dur":1,"text":"You tell it which files\nyou want to cache,"},"781":{"dur":3,"text":"it will take a hash of each\nfile along with the file name,"},"785":{"dur":2,"text":"and write those directly\ninto the service worker."},"788":{"dur":3,"text":"So if any of your resources\nchange, the hash will change,"},"791":{"dur":1,"text":"the service worker\nitself will change,"},"792":{"dur":2,"text":"and you'll get a new install."},"795":{"dur":2,"text":"It also means that when\nan install event fires,"},"798":{"dur":3,"text":"the service worker has a list\nof every resource with its hash"},"802":{"dur":3,"text":"so it can compare it to what it\nalready has and only download"},"805":{"dur":2,"text":"things that have\nchanged or are new."},"814":{"dur":3,"text":"This can be used as a command\nline tool, installable"},"817":{"dur":5,"text":"via node, and then you run\nwe-precache, and here's"},"822":{"dur":2,"text":"the simplest option setup."},"824":{"dur":1,"text":"You say where the root\nof your application is,"},"826":{"dur":2,"text":"and it will just precache\neverything in that folder."},"832":{"dur":3,"text":"You can also use it as a\nrequirable node module,"},"835":{"dur":1,"text":"so you require an sw-precache."},"836":{"dur":2,"text":"You call precache.write."},"839":{"dur":2,"text":"You say which service worker\nfile you want to write,"},"841":{"dur":1,"text":"and then you can\npass in some options."},"843":{"dur":1,"text":"Here, we've said\nwe're going to use"},"844":{"dur":3,"text":"this glob pattern to say\nwhich static files we actually"},"847":{"dur":0,"text":"want to cache."},"852":{"dur":2,"text":"And if you're wondering whether\nthat means that we've now"},"855":{"dur":4,"text":"lost the ability to do that\ndynamic caching that SW-Toolbox"},"859":{"dur":2,"text":"gave us, there are actually\ntwo ways to bring it back."},"862":{"dur":2,"text":"The first is with this\nruntime caching option."},"865":{"dur":6,"text":"You pass in an array of objects\nwhich specify those routing"},"871":{"dur":2,"text":"rules that you\nhad in SW-Toolbox,"},"874":{"dur":1,"text":"so you have the\nURL pattern, then"},"876":{"dur":3,"text":"you have which strategy to use."},"879":{"dur":1,"text":"You can even pass in options."},"880":{"dur":2,"text":"So we have the network\ntimeout seconds option."},"885":{"dur":2,"text":"This is great for\nmost simple cases,"},"887":{"dur":3,"text":"particularly if you're only\nusing the built-in strategies."},"891":{"dur":1,"text":"if you want to do\nsomething a bit more fancy,"},"893":{"dur":1,"text":"if you want a bit\nmore control, you"},"895":{"dur":2,"text":"can just say that you want to\nimport a service worker script"},"897":{"dur":1,"text":"that you've written yourself."},"899":{"dur":1,"text":"You could let\nSW-Precache handle all"},"901":{"dur":2,"text":"of the static resources\nfor your app shell,"},"903":{"dur":3,"text":"and then do the dynamic caching\nusing a service worker toolbox"},"907":{"dur":2,"text":"script that you wrote yourslef,\nand it will inline that"},"910":{"dur":2,"text":"into your service worker."},"913":{"dur":2,"text":"This also allows\nyou to add in things"},"915":{"dur":2,"text":"like push notifications\nand background suynk"},"918":{"dur":2,"text":"into SW-Precache's\nservice worker as well."},"925":{"dur":2,"text":"Serviceworker doesn't work\neverywhere, as Paul said,"},"928":{"dur":4,"text":"and AppCache does."},"932":{"dur":3,"text":"Just to reiterate, should I\nuse AppCache in a new project?"},"936":{"dur":3,"text":"No, because it's terrible,\nand doesn't do what you want."},"940":{"dur":2,"text":"And the more you\ncontort your application"},"942":{"dur":2,"text":"to try and fit\nAppCache, the more you"},"944":{"dur":1,"text":"find that it's still\nnot going to work,"},"946":{"dur":1,"text":"and you have to\ncontort even more."},"948":{"dur":3,"text":"And it has security problems,\nand it's generally bad."},"951":{"dur":1,"text":"I can't stress that enough."},"953":{"dur":3,"text":"However, if you've\nalready got an AppCache"},"956":{"dur":2,"text":"for your application,\nwe have a tool"},"959":{"dur":1,"text":"that will help you transition."},"960":{"dur":4,"text":"So sw-appcache-behavior is this\nlittle library we've created."},"965":{"dur":5,"text":"What it does is you import the\nlibrary into a service worker"},"971":{"dur":2,"text":"This could be your entire\nservice worker script"},"974":{"dur":1,"text":"if you wanted."},"975":{"dur":1,"text":"You create a fetch\nhandler, and you just"},"977":{"dur":1,"text":"say in that fetch\nhandler I want to respond"},"978":{"dur":4,"text":"with whatever the legacy\nAppCache behavior would be,"},"983":{"dur":1,"text":"essentially."},"984":{"dur":2,"text":"What this will do is it will\nget your AppCache manifest,"},"987":{"dur":2,"text":"pause it, work out\nwhat the correct thing"},"989":{"dur":4,"text":"to do for an AppCache\nwould be, and then do that."},"994":{"dur":3,"text":"But it also allows you to get\naround some of the security"},"998":{"dur":2,"text":"issues and some of\nthe things like never"},"1000":{"dur":3,"text":"getting into a state where\nthe AppCache is never updated."},"1004":{"dur":2,"text":"Service worker won't actually\nallow you to do that."},"1011":{"dur":4,"text":"SW-AppCache behavior is\njust one of a set of things"},"1016":{"dur":6,"text":"that we're releasing as\npart of our SW-Helpers repo."},"1022":{"dur":2,"text":"As an example of something\nelse we're doing,"},"1024":{"dur":2,"text":"there's offline analytics."},"1027":{"dur":3,"text":"This was written for last\nyear's Google I\/O website,"},"1030":{"dur":3,"text":"and it was used again this year."},"1034":{"dur":2,"text":"What this does is you set\nup a route for any analytics"},"1036":{"dur":3,"text":"requests that uses the\nstrategy function that's"},"1040":{"dur":4,"text":"provided by the library, and\nwhenever one of those analytics"},"1045":{"dur":4,"text":"requests fails, it will stash\nit away somewhere, queue it up."},"1050":{"dur":2,"text":"And then when you the user\ncomes back online again,"},"1052":{"dur":3,"text":"it will replay it and add a\nparameter so that it correctly"},"1055":{"dur":5,"text":"attributes the event to the\ntime it actually happened."},"1060":{"dur":2,"text":"And we're hoping to add many\nmore things to this repo"},"1063":{"dur":1,"text":"for the next coming months."},"1069":{"dur":1,"text":"That was service worker."},"1070":{"dur":1,"text":"What are the tools?"},"1071":{"dur":3,"text":"What are the things\nwe can help with?"},"1075":{"dur":1,"text":"No talk about developer\ntools is going"},"1076":{"dur":4,"text":"to be complete without talking\nabout Chrome's developer tools."},"1081":{"dur":1,"text":"There are some great\nnew progressive web"},"1082":{"dur":4,"text":"app features coming up\nin the next release."},"1087":{"dur":3,"text":"Almost all of this is only\navailable from Chrome 52, which"},"1091":{"dur":4,"text":"is currently in beta, but\nit's moving toward stable"},"1095":{"dur":0,"text":"in a few weeks."},"1099":{"dur":3,"text":"First, the Application panel\nhas been renamed-- sorry,"},"1103":{"dur":2,"text":"the Resource panel has\nbeen renamed to Application"},"1105":{"dur":1,"text":"to better reflect\nthat this is now"},"1106":{"dur":5,"text":"where you go to look at\nthings to do with a web app."},"1111":{"dur":8,"text":"This first panel allows\nyou to debug your manifest,"},"1119":{"dur":3,"text":"so it lists what the\nbrowser has detected"},"1122":{"dur":2,"text":"as the name of the\napplication, what"},"1125":{"dur":4,"text":"icons to use, what\ntheme color to use,"},"1129":{"dur":1,"text":"what the start URL\nis, things like that,"},"1131":{"dur":2,"text":"and also gives you\nthis Add To Homescreen"},"1133":{"dur":3,"text":"button that allows you\nto trigger the On Before"},"1136":{"dur":3,"text":"Install prompt so you can\ntest code to do with delaying"},"1140":{"dur":0,"text":"the install prompt."},"1146":{"dur":3,"text":"Service Worker panel\nhas been redesigned"},"1150":{"dur":3,"text":"to hopefully be a lot clearer."},"1154":{"dur":3,"text":"All of the service workers\nfor the current application"},"1157":{"dur":2,"text":"will be shown in a list,\nwhich I probably should"},"1159":{"dur":1,"text":"have got a screenshot of."},"1161":{"dur":2,"text":"It will be less confusing\nabout which one's active"},"1163":{"dur":2,"text":"and what you can actually do to\neach of those service workers."},"1166":{"dur":2,"text":"It has all of the same features\nthat it did before but it"},"1168":{"dur":2,"text":"has some extra ones, too."},"1171":{"dur":2,"text":"At the top here, there are\nthese three checkboxes."},"1174":{"dur":3,"text":"Offline is a shortcut to the\nsame thing in the Network panel"},"1177":{"dur":4,"text":"that says you want the network\ncondition to be offline."},"1181":{"dur":4,"text":"That is great for testing\nthe offline behavior"},"1186":{"dur":2,"text":"of your application, which\nmakes sure that your service"},"1188":{"dur":1,"text":"worker is working correctly."},"1190":{"dur":3,"text":"Update On Reload\nmeans that whenever"},"1194":{"dur":5,"text":"the origin is refreshed, it will\ncheck for a new service worker"},"1200":{"dur":1,"text":"and potentially do an\ninstall if it's changed,"},"1201":{"dur":2,"text":"do the whole service\nworker install dance"},"1204":{"dur":4,"text":"regardless of how long it's\nbeen since it last checked."},"1209":{"dur":3,"text":"And Bypass For Network says that\nthe service worker should load."},"1213":{"dur":2,"text":"The install and activate\nevents should happen."},"1215":{"dur":2,"text":"It should still be called\nfor push and background sync,"},"1217":{"dur":1,"text":"but the fetch event\nshould never be"},"1219":{"dur":4,"text":"fired Whenever any\nrequest comes in,"},"1223":{"dur":4,"text":"it should not try the\nservice worker to resolve it."},"1227":{"dur":4,"text":"And this is good if you've got\nyour save and refresh workflow"},"1232":{"dur":3,"text":"going on for a resource that\nwould be cached for a long time"},"1235":{"dur":0,"text":"by service worker."},"1236":{"dur":2,"text":"It allows you to just go\nback to your normal workflow"},"1239":{"dur":0,"text":"and development."},"1243":{"dur":3,"text":"The Clear Storage panel."},"1246":{"dur":2,"text":"As a consumer of\nChrome, you've probably"},"1248":{"dur":3,"text":"seen the feature of Clear\nPrivate Browsing Data."},"1252":{"dur":2,"text":"That allows you to get\nrid of cookies and things"},"1254":{"dur":2,"text":"like that for a period of time."},"1257":{"dur":2,"text":"You say I want to get\nrid of private browsing"},"1259":{"dur":4,"text":"data from a day ago, the\nlast week, or forever."},"1264":{"dur":2,"text":"Whereas, this is a bit\nmore developer-oriented."},"1266":{"dur":2,"text":"This is for the\ncurrent origin only,"},"1268":{"dur":1,"text":"I would like to\nclear these things,"},"1270":{"dur":1,"text":"and the options\nthat it gives you"},"1272":{"dur":5,"text":"are things like service worker,\nthe cache, index DB, and things"},"1277":{"dur":2,"text":"like that a developer might\nbe more interested in."},"1282":{"dur":1,"text":"And also want to\ncall out a feature"},"1283":{"dur":1,"text":"that's actually\nbeen there a while"},"1284":{"dur":2,"text":"but people don't necessarily\nknow about, which is down here,"},"1287":{"dur":2,"text":"is this Cache\nStorage Viewer that"},"1290":{"dur":6,"text":"lets you see what things are\nactually in the cache API cache"},"1297":{"dur":2,"text":"that you're using with\nyour service worker."},"1299":{"dur":2,"text":"This can help you debug\nissues with precaching"},"1302":{"dur":4,"text":"or when a request is\nfailing, something you think"},"1306":{"dur":0,"text":"should be in the cache."},"1312":{"dur":3,"text":"Finally, I was going to\ntalk about the question"},"1316":{"dur":2,"text":"of is my thing actually\na progressive web app?"},"1318":{"dur":2,"text":"Now, I don't think we can\nreally answer that question"},"1321":{"dur":1,"text":"because it's a bit\nof an open question,"},"1323":{"dur":3,"text":"but we can try and get\na bit further there."},"1326":{"dur":1,"text":"One of the things\nthat we call here"},"1328":{"dur":2,"text":"is if we had a button we could\nclick that would just tell"},"1330":{"dur":2,"text":"me is it a progressive web app?"},"1333":{"dur":1,"text":"Am I there yet?"},"1334":{"dur":4,"text":"So, the Chrome team built one,\nand we called it Lighthouse."},"1338":{"dur":3,"text":"This is both a Chrome extension\nand a node-based command line"},"1341":{"dur":2,"text":"tool which has a whole\nbunch of different tests"},"1344":{"dur":4,"text":"in it that it runs on your site\nand gives you advice on things"},"1348":{"dur":3,"text":"that you might be missing."},"1351":{"dur":2,"text":"It also has this very cool,\nprofessional-looking logo."},"1357":{"dur":2,"text":"As a Chrome extension,\nyou load up your page,"},"1360":{"dur":2,"text":"you click the\nbutton, and then it"},"1362":{"dur":2,"text":"will reload the\npage a few times,"},"1365":{"dur":4,"text":"connect with the remote\ndebugging protocol,"},"1369":{"dur":4,"text":"gather a whole bunch of metrics,\nand then spit out this report."},"1374":{"dur":4,"text":"It'll give you a score\nwhich will give you"},"1378":{"dur":3,"text":"a vague idea of what it\nthinks of your application,"},"1381":{"dur":3,"text":"and it will tell you anywhere\nthat it thinks that you"},"1384":{"dur":1,"text":"might have missed something."},"1386":{"dur":2,"text":"And also has this\nbest practices section"},"1388":{"dur":2,"text":"that is things that it's\nnot going to score you on."},"1390":{"dur":2,"text":"Maybe you don't actually need to\ndo these things, but if you do,"},"1393":{"dur":1,"text":"you should check on them."},"1394":{"dur":2,"text":"It just gives you\na bit of a guide."},"1399":{"dur":3,"text":"You can also run it as\na command line tool."},"1402":{"dur":2,"text":"Just for anyone who's\nthinking of typing in URLs"},"1405":{"dur":3,"text":"they see on the screen,\nairhorner.com makes a noise."},"1408":{"dur":1,"text":"I give this talk at\nI\/O, and about 30"},"1410":{"dur":2,"text":"seconds after this slide\ncame up, someone was like--"},"1412":{"dur":0,"text":"[HONKS]"},"1413":{"dur":1,"text":"--from the audience."},"1415":{"dur":1,"text":"So you run it on\nthe command line,"},"1417":{"dur":5,"text":"and by default, it will output\npretty printed to the console."},"1422":{"dur":1,"text":"You can also output\nJSON that you"},"1424":{"dur":3,"text":"can pause yourself\nor the same HTML"},"1428":{"dur":1,"text":"that the extension gives you."},"1432":{"dur":2,"text":"It's also requireable\nas a node module,"},"1434":{"dur":3,"text":"so you can say lighthouse,\nand then the URL,"},"1437":{"dur":2,"text":"and that returns a promise\nwhich resolves with the JSON"},"1440":{"dur":2,"text":"that you would have got\nfrom the command line tool."},"1443":{"dur":3,"text":"And obviously, the\nCLI and node module"},"1446":{"dur":2,"text":"are both good ways\nof adding Lighthouse"},"1449":{"dur":3,"text":"to your regular tasks or\ncontinuous integration."},"1456":{"dur":3,"text":"I'd like to draw attention to\nthe big Alpha in the corner"},"1460":{"dur":2,"text":"I just want to be clear\nthat this is early stages."},"1463":{"dur":1,"text":"None of the rules are final."},"1464":{"dur":1,"text":"I'm sure there's a\nlot of discussion"},"1466":{"dur":2,"text":"to be had about\nwhat the rules say"},"1468":{"dur":2,"text":"and whether they're good rules."},"1470":{"dur":2,"text":"If you would like to\ncontribute to that discussion,"},"1472":{"dur":1,"text":"or better yet,\ncontribute pull requests,"},"1474":{"dur":2,"text":"you can find us on GitHub."},"1477":{"dur":2,"text":"And I'd also like to point out\nthat this currently only works"},"1479":{"dur":3,"text":"in Chrome 52+, which\nis currently in beta."},"1486":{"dur":4,"text":"To recap, progressive\nweb applications"},"1490":{"dur":2,"text":"are made possible by\nthe Extensible Web."},"1493":{"dur":4,"text":"They're made practical\nby libraries and tools."},"1497":{"dur":2,"text":"There are a whole bunch of\nservice worker libraries"},"1499":{"dur":5,"text":"out there from Google and\nfrom others with more coming."},"1505":{"dur":1,"text":"Chrome DevTools is\nawesome, as always,"},"1507":{"dur":4,"text":"and Lighthouse attempts to\ntell you when you're done."},"1511":{"dur":2,"text":"That's probably a bit too\ndefinite in this slide."},"1513":{"dur":2,"text":"OK, thank you very much."},"1516":{"dur":1,"text":"I hope that was useful."},"1517":{"dur":3,"text":"[APPLAUSE]"},"1520":{"dur":3,"text":"[MUSIC PLAYING]"}}