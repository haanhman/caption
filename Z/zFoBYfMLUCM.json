{"0":{"dur":3,"text":"[MUSIC PLAYING]"},"10":{"dur":2,"text":"ADDY: So today we're going to\ntalk about Webpack performance"},"13":{"dur":0,"text":"tips."},"14":{"dur":1,"text":"MATT: Performance\nof the JavaScript"},"16":{"dur":2,"text":"you're serving up in the\nbrowser, not Webpack itself."},"18":{"dur":1,"text":"ADDY: So let's start\nwith minification."},"20":{"dur":2,"text":"You should be minifying\nany of the code"},"22":{"dur":1,"text":"that you're sending down."},"23":{"dur":2,"text":"With Webpack there are a few\ninteresting nuances there."},"26":{"dur":2,"text":"First thing to do if\nyou're shipping ES5 code"},"29":{"dur":3,"text":"is to use the uglifyJs plugin."},"32":{"dur":3,"text":"Folks are probably aware of\nthat from other projects,"},"35":{"dur":0,"text":"pre-Webpack."},"36":{"dur":2,"text":"MATT: Yeah, uglifyJs is\nthe standard one, yep."},"38":{"dur":2,"text":"ADDY: Now we're going to\nhave to get a little bit"},"41":{"dur":3,"text":"creative is, if you're shipping\nanything other than ES5"},"44":{"dur":0,"text":"down to your users."},"45":{"dur":2,"text":"So a lot of folks are\nwriting is ES15 today."},"47":{"dur":2,"text":"If you're doing that and not\ntranspiling down to ES15,"},"50":{"dur":3,"text":"make sure you're using something\nlike Babili and the Babili"},"53":{"dur":0,"text":"Webpack plug-in."},"54":{"dur":1,"text":"MATT: Yes, so those,\nit's going to minify,"},"56":{"dur":1,"text":"but it also understands ES2015s."},"58":{"dur":2,"text":"There's certain optimizations it\ncan do because it understands."},"60":{"dur":1,"text":"It's a little bit\nbetter than uglifyJs."},"62":{"dur":1,"text":"MATT: Yes."},"64":{"dur":1,"text":"ADDY: Next thing folks\nshould make sure they're"},"65":{"dur":1,"text":"doing is minifying their CSS."},"67":{"dur":1,"text":"Now it sounds very\nstraightforward."},"69":{"dur":2,"text":"However, if you were\nloading in any CSS"},"71":{"dur":3,"text":"using Webpack's CSS\nloader, by default"},"75":{"dur":2,"text":"it's not going to\nminify that code."},"77":{"dur":2,"text":"Effectively, you're putting\none type of file format"},"80":{"dur":0,"text":"into another."},"81":{"dur":2,"text":"Like that's going to get stuck\ninto your JavaScript bundles."},"83":{"dur":2,"text":"So make sure that you're\npassing minimize true."},"86":{"dur":1,"text":"MATT: So at least\nwhatever you're putting"},"87":{"dur":2,"text":"in there is at least small."},"89":{"dur":1,"text":"ADDY: Exactly."},"91":{"dur":3,"text":"Ideally you don't have to\nthink about that because you're"},"94":{"dur":3,"text":"actually extracting your CSS\nto a completely separate file."},"98":{"dur":1,"text":"ADDY: That's our\npreferred option."},"100":{"dur":0,"text":"There are benefits to that."},"101":{"dur":1,"text":"You don't have to double parse."},"102":{"dur":2,"text":"It doesn't have to parse\nyour JavaScript in order"},"104":{"dur":0,"text":"to parse your CSS."},"105":{"dur":2,"text":"It's also going to cache\na little bit better"},"107":{"dur":1,"text":"on the browser side of things."},"109":{"dur":1,"text":"Because you're not\ngoing to invalidate"},"110":{"dur":2,"text":"your bundle every single\ntime you're making a change."},"113":{"dur":1,"text":"Your CSS, your jobs\ndescriptor, you're keeping"},"115":{"dur":1,"text":"those things pretty separate."},"116":{"dur":3,"text":"In Webpack, use the extract text\nplug-in to get that working."},"120":{"dur":2,"text":"MATT: Cool, sounds good."},"122":{"dur":2,"text":"ADDY: Next thing,\ntake advantage of ES"},"124":{"dur":3,"text":"module imports and\nexports for tree-shaking"},"127":{"dur":0,"text":"your dependency graph."},"128":{"dur":0,"text":"MATT: Yep."},"129":{"dur":1,"text":"ADDY: What is tree-shaking?"},"130":{"dur":1,"text":"MATT: I'm still\nfiguring this out."},"132":{"dur":2,"text":"So tree-shaking\none way or another"},"134":{"dur":2,"text":"is where we can remove\ndead code in terms"},"136":{"dur":1,"text":"of your imports and exports."},"137":{"dur":1,"text":"Because if you import\nsomething and there's"},"139":{"dur":3,"text":"a ton of other exports you\ndon't use, they can be removed."},"143":{"dur":2,"text":"I believe though, if you\nimport one thing from a file,"},"145":{"dur":1,"text":"it'll import all of the exports."},"147":{"dur":1,"text":"But then it would\ntree-shake beyond that."},"149":{"dur":1,"text":"I don't know, there's some\nfunky stuff from [INAUDIBLE].."},"150":{"dur":0,"text":"ADDY: They're supposed\nto have nuanced"},"151":{"dur":1,"text":"this stuff around tree-shaking."},"153":{"dur":1,"text":"will remove code you don't use."},"154":{"dur":0,"text":"ADDY: Yes."},"155":{"dur":2,"text":"Now in Webpack, one of\nthe lesser-known things"},"157":{"dur":3,"text":"is that unused code itself\nis not removed by Webpack."},"161":{"dur":2,"text":"It's done by a\nminifier like uglifyJs."},"163":{"dur":1,"text":"So Webpack is just going\nto remove your export"},"165":{"dur":1,"text":"statements that are used\nfor exports that you're not"},"167":{"dur":0,"text":"actually using."},"168":{"dur":1,"text":"You still need to use\na minifier to get rid"},"169":{"dur":1,"text":"of the rest of that code."},"170":{"dur":0,"text":"So make sure--"},"171":{"dur":2,"text":"MATT: Just any dead\ncode paths that it knows"},"173":{"dur":1,"text":"is never going to actually run."},"174":{"dur":2,"text":"ADDY: Exactly, exactly."},"177":{"dur":1,"text":"Another useful\nthing is making sure"},"178":{"dur":2,"text":"that you're running\nWebpack in production mode."},"181":{"dur":1,"text":"MATT: Yes, this\nis a Webpack thing"},"182":{"dur":1,"text":"I was very confused about\nwhen I first heard about it."},"184":{"dur":1,"text":"But it kind of makes sense."},"185":{"dur":1,"text":"ADDY: Yes, so two\nways to do this."},"187":{"dur":3,"text":"You can patch the -p option\nto Webpack itself, which"},"190":{"dur":1,"text":"will take care of\nboth minification"},"192":{"dur":2,"text":"and setting your node\nenvironment variable"},"194":{"dur":2,"text":"to production effectively."},"197":{"dur":2,"text":"Another thing you can do is\nuse the Webpack to find plug-in"},"199":{"dur":1,"text":"to accomplish the same thing."},"201":{"dur":1,"text":"That's how I usually do it."},"203":{"dur":2,"text":"I totally forgot\nWebpack -p was a thing."},"205":{"dur":3,"text":"So to find plug-in is good for\nslightly more complex cases."},"208":{"dur":2,"text":"I just JSON stringify\nmy production settings"},"210":{"dur":1,"text":"and just have it."},"211":{"dur":0,"text":"MATT: Done, nice."},"212":{"dur":2,"text":"ADDY: Useful for\nwhen a library has"},"214":{"dur":2,"text":"to switch between like\nthe dev or debug builds"},"217":{"dur":1,"text":"or the production builds."},"218":{"dur":2,"text":"MATT: Yep, all sounds good."},"221":{"dur":2,"text":"ADDY: Another thing that's\nuseful is taking stock"},"224":{"dur":1,"text":"of what you're\nactually shipping down"},"225":{"dur":3,"text":"using a bundle analyzer\nor a source map explorer."},"228":{"dur":1,"text":"So lots of good\ntools for this stuff."},"230":{"dur":2,"text":"Can help you identify\nwhether you're shipping code"},"232":{"dur":2,"text":"that you didn't expect to be\nshipping down to your users."},"235":{"dur":2,"text":"Whether there are like modules\nthat you can maybe switch out"},"238":{"dur":1,"text":"for much smaller alternatives."},"239":{"dur":1,"text":"MATT: It's always good\nwith [INAUDIBLE] code,"},"241":{"dur":1,"text":"because it's just,\nyou'll eventually"},"242":{"dur":2,"text":"get an overall picture of where\nall the sizes are actually"},"245":{"dur":2,"text":"And then get a feel very\neasily of what percentage"},"248":{"dur":1,"text":"is coming from where."},"249":{"dur":2,"text":"ADDY: Another good thing to\ndo is splitting up your vendor"},"251":{"dur":2,"text":"libraries into a\ncompletely separate bundle,"},"254":{"dur":1,"text":"separate chunk."},"255":{"dur":2,"text":"Now your vendor libraries are\nthings like your framework"},"257":{"dur":1,"text":"code, your library\ncode, that you're"},"259":{"dur":2,"text":"going to be reusing across a\nbunch of your different routes"},"262":{"dur":0,"text":"and views."},"263":{"dur":2,"text":"Stuff that if you move into\na completely separate bundle,"},"266":{"dur":1,"text":"the browser can cache."},"267":{"dur":2,"text":"And you're probably not going\nto update that code too often."},"269":{"dur":1,"text":"MATT: The only time it's\nreally going to change"},"271":{"dur":2,"text":"is if you bump up the framework\nversion or a library version."},"273":{"dur":2,"text":"Otherwise, yes, it's\ngoing to be the same."},"275":{"dur":3,"text":"ADDY: Yeah, so check out up the\nWebpack commons chunk plug-in"},"279":{"dur":2,"text":"for getting that set up."},"281":{"dur":2,"text":"Related to that\nis code splitting."},"283":{"dur":0,"text":"MATT: Yes."},"284":{"dur":1,"text":"ADDY: So what is\ncode splitting, Matt?"},"285":{"dur":1,"text":"MATT: So code splitting\nis where you're actually"},"287":{"dur":1,"text":"taking all of your code and\nrather than munge it together"},"289":{"dur":1,"text":"in one single file\nand shipping it down,"},"290":{"dur":1,"text":"you split it up\ninto several files."},"292":{"dur":1,"text":"And then you actually\nonly pull down"},"293":{"dur":1,"text":"like the most important bit."},"295":{"dur":1,"text":"And then you can easily\nload in the other bits."},"296":{"dur":0,"text":"ADDY: Exactly."},"297":{"dur":1,"text":"So the idea is that\nyou're just shipping down"},"298":{"dur":2,"text":"exactly what the user\nneeds for the current route"},"300":{"dur":2,"text":"or their current view."},"303":{"dur":3,"text":"And the difference between\nusing a static import"},"306":{"dur":1,"text":"and getting this\ndone is that you're"},"307":{"dur":2,"text":"going to start using\na dynamic import."},"309":{"dur":2,"text":"This is a newer\nJavaScript feature."},"312":{"dur":3,"text":"The idea is that you just want\na lazy load in pieces that don't"},"315":{"dur":1,"text":"need to be loaded up front."},"317":{"dur":2,"text":"ADDY: And so that allows you\nto basically move this out"},"320":{"dur":3,"text":"into code that can be deferred\nload later on in the process."},"324":{"dur":3,"text":"MATT: OK, so that is actually\nthe dynamic import standards"},"327":{"dur":0,"text":"thing."},"328":{"dur":1,"text":"And Webpack supports it."},"329":{"dur":0,"text":"ADDY: Exactly."},"330":{"dur":0,"text":"MATT: Nice."},"331":{"dur":2,"text":"ADDY: You can also take\nadvantage of dynamic import"},"333":{"dur":2,"text":"with things like React."},"335":{"dur":1,"text":"Lots of different\nthings like React router"},"337":{"dur":1,"text":"allow you to use it\ninside get component."},"339":{"dur":2,"text":"But that ends up being more\nspecific to your framework"},"341":{"dur":0,"text":"of choice."},"342":{"dur":3,"text":"ADDY: Now another thing I see\na lot of people trip up on,"},"346":{"dur":2,"text":"libraries like moment.js,\nlike the date time library."},"349":{"dur":1,"text":"MATT: Yes, I use it a lot."},"350":{"dur":1,"text":"ADDY: If you include\nit by default,"},"352":{"dur":1,"text":"it's got a relatively\nlarge size."},"353":{"dur":3,"text":"It's something like\n215, 216 kilobytes."},"357":{"dur":2,"text":"And that's because a lot\nof that file is like,"},"359":{"dur":1,"text":"it's localization stuff."},"361":{"dur":2,"text":"ADDY: And unless you're a\nreally large international site,"},"364":{"dur":2,"text":"you might not need to be loading\nall of that stuff up front."},"366":{"dur":1,"text":"And even if you need\nit, you could probably"},"368":{"dur":2,"text":"be lazy loading it in or making\nintelligent choices around--"},"371":{"dur":1,"text":"MATT: You can probably do\ndifferent bundles anyway"},"372":{"dur":2,"text":"for the localization, which\nyou might be doing already."},"374":{"dur":0,"text":"Yes."},"375":{"dur":0,"text":"ADDY: Exactly."},"376":{"dur":3,"text":"So in Webpack, check out the\ncontext replacement plug-in."},"379":{"dur":1,"text":"What that will let\nyou do is basically"},"380":{"dur":4,"text":"you can pass in this magic\nregexp to the bundler"},"384":{"dur":2,"text":"and specify what locales\nyou do want to support."},"387":{"dur":3,"text":"Like maybe I want to support\nEnglish for the UK and the US,"},"391":{"dur":1,"text":"but ignore some other ones."},"393":{"dur":1,"text":"And that just will\nsave you a bunch"},"394":{"dur":2,"text":"if you happen to be using\nthese types of libraries."},"397":{"dur":1,"text":"MATT: It kind of\njust globs whatever"},"398":{"dur":2,"text":"files are inside that library\nand then just only pulls those"},"401":{"dur":1,"text":"in and ignores everything else."},"402":{"dur":0,"text":"ADDY: Effectively."},"403":{"dur":1,"text":"MATT: Nice."},"404":{"dur":2,"text":"ADDY: Lodash, popular\nJavaScript utility library."},"407":{"dur":2,"text":"We definitely use it\na lot in our projects."},"410":{"dur":1,"text":"Lodash is pretty\nmodular by default."},"412":{"dur":2,"text":"So you can pick the\nmethods that you want"},"414":{"dur":2,"text":"and just import in\nexactly what you need."},"416":{"dur":3,"text":"But I still see a lot of people\nimporting in all of Lodash"},"419":{"dur":1,"text":"and every utility it's got."},"421":{"dur":0,"text":"MATT: That's kind of\nthe whole point, right?"},"422":{"dur":1,"text":"Like you just used to\nhaving the underscore"},"423":{"dur":1,"text":"there that just has all\nthe utilities on it."},"425":{"dur":1,"text":"It makes a lot of sense, but--"},"427":{"dur":1,"text":"ADDY: Exactly."},"428":{"dur":2,"text":"One really neat\npackage you can use"},"430":{"dur":4,"text":"is a Lodash Webpack plug-in\nor Babel plug-in Lodash."},"434":{"dur":2,"text":"And the idea there is that\nit's a transformer that"},"437":{"dur":4,"text":"will rewrite your code to only\ninclude the specific parts"},"441":{"dur":1,"text":"of Lodash that you're using."},"443":{"dur":1,"text":"So you're not including\nthe entire thing."},"444":{"dur":1,"text":"MATT: So it's just\ngoing to swap out"},"446":{"dur":2,"text":"your code for underscore.get\nand it will actually just go,"},"449":{"dur":2,"text":"oh, you're only using get, so\nI'll pull in that one thing"},"451":{"dur":2,"text":"and then rewrite your code\nto just use that one thing."},"453":{"dur":0,"text":"ADDY: Exactly."},"454":{"dur":2,"text":"ADDY: I tend to find\nthat it trims down"},"456":{"dur":3,"text":"my Lodash portion of my\nbundle down to about 10%"},"460":{"dur":0,"text":"of what it used to be."},"461":{"dur":1,"text":"So it's a nice little saving."},"462":{"dur":1,"text":"MATT: Very nice."},"463":{"dur":2,"text":"ADDY: There are lots of other\ntips that folks can check out."},"466":{"dur":1,"text":"ADDY: But we're\ngoing to link you"},"467":{"dur":2,"text":"to a bunch of different\nblog posts and guides"},"470":{"dur":1,"text":"that you can go and read up."},"471":{"dur":1,"text":"ADDY: If you've\ngot any questions,"},"472":{"dur":1,"text":"feel free to direct\nthem, not to us,"},"474":{"dur":1,"text":"but to Sean Larkin on Twitter."},"476":{"dur":1,"text":"MATT: Hi, Sean."},"477":{"dur":2,"text":"ADDY: No, we're more than\nhappy to answer any questions,"},"480":{"dur":2,"text":"but that's Webpack performance."},"482":{"dur":2,"text":"MATT: Yeah, one day I'll\nget 'round to learning it."},"485":{"dur":1,"text":"ADDY: You could just\nwatch this video."},"486":{"dur":2,"text":"MATT: Just watch it back, nice."},"488":{"dur":3,"text":"[MUSIC PLAYING]"}}