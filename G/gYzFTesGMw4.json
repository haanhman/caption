{"0":{"dur":2,"text":"[Week 3]"},"2":{"dur":1,"text":"[David J. Malan - Harvard University]"},"3":{"dur":3,"text":"[This is CS50. - CS50.TV]"},"7":{"dur":3,"text":"Let me steer us in the direction of where we left off last time,"},"10":{"dur":3,"text":"which was starting to think a bit more than about syntax"},"13":{"dur":3,"text":"and trying to think a bit less about all of the minutiae"},"17":{"dur":3,"text":"that takes a bit of time to acclimate to thus far in terms of semicolons"},"20":{"dur":1,"text":"and parentheses and curly braces,"},"22":{"dur":3,"text":"to start taking things a little bit to a higher conceptual level"},"25":{"dur":3,"text":"so that the problems we now start solving over the next several weeks"},"28":{"dur":3,"text":"are going to involve much more into higher level conceptual problems"},"32":{"dur":3,"text":"and a bit less in the syntactical as you get your feet wet"},"36":{"dur":3,"text":"and your hands dirty with some of the syntax from these past few weeks."},"40":{"dur":3,"text":"So recall that last week we introduced this notion of an array."},"43":{"dur":5,"text":"And an array in English can be described as what? >>[inaudible student response]"},"49":{"dur":2,"text":"Sorry?"},"51":{"dur":3,"text":"A collection of? >>[inaudible student response] >>Okay, good."},"54":{"dur":3,"text":"A collection of items. So we saw arrays in Scratch."},"57":{"dur":4,"text":"If you happened to use for pset 0 one of Scratch's lists that you can drag things"},"61":{"dur":3,"text":"like oranges and bananas into, an inventory of sorts,"},"65":{"dur":1,"text":"that's kind of like what an array is."},"67":{"dur":3,"text":"And then more technically, in the context of an actual computer,"},"70":{"dur":3,"text":"an array is simply a contiguous chunk of memory."},"74":{"dur":3,"text":"In other words, you have a byte, then another byte, then another byte, then another byte,"},"78":{"dur":2,"text":"and if you were to draw those bytes in a picture,"},"81":{"dur":3,"text":"they would be back to back to back to back. That's what we mean by contiguous."},"84":{"dur":2,"text":"So it's byte number 1, then 2, then 3."},"86":{"dur":2,"text":"It doesn't mean up here, up here, up here, up here."},"89":{"dur":4,"text":"An array is a contiguous chunk of 0 or more bytes."},"93":{"dur":2,"text":"So what are they useful for?"},"96":{"dur":3,"text":"Recall we had this sort of contrived example of storing people's quiz grades in a program"},"100":{"dur":2,"text":"to compute your quiz average for some course,"},"102":{"dur":4,"text":"and recall that we could start writing that program by declaring a variable quiz1."},"106":{"dur":2,"text":"Then we could have another variable called quiz2."},"109":{"dur":2,"text":"But then if there were 3 quizzes in this class, quiz4."},"112":{"dur":3,"text":"Or if there was a weekly quiz, it would be quiz5, quiz6, quiz7."},"115":{"dur":2,"text":"So you would have all of these variables declared inside of main"},"118":{"dur":1,"text":"or somewhere else in your program,"},"120":{"dur":3,"text":"and the problem with that approach, easy though it is to just copy and paste,"},"123":{"dur":2,"text":"is it just very quickly becomes unwieldy."},"126":{"dur":3,"text":"God forbid you actually have 30 quizzes or 50 quizzes."},"129":{"dur":2,"text":"If it's like a high school style daily pop quiz,"},"132":{"dur":3,"text":"then you just have a ridiculously long list of variables being declared,"},"135":{"dur":1,"text":"and this just very quickly gets out of control."},"137":{"dur":3,"text":"It's ugly, it's hard to maintain, it's so much easier to make a typo"},"140":{"dur":3,"text":"if you get 1 number mistyped somewhere in your program."},"143":{"dur":2,"text":"So we introduced the notion of an array instead."},"146":{"dur":3,"text":"And recall that we implemented this program by doing a little something like this."},"150":{"dur":3,"text":"Let me go into today's Source 3 Monday directory"},"153":{"dur":3,"text":"and open up array, which we saw last time."},"157":{"dur":2,"text":"And even though there were a couple of new C tricks here,"},"159":{"dur":1,"text":"among them the notion of a constant,"},"161":{"dur":5,"text":"recall that we declared multiple floats essentially by using this syntax:"},"167":{"dur":4,"text":"float, then the name of the variable, then we used square braces really for the first time,"},"171":{"dur":3,"text":"and what we did inside of those square braces was effectively put a number."},"175":{"dur":4,"text":"But instead of putting a number, I put this capitalized word, QUIZZES."},"179":{"dur":3,"text":"And what was the motivation for putting a capitalized word like QUIZZES"},"183":{"dur":4,"text":"and then using line 17's trick here to actually give that a number?"},"188":{"dur":3,"text":"What was the motivation there? Yeah."},"191":{"dur":2,"text":"[inaudible student response] >>Exactly."},"193":{"dur":3,"text":"If we want to change that value 2, we only have to change it in 1 place"},"196":{"dur":3,"text":"because consider--I don't even remember what this program did exactly,"},"199":{"dur":2,"text":"but if you just skim it you see QUIZZES, QUIZZES."},"202":{"dur":2,"text":"You see QUIZZES, down here more QUIZZES."},"204":{"dur":3,"text":"So if we didn't have this constant, this use of sharp define,"},"208":{"dur":5,"text":"we would have typed 2, then 2, then 2, then 2, which is fine. It would be just as correct."},"213":{"dur":2,"text":"But suppose that next year we have 3 quizzes in CS50."},"216":{"dur":2,"text":"So I have to go and update the code, I have to recompile it,"},"219":{"dur":4,"text":"but the problem is if I do something stupid, like I overlook 1 mention of 2"},"223":{"dur":2,"text":"and forget to plug in 3, the whole program could very well break."},"226":{"dur":1,"text":"So we're just asking for trouble."},"228":{"dur":4,"text":"So the notion of a constant is all about factoring out some piece of data,"},"233":{"dur":2,"text":"whether it's a string or a char or a float or whatever,"},"236":{"dur":4,"text":"and declaring it 1 place so that you can more readily change it in the future."},"240":{"dur":3,"text":"And it's also, frankly, a bit easier to read because if you just think of this now,"},"243":{"dur":4,"text":"it's QUIZZES, or we could even rename it something like NUMBER_OF_QUIZZES"},"247":{"dur":1,"text":"or something more explicit."},"249":{"dur":2,"text":"The code just becomes a little more obvious as to what it's doing,"},"251":{"dur":3,"text":"and you wonder a little less what number 2 might happen to mean."},"255":{"dur":3,"text":"So the constant had nothing to do fundamentally with arrays."},"258":{"dur":4,"text":"The array was introduced by way of these square braces."},"262":{"dur":3,"text":"So notice that in line 23 we ask the user, \"What were your quiz scores?\""},"266":{"dur":4,"text":"Then we just have this loop which apparently asks the user for their grades. How?"},"271":{"dur":6,"text":"It iterates from 0 to 2. And I say 2 because QUIZZES in all caps is currently 2."},"277":{"dur":4,"text":"So it iterates from 0 up to 2 and then it prints out Quiz # something of something,"},"282":{"dur":3,"text":"and then it uses GetFloat to get a value from the user."},"285":{"dur":3,"text":"So notice this is the only other new piece of syntax from last Wednesday."},"289":{"dur":4,"text":"If you want to store something in a particular location in that array,"},"293":{"dur":2,"text":"you again use the square brackets."},"295":{"dur":1,"text":"So there's a bit of dichotomy here."},"297":{"dur":2,"text":"The first time you use the square brackets"},"299":{"dur":3,"text":"you use it to specify how big you want the array to be."},"302":{"dur":4,"text":"But this next context here where we again employ these square brackets"},"306":{"dur":3,"text":"means where in that array do you want to put some value?"},"310":{"dur":3,"text":"And the distinction here can be inferred from context."},"313":{"dur":3,"text":"Notice here we have a data type, then we have the name of a variable,"},"317":{"dur":3,"text":"then we have our square braces with a number inside, semicolon. That's it."},"320":{"dur":1,"text":"So that's a declaration."},"322":{"dur":6,"text":"It's just as though we had done something like float grade1; float grade2;"},"328":{"dur":3,"text":"but again, this very quickly devolves into way too much copy, paste,"},"331":{"dur":2,"text":"so instead we just simplified it as such,"},"334":{"dur":4,"text":"which means henceforth we have a grade that can be stored at bracket 0,"},"338":{"dur":2,"text":"we have another grade that can be stored at bracket 1,"},"341":{"dur":5,"text":"but what if I goof and, for instance, my loop goes so far--"},"346":{"dur":1,"text":"for instance, I make this less than or equal to,"},"348":{"dur":1,"text":"which recall was the source of a previous bug--"},"350":{"dur":4,"text":"which effectively means that on some third accidental iteration of this loop"},"355":{"dur":4,"text":"I use bracket 2. Effectively, what might happen here? Sorry?"},"360":{"dur":2,"text":"[student] It's going to be replaced. >>Is it going to be replaced?"},"362":{"dur":1,"text":"What would be replaced?"},"364":{"dur":6,"text":"This literally is saying replace what is at location 2 with the return value of GetFloat."},"370":{"dur":2,"text":"But the problem is how big is the array at this point in the story?"},"373":{"dur":4,"text":"[inaudible student response] >>The array is still only of size 2"},"377":{"dur":5,"text":"because the array, like any variable, was declared first, before we used it,"},"382":{"dur":4,"text":"and we specified here because of this constant that I have 2 grades that I'm going to put."},"387":{"dur":2,"text":"But remember, the computer scientists start counting from 0."},"389":{"dur":3,"text":"So the first location in that array is bracket 0."},"393":{"dur":6,"text":"The next location is 1. This thing is ever so slightly too far over to the side."},"400":{"dur":2,"text":"So in other words, if I actually had this array--"},"402":{"dur":3,"text":"and let me see how well this cooperates here for us--"},"406":{"dur":5,"text":"if I have an array that I've simply drawn as follows"},"412":{"dur":4,"text":"and I've allocated space for 2 elements, I might draw this like this in memory"},"416":{"dur":1,"text":"where this big white canvas is."},"418":{"dur":2,"text":"It's just the RAM I have in my computer, a gig of RAM, 2 gigs of RAM, whatever,"},"420":{"dur":4,"text":"but these 2 boxes now individually represent a float, 32 bits."},"425":{"dur":5,"text":"So if I put 1 number here like 1.0, then I put another number here like 3.2"},"430":{"dur":4,"text":"but then I do bracket 2, that's like putting something here."},"435":{"dur":2,"text":"And as the picture suggests, there is nothing there."},"437":{"dur":2,"text":"It's sort of like no man's land because I have not asked the operating system"},"440":{"dur":3,"text":"to give me this third quiz."},"443":{"dur":3,"text":"If I did want that third quiz, I should have had the forethought"},"446":{"dur":4,"text":"to ask the operating system for it by declaring QUIZZES to be not 2"},"451":{"dur":2,"text":"but to instead equal 3."},"454":{"dur":4,"text":"So in other words, the picture that we effectively have at hand looks like this here."},"459":{"dur":3,"text":"This again is no man's land. We better not try writing values here."},"462":{"dur":3,"text":"But again, because computer scientists count from 0,"},"465":{"dur":4,"text":"when we talk about this location in the array, that's supposed to be location 0,"},"469":{"dur":4,"text":"this is supposed to be location 1, and this doesn't even exist"},"473":{"dur":3,"text":"because we only asked the operating system for 2 such places."},"477":{"dur":2,"text":"So those of you with prior programming experience from other languages"},"480":{"dur":4,"text":"might know that this is not always the case with arrays or things called vectors."},"484":{"dur":2,"text":"Rather, you can just keep adding and adding and adding things to arrays,"},"486":{"dur":3,"text":"which, frankly, we had that ability in Scratch and yet we seem to have given it up here"},"490":{"dur":4,"text":"because with C you are programming much more explicitly."},"495":{"dur":2,"text":"It's only you and the computer right now, and the computer is only going to do"},"497":{"dur":1,"text":"what you tell it to do."},"499":{"dur":4,"text":"So if you only tell it to give you 2 floats by way of line 22 here,"},"504":{"dur":3,"text":"that's all you're going to get back from the operating system: space for 2."},"507":{"dur":6,"text":"So increasingly are your programs going to occasionally be buggy with regard to arrays."},"514":{"dur":3,"text":"This is just sort of the nature of the beast whereby all of us are fallible,"},"517":{"dur":4,"text":"and at some point you will very likely index beyond the boundary of your array."},"522":{"dur":3,"text":"And that's just a fancy way of saying you went into bracket something"},"525":{"dur":3,"text":"and something was just too big of a number. You went beyond the bounds of your array."},"529":{"dur":1,"text":"But the upside now is this."},"531":{"dur":3,"text":"The rest of this program really has nothing fundamentally to do with arrays."},"534":{"dur":3,"text":"It's all just about some simple arithmetic for computing averages."},"538":{"dur":5,"text":"So we have here in this for loop here first a variable called sum that we initialize to 0."},"543":{"dur":5,"text":"Then we iterate from 0 up to 2 again and we add to that summation variable"},"549":{"dur":3,"text":"the ith grade, so bracket 0 then bracket 1."},"552":{"dur":2,"text":"And then as you would do in grade school to compute the average,"},"555":{"dur":4,"text":"we simply take that sum, divide it by the total number of quizzes,"},"559":{"dur":3,"text":"and then for good measure we call a function here called round."},"562":{"dur":6,"text":"Now, as an aside, what is the deal with this parenthetical int on line 34?"},"568":{"dur":3,"text":"It might have come up already in section, haven't really talked about it formally here,"},"571":{"dur":3,"text":"but what is this int in parens probably doing? >>[inaudible student response]"},"575":{"dur":3,"text":"Yeah, this refers to casting or typecasting,"},"578":{"dur":3,"text":"which means taking 1 data type and converting it to another."},"581":{"dur":3,"text":"You can't do this with all data types because sometimes it would be a bit strange."},"585":{"dur":4,"text":"But in this case, if the return value of round is a float"},"589":{"dur":4,"text":"because, after all, I'm taking a float and dividing it by a number like 2,"},"593":{"dur":1,"text":"I'm going to get back a float."},"595":{"dur":4,"text":"But grade school people don't really like to know that their average was 93.4"},"600":{"dur":3,"text":"because they'll realize they were ever so close to that 95 rounding point."},"604":{"dur":5,"text":"So we want to instead use int to round everyone to the nearest int,"},"609":{"dur":3,"text":"which in this case is going to be 94 with no point after it."},"612":{"dur":1,"text":"So that's just a little mathematical trick."},"614":{"dur":3,"text":"And we'll come back to this notion of casting because it will have implications,"},"617":{"dur":4,"text":"if you haven't discovered already, for problem set 2."},"621":{"dur":3,"text":"So an array then, you can think of--it's going to make me smile all day."},"625":{"dur":2,"text":"It looks like this if you draw a picture of it,"},"627":{"dur":3,"text":"but the key is that the size is also selected by you"},"631":{"dur":2,"text":"when you request it from the operating system."},"634":{"dur":5,"text":"Any questions then on arrays? Yeah."},"639":{"dur":7,"text":"[inaudible student question]"},"647":{"dur":2,"text":"Ah, good question."},"649":{"dur":3,"text":"The question is what happens to the null 0 in the array? It does not exist in this context."},"653":{"dur":4,"text":"That only exists in the context of strings, which we're about to come to in just a moment."},"657":{"dur":4,"text":"But for an array, as in this case, all you get is what you ask the operating system for."},"662":{"dur":1,"text":"And as an aside, lest this be unclear,"},"664":{"dur":2,"text":"I keep saying you ask the operating system, ask the operating system."},"667":{"dur":3,"text":"An operating system, as you probably know, is Mac OS, Windows, Linux."},"670":{"dur":3,"text":"When you're calling functions like GetFloat"},"673":{"dur":5,"text":"or you are declaring variables like grades,"},"679":{"dur":3,"text":"at the end of the day you are effectively asking someone else to give you that memory"},"683":{"dur":2,"text":"because we as aspiring programmers"},"685":{"dur":2,"text":"have no idea how to actually get physical access to memory."},"688":{"dur":2,"text":"But someone does: the operating system."},"691":{"dur":5,"text":"So besides presenting us with pretty icons and menus and folders and the like"},"696":{"dur":2,"text":"that you see on your desktop, whether a Mac or PC,"},"699":{"dur":3,"text":"operating systems also do the low level mundane stuff,"},"702":{"dur":2,"text":"the highly technical stuff of managing the gigabyte"},"704":{"dur":4,"text":"or 2 gigabytes of memory that you have, managing the CPU that you have, and so forth."},"708":{"dur":1,"text":"So when you're writing code,"},"710":{"dur":3,"text":"you're really hooking in to your operating system in that sense."},"713":{"dur":1,"text":"I'm going to have to minimize that. All right."},"715":{"dur":4,"text":"Other questions about arrays?"},"720":{"dur":2,"text":"No? Okay."},"722":{"dur":4,"text":"So the transition naturally from arrays is actually to a topic that's a bit familiar."},"726":{"dur":2,"text":"And we looked ever so briefly at this last time too."},"729":{"dur":2,"text":"This was a string example from Wednesday."},"732":{"dur":2,"text":"This string example was a pretty simple program,"},"735":{"dur":3,"text":"and I've actually simplified it by a couple of lines for today's purposes."},"738":{"dur":4,"text":"All it does in line 19 is get a string from the user, stores it in a variable called s."},"742":{"dur":5,"text":"Then in line 22 onward it's apparently printing that string 1 character per line."},"748":{"dur":2,"text":"But how is it doing this?"},"750":{"dur":2,"text":"We're declaring a variable i, setting it equal to 0,"},"753":{"dur":2,"text":"and this is becoming old habit now."},"755":{"dur":3,"text":"We hadn't seen this until Wednesday, but you can kind of infer from its name"},"759":{"dur":5,"text":"strlen just returns what when given s? The length of the string."},"764":{"dur":3,"text":"So if I pass it a string, quote-unquote DAVID,"},"767":{"dur":3,"text":"it's hopefully going to return to me the number 5 because of D-A-V-I-D."},"771":{"dur":3,"text":"So that's its purpose in life is to take a string, whether hard coded by you"},"775":{"dur":3,"text":"or in this case plugged in as a variable, as an argument,"},"778":{"dur":3,"text":"and it figures out what the length of that string is."},"781":{"dur":4,"text":"So here now we're borrowing some notation from the previous quiz example."},"786":{"dur":2,"text":"This has nothing to do with floats, has nothing to do with quizzes,"},"789":{"dur":3,"text":"but it turns out that the little white lie we've been telling you since week 1"},"793":{"dur":3,"text":"is that a string doesn't really exist in C."},"796":{"dur":3,"text":"A string at the end of the day is really just an array."},"800":{"dur":4,"text":"It's an array of bytes, so byte, byte, byte, byte, which recall is just 8 bits,"},"805":{"dur":2,"text":"so chunk of memory, chunk of memory, chunk of memory, chunk of memory."},"808":{"dur":3,"text":"And the means by which a string is implemented"},"811":{"dur":1,"text":"is by putting the first character here,"},"813":{"dur":4,"text":"then here, then here, then here, back to back to back in the computer's memory."},"817":{"dur":4,"text":"So if you wanted to spell out a word like HELLO, you would put 1 character H,"},"822":{"dur":6,"text":"then E, then L then L, then O--5 characters in total--somewhere in your computer's RAM."},"828":{"dur":3,"text":"But the key detail here is that they're going to be back to back to back to back,"},"832":{"dur":2,"text":"right next to one another."},"834":{"dur":4,"text":"When when I say s[i], what in English is this giving me?"},"841":{"dur":3,"text":"What does s[i] represent in this case? Yeah."},"844":{"dur":3,"text":"[student] The ith character in the string. >>Exactly. The ith character in the string."},"847":{"dur":4,"text":"Now, i is going to start at 0 as per my for loop here,"},"852":{"dur":2,"text":"but that's good because everything starts counting from 0."},"854":{"dur":4,"text":"So s[0] is going to represent the letter H in a word like HELLO,"},"859":{"dur":5,"text":"s[1] is going to represent a letter like E in a word like HELLO, and so forth."},"864":{"dur":2,"text":"And what we seem to be doing on each iteration of this loop"},"867":{"dur":5,"text":"is temporarily storing the ith character in a variable called c, which is just a char,"},"872":{"dur":2,"text":"and then we're printing out c"},"875":{"dur":2,"text":"so that at the end of the day what this program does is the following."},"877":{"dur":5,"text":"If I go into the source directory and I make string1 and I go ahead and run string1,"},"882":{"dur":9,"text":"and then I type a word like HELLO, Enter, all it does is print this 1 character at a time."},"891":{"dur":2,"text":"So there's an opportunity for refinement here."},"894":{"dur":4,"text":"I'm kind of doing more work, even though it's more clear maybe this way, than necessary."},"898":{"dur":5,"text":"Which line of code here can I probably throw away altogether? Yeah."},"903":{"dur":5,"text":"Line 24. In line 24 I'm declaring a variable c."},"908":{"dur":6,"text":"I'm storing the ith character of s in it, but then I'm using c here."},"914":{"dur":5,"text":"So I'm using c, so I feel like I can't just throw line 24 away."},"920":{"dur":3,"text":"[inaudible student comment] >>Exactly."},"923":{"dur":2,"text":"So when it comes to talking about the design of programs,"},"926":{"dur":4,"text":"notice this slight simplification of the code, which is just as readable,"},"930":{"dur":3,"text":"but realize that s is just a variable, its data type is an array,"},"934":{"dur":3,"text":"so s[i] is just going to instantly return to you the ith character in that string."},"938":{"dur":2,"text":"And if you want to print it, that's fine."},"940":{"dur":3,"text":"You just have to use %c because you're not printing a string,"},"943":{"dur":4,"text":"you're printing a character in a string, and this too has the effect of printing the ith character."},"948":{"dur":2,"text":"And recall the only difference really from last week with using printf"},"951":{"dur":2,"text":"is that whereas in the weeks past we would do something super simple"},"954":{"dur":4,"text":"like the %s placeholder then the name of a string here,"},"958":{"dur":2,"text":"now we're diving in a little deeper underneath the hood and saying,"},"961":{"dur":4,"text":"don't print the string; print the single character therein."},"966":{"dur":4,"text":"So we can do something a little different here because there's 1 other--not bug"},"970":{"dur":3,"text":"because this program is right, but I'm doing something stupid"},"974":{"dur":2,"text":"that I mentioned briefly on Wednesday."},"976":{"dur":5,"text":"But thinking back, how could this program's design be improved even further? Yeah."},"982":{"dur":5,"text":"[inaudible student response] >>Oh, good."},"988":{"dur":3,"text":"So recall that we introduced a second variable called n last time,"},"992":{"dur":2,"text":"which seems to be contradicting ourselves because my goal a second ago"},"994":{"dur":2,"text":"was just to throw away a variable as unnecessary,"},"997":{"dur":3,"text":"but recall that on Wednesday we actually did this."},"1000":{"dur":5,"text":"I changed the for loop to actually have a comma here, then n = strlen,"},"1006":{"dur":5,"text":"and then over here I did i < n, then I did my increments."},"1012":{"dur":5,"text":"What is the fundamental gain that I'm achieving by changing my initialization to this"},"1017":{"dur":3,"text":"and my condition to this now? >>[inaudible student response] >>Exactly."},"1021":{"dur":4,"text":"I'm not recalling strlen again and again and again because recall how the for loop works."},"1026":{"dur":2,"text":"Even if they start to get more complicated-looking,"},"1028":{"dur":3,"text":"recall that the thing before the first semicolon is the initialization, which happens once."},"1032":{"dur":1,"text":"The condition, though, is in the middle,"},"1034":{"dur":3,"text":"and this gets checked every time that you go through the loop."},"1037":{"dur":4,"text":"So it's kind of stupid to be asking the computer the same question again and again--"},"1042":{"dur":3,"text":"What's the length of HELLO? What's the length of HELLO? What's the length of HELLO?--"},"1045":{"dur":3,"text":"because as we'll see today and on Wednesday, this is definitely going to take time,"},"1049":{"dur":4,"text":"and it's not a very good use of time because to figure out the length of a string"},"1054":{"dur":2,"text":"actually takes a bit of effort."},"1057":{"dur":2,"text":"It's not instantaneous, as it is in some languages."},"1059":{"dur":4,"text":"So by changing this to n, the price I'm paying is what?"},"1063":{"dur":1,"text":"We're seeing a trade-off here."},"1065":{"dur":3,"text":"I can save time by not asking the same damn question again and again,"},"1069":{"dur":2,"text":"but it's going to cost me something, which is what?"},"1071":{"dur":3,"text":"[student] You lose a certain amount of memory. >>Exactly. It's going to cost me some memory."},"1075":{"dur":1,"text":"So in this case it costs me what?"},"1076":{"dur":4,"text":"Another 32 bits because n is just an int, as implied by the word int here."},"1081":{"dur":1,"text":"But is that okay?"},"1083":{"dur":2,"text":"Frankly, that's probably okay because if you think about it,"},"1085":{"dur":3,"text":"the longer the string is, the more time I'm going to be wasting"},"1089":{"dur":2,"text":"because strlen is going to get called again and again and again"},"1091":{"dur":1,"text":"for every iteration of the loop."},"1093":{"dur":4,"text":"And these days, my Mac has 2 gigs of RAM, these days 4 gigs of RAM sometimes."},"1098":{"dur":4,"text":"I think I can afford 4 of those bytes to actually speed things up."},"1102":{"dur":4,"text":"But this is going to be a trade-off and a theme really in programming and in computer science"},"1106":{"dur":1,"text":"of never really getting anything for free."},"1108":{"dur":4,"text":"If you want to improve something here, you have to pay for it in the other hand somehow."},"1112":{"dur":3,"text":"Space versus time in this case."},"1115":{"dur":4,"text":"So this was all leading up toward something cryptic like this,"},"1120":{"dur":3,"text":"which, as you probably figured out by now, actually says?"},"1124":{"dur":3,"text":"[inaudible student response] >>Yeah, so this is, Be sure to drink your Ovaltine,"},"1127":{"dur":5,"text":"actually using an algorithm called ROT13, R-O-T 1-3,"},"1132":{"dur":3,"text":"which just means rotate all of the letters 13 places,"},"1135":{"dur":3,"text":"which means take A and then add 13 to it and go dot, dot, dot"},"1138":{"dur":5,"text":"all the way to the 13th letter away, do the same thing for B and for C and for D and so forth."},"1144":{"dur":6,"text":"And so if we actually convert this here using a shift of 13 places,"},"1150":{"dur":3,"text":"we'll get back to what little Ralphie had, which was, Be sure to drink your Ovaltine."},"1154":{"dur":3,"text":"But now for problem set 2, in the standard edition at least,"},"1158":{"dur":3,"text":"you have to kind of do this enciphering yourself,"},"1161":{"dur":4,"text":"and we have to somehow take in input like this and encrypt it or decrypt it."},"1165":{"dur":3,"text":"So which of these fundamentals sort of leads us to that opportunity?"},"1169":{"dur":2,"text":"Let's take a look at this third example here."},"1172":{"dur":5,"text":"First of all, it's called ASCII. What does ASCII refer back to?"},"1178":{"dur":2,"text":"American Standard Code for Information Interchange,"},"1180":{"dur":3,"text":"which is a really long way of saying what? What is ASCII?"},"1183":{"dur":4,"text":"[inaudible student response] >>What's that? >>[student] A character map. >>A character map."},"1187":{"dur":3,"text":"It just maps numbers to letters because the world has standardized"},"1191":{"dur":3,"text":"what numbers will represent what letters so that all of us can use computers"},"1195":{"dur":3,"text":"and our programs all are just compatible when it comes to printing out things on the screen."},"1199":{"dur":5,"text":"So recall that 65 happens to represent A, 97 happens to represent lowercase a."},"1204":{"dur":3,"text":"And so this simple program here ASCII is taking advantage of that fact--"},"1208":{"dur":4,"text":"that the world knows that capital A is 65--and it's just printing the mapping."},"1212":{"dur":3,"text":"So before we dive into this code, let me instead open up a terminal window."},"1216":{"dur":5,"text":"Let me go ahead and make ASCII, and then let's just run this thing just to spoil the output."},"1221":{"dur":4,"text":"And it just does this: a really big chart that just tells me all of the various codes"},"1225":{"dur":1,"text":"for all of the various letters."},"1227":{"dur":4,"text":"So a super simple program, but I didn't have to hard code those 52 lines of output:"},"1232":{"dur":2,"text":"26 uppercase, 26 lowercase."},"1234":{"dur":2,"text":"Instead, I did this programmatically with a couple of loops."},"1237":{"dur":1,"text":"Notice what I did here."},"1239":{"dur":5,"text":"I iterated from i is 65 on up to 65 + 26 because I wanted to print out 26 letters"},"1244":{"dur":5,"text":"in the English alphabet, i++ on each  iteration, and now notice this again."},"1249":{"dur":2,"text":"It's the recurrence of our friend typecasting"},"1252":{"dur":2,"text":"whereby you convert 1 data type to another"},"1254":{"dur":2,"text":"because what do I want to do in this particular program?"},"1257":{"dur":5,"text":"I want to count numerically because that's how I grew up counting--65, 66, 67, and so forth--"},"1262":{"dur":1,"text":"but I don't want to print just the numbers."},"1264":{"dur":3,"text":"I want to print the letter followed by the number."},"1268":{"dur":10,"text":"I want to print A: number, B: number, but I can do this with the same exact variable."},"1278":{"dur":2,"text":"So I print out %c as a placeholder for a character,"},"1281":{"dur":3,"text":"%d as a placeholder for a digit or number."},"1285":{"dur":2,"text":"Then what do I plug in for those 2 placeholders?"},"1287":{"dur":6,"text":"I first plug in the character equivalent of i, and then I print out i itself."},"1293":{"dur":2,"text":"So notice this too just works."},"1296":{"dur":2,"text":"Just as I can cast from a float to an int"},"1299":{"dur":2,"text":"in order to go from a real number to an integer,"},"1301":{"dur":4,"text":"here I can go from an int to a char, which is a little weird--"},"1306":{"dur":2,"text":"doesn't quite map onto the real world--but in computers"},"1308":{"dur":2,"text":"a char is just a number underneath the hood,"},"1311":{"dur":2,"text":"so we're being ever so explicit here to the computer, saying,"},"1313":{"dur":5,"text":"printf, print out not i as 65, print it out as its numeric equivalent."},"1318":{"dur":3,"text":"And it turns out I technically don't even need this."},"1322":{"dur":2,"text":"What I was doing a moment ago is explicitly casting"},"1325":{"dur":3,"text":"by specifying what data type I want to go from and to."},"1328":{"dur":3,"text":"But notice that I already have this placeholder %c"},"1331":{"dur":3,"text":"and this other %c placeholder here."},"1334":{"dur":3,"text":"Even though this isn't int, the computer realizes that a char,"},"1338":{"dur":2,"text":"it's just an int underneath the hood."},"1341":{"dur":4,"text":"So if I actually recompile this and rerun the ASCII program,"},"1345":{"dur":6,"text":"notice it still just works because the computer realizes that there is this correspondence."},"1351":{"dur":3,"text":"Now, it's more important to do the explicit casting in the world of floats to ints"},"1354":{"dur":2,"text":"because there you're actually making a calculated decision:"},"1357":{"dur":2,"text":"throw away everything after the decimal point."},"1360":{"dur":4,"text":"Here there's really nothing to throw away because a character is just a number,"},"1364":{"dur":3,"text":"and a string is just an array of characters."},"1368":{"dur":4,"text":"So when it comes time to implementing some encryption or decryption,"},"1372":{"dur":4,"text":"how is it that we can actually translate something like this nonsense to,"},"1376":{"dur":1,"text":"Be sure to drink your Ovaltine?"},"1378":{"dur":4,"text":"What if we know right now--let's take as assumption--that the key,"},"1382":{"dur":5,"text":"the number that we're rotating all of these letters by, is the number 13?"},"1388":{"dur":3,"text":"So we went from the letter B all the way to O at the start of the sentence,"},"1391":{"dur":2,"text":"Be sure to drink your Ovaltine, because if I do B"},"1394":{"dur":4,"text":"and then I go C, D, E, F, G, H, I, J, K, L, M, N, O,"},"1399":{"dur":4,"text":"that's why the encryption of the letter B becomes O"},"1403":{"dur":2,"text":"because I just added 13 to it."},"1406":{"dur":6,"text":"So if I want to decrypt this, I essentially have to take O and then subtract 13 from it."},"1413":{"dur":3,"text":"Or, frankly, because there's 26 letters in the alphabet, this is wonderfully symmetric,"},"1416":{"dur":4,"text":"we can also just add 13 and we'll get back to the letter B."},"1421":{"dur":3,"text":"But how do you go about implementing something like this in Caesar"},"1424":{"dur":2,"text":"or really manipulating strings in general?"},"1426":{"dur":4,"text":"If the letter B is what number?"},"1431":{"dur":3,"text":"What's the letter B? So it's 66, right?"},"1435":{"dur":3,"text":"So if the letter A is 65 and the letter B is 66,"},"1439":{"dur":4,"text":"so 66, all I have to do is add 13 to it, and this gives me 79."},"1443":{"dur":5,"text":"And if we go to our little cheat sheet, 79 indeed maps onto O."},"1449":{"dur":2,"text":"But there is a bit of a corner case here."},"1451":{"dur":3,"text":"What is, say, the letter Z?"},"1455":{"dur":5,"text":"If we do 66 + 25 to get all the way to the end of the alphabet, we're at 91."},"1460":{"dur":4,"text":"91 + 13 gives me 104, and guess what?"},"1464":{"dur":4,"text":"104 does not equal an uppercase letter."},"1469":{"dur":2,"text":"Let's go back to a little cheat sheet here."},"1471":{"dur":6,"text":"If I rerun this program in the appliance, notice that 104, if I go back to the terminal window,"},"1478":{"dur":3,"text":"104 is apparently the lowercase h."},"1481":{"dur":4,"text":"So we need some key trick here in order to make sure that when we start at Z"},"1486":{"dur":3,"text":"and we add 13 to it we don't want to just keep forging ahead to bigger and bigger numbers."},"1490":{"dur":2,"text":"What do we really want to do?"},"1492":{"dur":1,"text":"You want to wrap around."},"1494":{"dur":5,"text":"So it turns out, as you've seen probably in section now or in the problem set spec itself"},"1500":{"dur":5,"text":"realized that there is this other operator in C that also is a percent sign,"},"1505":{"dur":5,"text":"but whereas we've used % here to specify a placeholder,"},"1511":{"dur":4,"text":"know that, especially for problem set 2, there's also something like this:"},"1515":{"dur":3,"text":"int x = y % z."},"1518":{"dur":3,"text":"Let me just present this as a very generic form of this."},"1522":{"dur":2,"text":"Percent means what in a programming language? >>[student] Modulo."},"1525":{"dur":3,"text":"Modulo, which is a fancy way of saying the remainder."},"1528":{"dur":2,"text":"Even though there's a slight distinction with the definition there,"},"1531":{"dur":5,"text":"this means divide y by z but don't return the result of that division;"},"1537":{"dur":2,"text":"instead, return the remainder."},"1539":{"dur":7,"text":"So if y is actually 3 and z is actually 2, 3 divided by 2 is 1 with a remainder of 1,"},"1547":{"dur":4,"text":"so what does x actually equal in this scenario? 1."},"1551":{"dur":2,"text":"This is such a simple, low-level idea."},"1554":{"dur":1,"text":"It takes a little time to get your mind wrapped around it"},"1556":{"dur":2,"text":"because it's probably been a while since you even had to care about remainders"},"1558":{"dur":2,"text":"and actually use them for something purposeful,"},"1561":{"dur":4,"text":"but in this case the simple fact that you can go from a big number like 3"},"1565":{"dur":3,"text":"to a relatively small number like 2 and then wrap around effectively"},"1568":{"dur":5,"text":"by using the remainder to a smaller value like 1 is going to be an invaluable trick"},"1574":{"dur":3,"text":"that we can use both for something like Caesar and this other thing Vigenere"},"1577":{"dur":4,"text":"in problem set 2, but this is going to be a recurring trick throughout the semester."},"1582":{"dur":2,"text":"This simple, simple idea of just taking the remainder in general"},"1584":{"dur":1,"text":"is going to allow us to wrap around."},"1586":{"dur":4,"text":"And as we start playing more with arrays, as we start playing more with memory itself,"},"1591":{"dur":4,"text":"this is going to become more and more of a powerful trick."},"1595":{"dur":7,"text":"So any questions then on ASCII or the representation of strings as arrays?"},"1603":{"dur":4,"text":"And we'll take it up 1 notch further. Yeah."},"1607":{"dur":4,"text":"[inaudible student question] >>Good question."},"1612":{"dur":3,"text":"What does it mean when a variable has an asterisk in front of it?"},"1615":{"dur":2,"text":"Let me postpone answering that in any detail,"},"1617":{"dur":2,"text":"but that refers to a topic known as a pointer."},"1620":{"dur":3,"text":"Pointers have to do with memory, and we're actually today"},"1623":{"dur":2,"text":"taking the first step toward that discussion,"},"1626":{"dur":2,"text":"but for now, let me pretend that the star doesn't exist"},"1628":{"dur":6,"text":"and we'll continue calling strings strings instead of using char*,"},"1635":{"dur":4,"text":"which you've probably seen before and I'll put on the screen in just a moment as a teaser."},"1639":{"dur":3,"text":"So we'll come back to that in way more detail than many of you will probably like."},"1643":{"dur":2,"text":"Eventually, not today. Yeah."},"1645":{"dur":17,"text":"[inaudible student question]"},"1662":{"dur":4,"text":"In what context do you have to provide the sign for a character? >>[student] Yeah."},"1667":{"dur":5,"text":"So by default, when you don't put a +, just positive numbers are assumed."},"1672":{"dur":3,"text":"So if just write the number 1, it's a positive 1."},"1675":{"dur":2,"text":"If you actually want to specify the negation of a value,"},"1677":{"dur":3,"text":"you literally have to do -1 on your keyboard."},"1681":{"dur":19,"text":"But this probably isn't your question. >>[inaudible student response]"},"1700":{"dur":1,"text":"Good question. Okay."},"1702":{"dur":2,"text":"So this has to do, I gather, with some kind of bug you ran into"},"1704":{"dur":2,"text":"because you were converting an integer to a character,"},"1707":{"dur":2,"text":"but somehow negativity got involved,"},"1709":{"dur":2,"text":"and so the character just came out munged somehow."},"1712":{"dur":4,"text":"So for now, let me oversimplify a bit until we come back to this kind of topic."},"1716":{"dur":2,"text":"For now, think of things this way--and this is an oversimplification."},"1719":{"dur":3,"text":"But in the world of an integer, you have how many bits at your disposal?"},"1723":{"dur":1,"text":"You have 32 bits."},"1725":{"dur":3,"text":"And thus far, we've talked about the total number of integers you can therefore represent"},"1729":{"dur":3,"text":"is roughly 4 billion in total because you have 32 bits,"},"1732":{"dur":2,"text":"so that's 2 to the 32, so that's roughly 4 billion."},"1735":{"dur":3,"text":"But we saw a week or 2 ago that you don't really have a range of numbers"},"1738":{"dur":2,"text":"from 0 on up to 4 billion."},"1741":{"dur":5,"text":"The range instead goes from roughly negative 2 billion to positive 2 billion."},"1746":{"dur":4,"text":"But this then begs the question, how do you represent the notion of negative 2 billion"},"1750":{"dur":2,"text":"let alone negative 1?"},"1753":{"dur":4,"text":"For now, we can oversimplify and just say that we're going to use the leftmost bit"},"1757":{"dur":4,"text":"of those 32 bits, and if it's a 1 it's a negative number,"},"1762":{"dur":2,"text":"and if it's a 0 it's a positive number."},"1765":{"dur":3,"text":"The problem with that simplified representation of negative numbers"},"1768":{"dur":5,"text":"is that if you were deliberately being clever and trying to convert from a character to a number"},"1773":{"dur":3,"text":"or vice versa, there's no such thing as a negative character."},"1777":{"dur":5,"text":"In the world of ASCII, which uses only 8 bits, all 8 of those bits matter,"},"1782":{"dur":4,"text":"and the leftmost bit has nothing to do with negativity."},"1786":{"dur":2,"text":"And just to be clear, when I say leftmost bits,"},"1789":{"dur":4,"text":"recall that when we did our bit-related examples in the first week"},"1794":{"dur":7,"text":"recall that we drew things like 1001101, something like this."},"1802":{"dur":4,"text":"When I say the leftmost bit, I just literally mean the 1 that you write all the way over to the left."},"1807":{"dur":4,"text":"So in the world of characters there is no notion of negativity,"},"1811":{"dur":4,"text":"so that leftmost bit actually has something to do with ASCII, nothing to do with negativity."},"1816":{"dur":3,"text":"So it sounds like--and out of context it's hard to answer exactly--"},"1819":{"dur":6,"text":"but somehow, your code was confusing that leftmost bit as representing a negative value"},"1825":{"dur":3,"text":"when it really was part of the character in question."},"1829":{"dur":3,"text":"And again, I'm oversimplifying because computers actually do something a little fancier"},"1832":{"dur":4,"text":"than just changing that leftmost bit to a 1 for a negative sign versus a 0."},"1837":{"dur":4,"text":"They instead, if you're curious to Google, use something typically called 2's complement,"},"1841":{"dur":2,"text":"which is a bit more sophisticated of an approach"},"1843":{"dur":1,"text":"but the idea is ultimately the same."},"1845":{"dur":5,"text":"So in short, it had to do with the fact that you were massaging a number to a character"},"1850":{"dur":3,"text":"or vice versa but your code was not cognizant of the fact"},"1853":{"dur":2,"text":"that 1 of those bits had significance in the numeric world."},"1856":{"dur":3,"text":"That's not the case in the character world."},"1859":{"dur":4,"text":"But it sounds like you fixed, in which case moot now. Other questions."},"1866":{"dur":1,"text":"Okay."},"1867":{"dur":4,"text":"So thus far, all of the programs we've written have taken input maybe from the user"},"1871":{"dur":2,"text":"in the form of functions like GetInt, GetString,"},"1874":{"dur":2,"text":"or if you've been reading ahead in various books or online references,"},"1876":{"dur":4,"text":"you yourselves might have used functions like scanf which, frankly, we use in the CS50 library."},"1881":{"dur":3,"text":"But in a week or 2, we'll actually show you how the CS50 library is implemented"},"1885":{"dur":2,"text":"so that we can take those training wheels off altogether."},"1887":{"dur":3,"text":"But it turns out there's another way to get input from a user."},"1891":{"dur":3,"text":"In fact, we ourselves have been using command line arguments"},"1894":{"dur":1,"text":"for a couple of weeks now."},"1896":{"dur":4,"text":"Every time we have run Clang or we have run make,"},"1901":{"dur":3,"text":"we haven't just typed clang, Enter, we haven't typed make, Enter."},"1905":{"dur":4,"text":"What have we typically written after the word clang at our terminal windows prompt?"},"1911":{"dur":1,"text":"[student] The file name. >>The file name, right?"},"1912":{"dur":4,"text":"Hello.c or mario.c or whatever the relevant file name is."},"1917":{"dur":4,"text":"And in that sense what you've really done is you've influenced the behavior of Clang"},"1921":{"dur":3,"text":"because certainly the people who wrote Clang had no idea that little old you"},"1925":{"dur":3,"text":"was going to write a program called mario.c years later."},"1928":{"dur":4,"text":"So you had to somehow influence the behavior of that program,"},"1933":{"dur":4,"text":"and that program Clang had to be written in such a way that it can accept input from you"},"1938":{"dur":5,"text":"by the addition of words on the prompt before the user hits Enter."},"1943":{"dur":4,"text":"So it turns out that for some time we have been declaring almost all of our programs"},"1947":{"dur":4,"text":"to start like this--int main(void)--and then we've gone ahead"},"1952":{"dur":2,"text":"and started writing our code."},"1955":{"dur":2,"text":"And we might have some sharp includes at the top of the file,"},"1957":{"dur":2,"text":"but almost all of our programs thus far have begun with this"},"1960":{"dur":3,"text":"even though you might have seen in section, in books, online references"},"1964":{"dur":2,"text":"that this does not in fact have to be void."},"1966":{"dur":9,"text":"Another legitimate form for this to take is int argc and then string argv[]."},"1975":{"dur":1,"text":"So now what is this implying?"},"1977":{"dur":3,"text":"It turns out that argc, which is a human convention--you could call this foo,"},"1981":{"dur":2,"text":"but it would just be a lot less clear to readers--"},"1983":{"dur":5,"text":"argc just is an argument to the function called main that represents what?"},"1989":{"dur":3,"text":"What does argc stand for for those familiar?"},"1992":{"dur":2,"text":"[inaudible student response] >>Yeah, number of arguments or argument count."},"1994":{"dur":1,"text":"It's as simple as that."},"1996":{"dur":2,"text":"How many arguments were passed to this program?"},"1999":{"dur":1,"text":"What does that mean?"},"2000":{"dur":6,"text":"If on the command line I have run something like this--clang mario.c--"},"2007":{"dur":8,"text":"argc when I hit Enter is going to take on a value of, somewhat confusingly, 2."},"2015":{"dur":4,"text":"So it turns out that argc is argument count,"},"2020":{"dur":6,"text":"but for historical reasons, the name of the program itself is included in that count."},"2026":{"dur":5,"text":"So argc is 2 when I wrote clang mario.c."},"2031":{"dur":2,"text":"What does argv contain?"},"2034":{"dur":2,"text":"First of all, argv looks like a string but not quite"},"2037":{"dur":2,"text":"because as of last Wednesday and all the more today,"},"2039":{"dur":3,"text":"these square brackets denote what? That's an array."},"2042":{"dur":4,"text":"There's no number in the array, and that should make sense intuitively"},"2047":{"dur":3,"text":"because the people who wrote Clang years ago certainly had no idea"},"2050":{"dur":5,"text":"how many words people like us would type at the prompt before hitting Enter."},"2056":{"dur":5,"text":"So in this case here they have declared the function main as taking an array of arguments,"},"2062":{"dur":2,"text":"0 or more arguments."},"2064":{"dur":1,"text":"They don't know in advance how many there are,"},"2066":{"dur":3,"text":"so there is deliberately no number inside of these square brackets."},"2069":{"dur":3,"text":"But the fact that the square brackets are there are telling the computer,"},"2072":{"dur":1,"text":"expect an array."},"2074":{"dur":2,"text":"Argv is just shorthand notation for argument vector."},"2077":{"dur":2,"text":"A vector is a fancy way of saying array,"},"2079":{"dur":3,"text":"and array is a fancy way of saying a list or collection."},"2082":{"dur":4,"text":"So this just means that if you write main like this"},"2087":{"dur":3,"text":"instead of like how we've been doing it for the past couple of weeks,"},"2091":{"dur":3,"text":"your program now has the power to accept command line arguments"},"2094":{"dur":3,"text":"so that no longer do you have to write mario and then hit Enter,"},"2098":{"dur":3,"text":"then type in a number for how many blocks high you want the pyramid to be,"},"2101":{"dur":1,"text":"then hit Enter again."},"2103":{"dur":4,"text":"We don't even need to use GetString anymore or GetInt or GetFloat for that matter."},"2107":{"dur":4,"text":"We can just expect the user to type those words at the prompt itself"},"2112":{"dur":4,"text":"just like the authors of Clang decided it would be a really annoying program"},"2116":{"dur":3,"text":"if to compile your code you first typed clang, hit Enter,"},"2120":{"dur":3,"text":"then we said to the user, please type the name of the file you want to compile,"},"2124":{"dur":2,"text":"then we type in mario.c and hit Enter."},"2126":{"dur":2,"text":"But that's exactly what we've been doing to our users the past couple of weeks."},"2129":{"dur":3,"text":"We use GetString and we wait until the program is running to prompt them for input."},"2133":{"dur":3,"text":"That no longer needs to be the case."},"2136":{"dur":4,"text":"So in this example here, we now have string argv,"},"2141":{"dur":2,"text":"and this too is an oversimplification,"},"2143":{"dur":2,"text":"training wheels that will very soon come off."},"2145":{"dur":5,"text":"This is the more proper way of writing this alternative declaration of main"},"2150":{"dur":3,"text":"because it turns out that what we keep calling string actually has a star,"},"2154":{"dur":3,"text":"an asterisk, in its actual definition, but this just looks complicated,"},"2158":{"dur":4,"text":"it's confusing at first, so we simplify by just creating a synonym of sorts"},"2162":{"dur":6,"text":"in the CS50 library that maps char* to this more user-friendly word string."},"2169":{"dur":3,"text":"So let's actually try this then. Let me go ahead and open up gedit here."},"2173":{"dur":3,"text":"Let me go ahead and open argv of 1."},"2177":{"dur":4,"text":"This program apparently prints the arguments, but in English terms,"},"2181":{"dur":4,"text":"by looking at this code, what does this do more specifically?"},"2186":{"dur":9,"text":"If I type in the command a.out foo bar, what gets printed in my black and white window?"},"2195":{"dur":5,"text":"A.out foo bar, Enter."},"2203":{"dur":5,"text":"Go ahead. Yeah. >>[inaudible student response]"},"2208":{"dur":4,"text":"Good. So a.out, new line, foo, new line, bar, new line."},"2212":{"dur":2,"text":"Why is this? We can certainly confirm in just a moment."},"2214":{"dur":1,"text":"This is kind of a fluffy line of code."},"2216":{"dur":2,"text":"It just prints a new line just to make things prettier on the screen."},"2219":{"dur":4,"text":"This is a loop that's iterating from 0 on up to argc,"},"2223":{"dur":3,"text":"and this is incrementing on each iteration ++."},"2227":{"dur":5,"text":"So this is now saying print a string, as implied by this %s."},"2232":{"dur":4,"text":"Argv[i] is pretty much the same idea from the previous example."},"2236":{"dur":3,"text":"We used to call the variable s; now it's called, arbitrarily, argv."},"2239":{"dur":4,"text":"This means print the ith argument that was typed at the command line,"},"2244":{"dur":4,"text":"and then after this whole thing is done, just for good measure print another new line."},"2248":{"dur":2,"text":"So let's see this. Let me open up the terminal window."},"2251":{"dur":5,"text":"Let me compile argv of 1, and now let me run argv of 1, Enter. Hmm. Okay."},"2257":{"dur":3,"text":"Let's run foo bar. Interesting. Baz."},"2260":{"dur":1,"text":"And if you've ever wondered why I type this,"},"2262":{"dur":2,"text":"this is just also a stupid computer science convention."},"2265":{"dur":3,"text":"The world often needs just verbal placeholders for words."},"2268":{"dur":2,"text":"So if you want to talk about some generic string,"},"2270":{"dur":3,"text":"computer scientists just tend to say foo when they need a random word,"},"2273":{"dur":2,"text":"then they say bar if they need a second random word,"},"2275":{"dur":3,"text":"then they say baz if they need a third word, then they say qux if they need a fourth word,"},"2279":{"dur":2,"text":"and then there's a huge religious debate online as to what comes after qux,"},"2281":{"dur":3,"text":"so you can Google that to figure out what the other arbitrary word should be."},"2284":{"dur":2,"text":"But these have no meaning whatsoever,"},"2287":{"dur":2,"text":"though foo bar, if you Google that, that does have meaning,"},"2290":{"dur":2,"text":"which is part of the etymology here."},"2292":{"dur":4,"text":"So all this is doing then is printing 1 of these strings per line."},"2297":{"dur":2,"text":"So if I instead, though, wanted to get a little fancier,"},"2299":{"dur":2,"text":"suppose that I didn't want to print each string per line;"},"2302":{"dur":3,"text":"I wanted to print each character from each string per line."},"2306":{"dur":2,"text":"How could I instead do that?"},"2308":{"dur":5,"text":"What do I need to change about this program if I want to print not each word"},"2313":{"dur":3,"text":"but I want to print each word letter by letter by letter,"},"2317":{"dur":3,"text":"then the next word letter by letter by letter?"},"2320":{"dur":3,"text":"How do we combine these ideas thus far? Yeah."},"2323":{"dur":3,"text":"[student] %c. >>All right. So we somewhere need a %c."},"2327":{"dur":3,"text":"Good, because I don't want to print whole strings, I want to print characters. What else?"},"2330":{"dur":3,"text":"[inaudible student response] >>Interesting."},"2334":{"dur":2,"text":"So we need sort of a second dimension here now"},"2336":{"dur":5,"text":"because think of argv as an array, but it's an array of strings."},"2342":{"dur":4,"text":"But as of, like, 15 minutes ago, what's a string? It's an array of characters."},"2347":{"dur":5,"text":"So really, argv is an array of an array of characters,"},"2352":{"dur":2,"text":"an array of arrays of characters."},"2354":{"dur":4,"text":"So it turns out that we can use just more square bracket notations. So let's do this."},"2359":{"dur":4,"text":"In the top of this loop on line 19, I'm going to iterate from i up to argc,"},"2363":{"dur":2,"text":"but then I'm going to do this:"},"2365":{"dur":1,"text":"for--I can't use i now."},"2367":{"dur":2,"text":"I need another variable because I want to iterate over the words"},"2370":{"dur":2,"text":"but then also over the letters in the words"},"2372":{"dur":4,"text":"so I sort of have a vertical axis and a horizontal axis, sort of conceptually."},"2377":{"dur":6,"text":"So int j gets 0, then I want to do j as long as j is less than--and I'll clean this up in a bit."},"2383":{"dur":4,"text":"How do I iterate over the letters in a string? We did this a moment ago."},"2388":{"dur":6,"text":"Strlen of argv[i]. Good."},"2394":{"dur":3,"text":"And again, I'm making a little inefficiency here by not creating n or whatever,"},"2397":{"dur":1,"text":"but we'll come back to that."},"2399":{"dur":3,"text":"So now j++. Now I have to indent further here."},"2403":{"dur":3,"text":"What do I now want to print on each iteration?"},"2406":{"dur":2,"text":"[inaudible student response] >>So [i] will give me the word."},"2409":{"dur":3,"text":"[i] [j], sort of like a matrix."},"2412":{"dur":1,"text":"Those of you with math-y backgrounds,"},"2414":{"dur":4,"text":"we're sort of indexing even deeper into this matrix or this array of arrays,"},"2419":{"dur":2,"text":"this 2-dimensional structure."},"2421":{"dur":3,"text":"So now let's see what happens here. Let me open up my bigger terminal window."},"2425":{"dur":3,"text":"Let me rerun make of argv of 1."},"2428":{"dur":4,"text":"And I've screwed up here, which is a good lesson because I too forgot to do this."},"2433":{"dur":4,"text":"Implicitly declaring C library function 'strlen' with type 'unsigned--"},"2437":{"dur":3,"text":"I don't even know what the rest of that means, but I have seen this before,"},"2440":{"dur":1,"text":"implicitly declaring."},"2442":{"dur":3,"text":"Whenever we see this error, what does this usually signify?"},"2445":{"dur":2,"text":"[inaudible student response] >>I forgot a library up top. But wait a minute."},"2448":{"dur":3,"text":"Usually I've screwed up because I forgot the CS50 library, but that's there."},"2451":{"dur":2,"text":"Usually I've screwed up because I've forgotten standard I\/O."},"2454":{"dur":3,"text":"And frankly, I don't even need this. We're not using GetString today."},"2457":{"dur":1,"text":"So what am I missing?"},"2459":{"dur":4,"text":"There's another library that now we need to use occasionally called string.h,"},"2464":{"dur":4,"text":"and this is just yet another library that has more functions that aren't in standard I\/O."},"2468":{"dur":2,"text":"So let's go back to my big terminal window."},"2471":{"dur":5,"text":"Okay. Now, damn it, I guess I was wrong. I was using the CS50 library."},"2476":{"dur":1,"text":"So we can fix this in either of 2 ways."},"2478":{"dur":3,"text":"We can take the training wheels off right now and just do this,"},"2481":{"dur":5,"text":"or let's kind of keep that simplification just for now, paste this back in,"},"2486":{"dur":3,"text":"solve that problem, and now go back to the terminal window."},"2490":{"dur":2,"text":"So to be clear, in the CS50 library is not just functions,"},"2493":{"dur":3,"text":"it's also the keyword string, which is why that error just happened."},"2496":{"dur":6,"text":"So here we go. I fixed both of the library issues. Enter. Good."},"2503":{"dur":6,"text":"Argv of 1, foo bar, Enter. Excellent."},"2509":{"dur":3,"text":"So now we have each letter of each word printed 1 per line,"},"2512":{"dur":2,"text":"which does not make for a very interesting program,"},"2515":{"dur":4,"text":"but notice now we have the capability of not only iterating over words"},"2519":{"dur":4,"text":"but also over individual letters in words, which sounds awfully familiar"},"2524":{"dur":6,"text":"to even the simplest of applications like scrambling letters in a string like this."},"2530":{"dur":2,"text":"Let's go ahead and take our 5-minute break here."},"2532":{"dur":2,"text":"And when we come back, we'll start talking about the efficiency"},"2534":{"dur":3,"text":"with which we can do these things better."},"2539":{"dur":2,"text":"All right. We are back."},"2541":{"dur":5,"text":"Thanks to one of our TFs who plays a lot of bananagrams,"},"2546":{"dur":3,"text":"we actually have a whole bunch of chars with us here today"},"2550":{"dur":2,"text":"physically incarnated with these little plastic pieces,"},"2552":{"dur":4,"text":"and let me propose that this blank white slate here represents the RAM in my computer--"},"2556":{"dur":2,"text":"laptop, desktop, whatever--and there looks like a lot of it"},"2559":{"dur":4,"text":"because if we start chopping up this RAM into small byte-size pieces,"},"2564":{"dur":4,"text":"let's arbitrarily say that something that size and that blurry represents--"},"2568":{"dur":3,"text":"there we go, and let's zoom out a little bit here--"},"2572":{"dur":3,"text":"let's say something that size represents a single byte."},"2576":{"dur":4,"text":"So we can indeed fit a whole bunch of bytes or characters inside of this memory,"},"2580":{"dur":2,"text":"as suggested by the relative size here."},"2582":{"dur":3,"text":"So suppose now that the goal is to allocate memory for a string."},"2586":{"dur":1,"text":"How does this actually work?"},"2588":{"dur":2,"text":"In the programs we've been writing, we've usually been using GetString,"},"2591":{"dur":4,"text":"but now, clearly, there's this other channel via which we can get user input in argv"},"2596":{"dur":1,"text":"via command line arguments."},"2598":{"dur":2,"text":"But what's really going on underneath the hood?"},"2600":{"dur":4,"text":"It turns out if we call--let's scroll back to GetString--the function GetString"},"2604":{"dur":3,"text":"in the CS50 library, the user is prompted for a string,"},"2608":{"dur":2,"text":"the user types in some word--let's call it HELLO."},"2610":{"dur":4,"text":"And we've been saying for the past couple of weeks that the return value of GetString"},"2615":{"dur":2,"text":"is in fact a string, like the word HELLO."},"2617":{"dur":1,"text":"But what is GetString really doing?"},"2619":{"dur":5,"text":"As the user types in H-E-L-L-O, Enter, GetString is figuring out,"},"2625":{"dur":2,"text":"okay, how many characters is this? This is H-E-L-L-O."},"2627":{"dur":4,"text":"So it needs to allocate, it needs to ask the operating system--Linux in this case--"},"2632":{"dur":2,"text":"for at least 5 bytes to store HELLO."},"2635":{"dur":4,"text":"And what it then proceeds to do once it gets back those 5 bytes from the operating system"},"2639":{"dur":4,"text":"is to lay out H-E-L-L-O back to back to back to back."},"2644":{"dur":6,"text":"And so what's really returned from GetString is a chunk of data that looks like this."},"2651":{"dur":5,"text":"But this is a bit inaccurate because it turns out that it's not as simple"},"2656":{"dur":3,"text":"as just storing H-E-L-L-O in the computer's memory"},"2660":{"dur":3,"text":"because suppose that my program that I'm writing in C then calls GetString again,"},"2664":{"dur":4,"text":"and the next word the user types in is B-Y-E, BYE."},"2668":{"dur":3,"text":"Well, I need to fit that word BYE somewhere in memory."},"2671":{"dur":2,"text":"I can't clobber HELLO."},"2673":{"dur":3,"text":"For instance, I don't want the computer to just start overwriting like this"},"2677":{"dur":4,"text":"the original word because I might still be using the word HELLO in a variable"},"2681":{"dur":1,"text":"somewhere else in my program."},"2683":{"dur":2,"text":"So B-Y-E has to end up somewhere else in memory."},"2685":{"dur":4,"text":"But the convention typically is that the next string you allocate"},"2690":{"dur":4,"text":"probably, but not always, is going to end up at the next available memory location."},"2694":{"dur":2,"text":"And if I haven't asked the operating system for any memory"},"2697":{"dur":4,"text":"since the last time I called GetString, odds are the word BYE"},"2701":{"dur":4,"text":"is going to end up right after the word HELLO in memory."},"2705":{"dur":4,"text":"But at this point you can perhaps see where a potential problem arises."},"2710":{"dur":2,"text":"Because the next chunks of memory, the next bytes that were just free--"},"2713":{"dur":4,"text":"clean white slate--in the computer's memory were right next to HELLO,"},"2718":{"dur":5,"text":"it feels like the first string I asked for might suddenly now change"},"2723":{"dur":2,"text":"because I've essentially changed it to HELLOBYE"},"2726":{"dur":4,"text":"instead of somehow demarcing the start of BYE and the end of HELLO."},"2731":{"dur":2,"text":"So it turns out that what's really going on underneath the hood,"},"2733":{"dur":3,"text":"which you might have glimpsed in online references or section or books"},"2737":{"dur":4,"text":"or not at all just yet is that there is actually a deliberate demarcation"},"2741":{"dur":4,"text":"between words in a computer's memory."},"2745":{"dur":6,"text":"And in fact, in this case here, rather than just put BYE right next to HELLO,"},"2752":{"dur":6,"text":"instead, the computer puts a special character, the special null character, so to speak,"},"2758":{"dur":4,"text":"which is represented with a marker with backslash 0."},"2763":{"dur":3,"text":"So long story short, recall that characters are represented in ASCII."},"2766":{"dur":2,"text":"ASCII is just a mapping between numbers and letters,"},"2769":{"dur":4,"text":"and most of those letters start roughly 65 for capital A,"},"2773":{"dur":5,"text":"but it turns out you can certainly represent the number 0 as an integer or in binary,"},"2779":{"dur":2,"text":"and it turns out the world decided long, long ago, \"You know what?\""},"2782":{"dur":4,"text":"\"Let's reserve number 0 as not representing any characters on the keyboard--"},"2787":{"dur":3,"text":"\"no letters, no numbers, no punctuation. 0 is special.\""},"2790":{"dur":5,"text":"\"It's going to be the special null character, and we're going to write it as \\0.\""},"2795":{"dur":5,"text":"The difference being if we just wrote 0, 0 is a character."},"2801":{"dur":4,"text":"Recall that there are ASCII codes for 0, for 1, for 2, for 3"},"2805":{"dur":4,"text":"because the character 0 is different from the number 0."},"2810":{"dur":3,"text":"And you can see that if you look back from week 1 when we first talked about ASCII,"},"2814":{"dur":4,"text":"0 and 1 and 2 and 3 all the way up to 9 had their own ASCII codes."},"2819":{"dur":3,"text":"They are not, coincidentally, 0 through 9. They're very different."},"2822":{"dur":6,"text":"So 0 just means \"I am special,\" and the \\0 means, literally, \"I'm not the 0 character.\""},"2828":{"dur":2,"text":"\"I'm this special value, the null character.\""},"2831":{"dur":5,"text":"So I actually need another one of these since I can't make the same mistake twice."},"2836":{"dur":4,"text":"So after the word BYE we're also going to need another one of these null characters."},"2841":{"dur":5,"text":"Let me grab my pen here and let me quickly draw another \\0"},"2847":{"dur":3,"text":"so that after I have asked the operating system for 2 strings"},"2850":{"dur":2,"text":"via GetString followed by another call to GetString,"},"2853":{"dur":2,"text":"this is what's actually in memory."},"2855":{"dur":4,"text":"So when I get back a string, I'm really getting back that,"},"2859":{"dur":3,"text":"and when I get the next string, I'm really getting back that."},"2863":{"dur":4,"text":"So this begs the question, strlen, first of all, what should it return?"},"2867":{"dur":6,"text":"When I call strlen on the string s and s was the word HELLO that the user typed in,"},"2874":{"dur":3,"text":"what did we obviously say the length of HELLO was a few minutes ago?"},"2877":{"dur":3,"text":"It was 5, right? H-E-L-L-O. And that's indeed how strlen works."},"2881":{"dur":4,"text":"It returns what a normal human being would expect the length of a string to be."},"2885":{"dur":5,"text":"But in reality, how big is the array of characters that's storing hello?"},"2891":{"dur":1,"text":"It's actually 6."},"2892":{"dur":2,"text":"So strlen does not mention that fact to you."},"2895":{"dur":4,"text":"But underneath the hood the computer is indeed using 6 bytes to store a 5-letter word,"},"2900":{"dur":2,"text":"and this is true no matter how long the word is."},"2902":{"dur":4,"text":"There's always going to be a special null terminating character at the end of the string"},"2906":{"dur":2,"text":"to demarc its total length."},"2908":{"dur":4,"text":"So then if you are now the person implementing strlen 20, 30 years ago,"},"2913":{"dur":2,"text":"how do you go about implementing strlen itself?"},"2915":{"dur":4,"text":"We take for granted that it exists, just like we take for granted that printf exists,"},"2919":{"dur":2,"text":"but if HELLO is the word in question"},"2922":{"dur":2,"text":"and what I have in memory is something that looks like this,"},"2925":{"dur":2,"text":"if you had to reimplement strlen because you were asked to"},"2928":{"dur":2,"text":"or because, frankly, you didn't know strlen existed--"},"2930":{"dur":4,"text":"you had to roll this one on your own--how could you implement strlen"},"2934":{"dur":3,"text":"when given something that looks like this?"},"2937":{"dur":4,"text":"Now that we know a string is an array, we can iterate over each of the individual characters"},"2942":{"dur":3,"text":"using something like-- Let's try to do this on the fly."},"2946":{"dur":5,"text":"Let me go into the appliance. Let me create a new file, strlen.c."},"2952":{"dur":7,"text":"Let me go ahead now and do include stdio.h so that we have access to printf."},"2959":{"dur":6,"text":"Let me do int main(void). Oh. I'll just do this on my own for now then. [chuckles]"},"2965":{"dur":2,"text":"Thank you."},"2968":{"dur":2,"text":"This is what I'm doing. All right."},"2971":{"dur":3,"text":"So before I turned on the screen, I typed all of that."},"2974":{"dur":2,"text":"And now what I'm going to do is the following:"},"2977":{"dur":2,"text":"printf(\"Give me a string: \")"},"2980":{"dur":2,"text":"That's just fluffy instructions."},"2982":{"dur":3,"text":"Now let me do string s = GetString."},"2985":{"dur":1,"text":"I already need to make a change now."},"2987":{"dur":5,"text":"I'm using the CS50 library suddenly, so let me go ahead and type in cs50.h."},"2992":{"dur":7,"text":"And now let's do this: printf(\"The length is: %d, strlen[s]--"},"3000":{"dur":2,"text":"and I'm not done yet. What else do I have to add to this program?"},"3003":{"dur":2,"text":"[student] string.h. >>string.h."},"3005":{"dur":5,"text":"So for now, we're using strlen, so let's make sure the compiler knows where that is,"},"3010":{"dur":1,"text":"so a little sanity check."},"3012":{"dur":4,"text":"I'm getting a string in line 8, and in line 9 I'm printing out its length with %d."},"3016":{"dur":3,"text":"So let's go ahead and open this up."},"3019":{"dur":3,"text":"We have make strlen--compiles okay--"},"3023":{"dur":6,"text":"strlen--let me zoom in--Enter, H-E-L-L-O, Enter. The length is 5."},"3030":{"dur":2,"text":"Okay, so strlen seems to work, but the world knew that."},"3032":{"dur":4,"text":"So let's now implement strlen ourselves as follows."},"3037":{"dur":2,"text":"Let me take this library away."},"3039":{"dur":3,"text":"We no longer have access to string.h because I didn't even know it existed."},"3042":{"dur":3,"text":"But that's okay because I can implement strlen myself"},"3045":{"dur":4,"text":"and have it take a string called input,"},"3050":{"dur":3,"text":"and now I need to figure out the length of this string."},"3053":{"dur":2,"text":"So how can I do this?"},"3055":{"dur":4,"text":"What if I do--let's see how to do this-- What do you want to do?"},"3060":{"dur":3,"text":"[inaudible student response] >>Okay."},"3064":{"dur":1,"text":"So we can do this in a bunch of ways. Let me try to take this approach."},"3065":{"dur":4,"text":"Let me give myself an int variable i, so i starts at 0."},"3070":{"dur":9,"text":"And let me say this: while input[i] is not equal to what? \\0."},"3079":{"dur":4,"text":"So it turns out, as with the case with all chars when writing them literally in a program,"},"3083":{"dur":2,"text":"you have to use single quotes, not double quotes."},"3085":{"dur":3,"text":"So if I were writing the letter a, I would do that, the letter b, I would do that."},"3089":{"dur":4,"text":"This, by contrast, would be a string, not an individual character."},"3093":{"dur":5,"text":"So I want \\0 literally. What do I want to do in this loop?"},"3098":{"dur":4,"text":"Actually, I need another variable, so int length gets 0."},"3102":{"dur":3,"text":"Even if you weren't sure why we started the way we did,"},"3106":{"dur":3,"text":"now that we're going down this road, what do I want to do on line 9?"},"3110":{"dur":5,"text":"length++ and then down here on line 10, return length."},"3115":{"dur":2,"text":"So how is strlen implemented?"},"3118":{"dur":2,"text":"It's actually implemented probably like this."},"3120":{"dur":2,"text":"Maybe the person used a for loop, maybe a do while loop--who knows?"},"3123":{"dur":2,"text":"We'd really have to look underneath the hood at the actual source code"},"3125":{"dur":2,"text":"in some file called string.c probably."},"3128":{"dur":1,"text":"But here let's think about what I'm doing."},"3130":{"dur":3,"text":"I'm declaring a variable called i, setting it equal to 0."},"3133":{"dur":3,"text":"I'm then declaring another variable called length, setting it equal to 0."},"3137":{"dur":7,"text":"Then I'm saying while the ith character in input is not equal to the special null character, \\0,"},"3145":{"dur":1,"text":"increment the length."},"3147":{"dur":5,"text":"But as soon as the ith character is this special character, what happens to the loop?"},"3152":{"dur":3,"text":"It short circuits. It stops, which means we then instantly return length."},"3156":{"dur":4,"text":"So if I didn't mess up, let's go ahead and go back to my terminal window."},"3160":{"dur":2,"text":"Let me recompile. And I did screw up."},"3163":{"dur":2,"text":"Incompatible redeclaration of library function strlen."},"3166":{"dur":2,"text":"So I was trying to get too clever for my own good here."},"3168":{"dur":2,"text":"The compiler actually knows that there is a function called strlen"},"3171":{"dur":3,"text":"even though we haven't included the library. That's fine. Whatever."},"3175":{"dur":2,"text":"We're just going to cooperate then. Let's rename this length."},"3178":{"dur":5,"text":"Let me change the use of it to length here, and this will make Clang happier."},"3184":{"dur":4,"text":"As an aside, because some of these functions are so darn common--"},"3188":{"dur":3,"text":"strlen, prinf--they actually have sort of special status."},"3192":{"dur":2,"text":"And so Clang just knows a little something special about them."},"3195":{"dur":3,"text":"That's not always the case with most functions, so that's why we got yelled at."},"3198":{"dur":2,"text":"Let me try again. Thankfully, it worked that time."},"3201":{"dur":2,"text":"So now let me run my own strlen program."},"3203":{"dur":6,"text":"Give me a string: H-E-L-L-O, Enter. And I have screwed up."},"3209":{"dur":5,"text":"Why? >>[inaudible student response] >>Exactly."},"3214":{"dur":4,"text":"So I have myself here a very nice-looking infinite loop"},"3219":{"dur":3,"text":"because even though I'm incrementing length on each iteration,"},"3222":{"dur":5,"text":"what am I clearly not doing? I'm not incrementing i. Okay. Easy fix. Yes?"},"3227":{"dur":4,"text":"Okay. No. Now we would run afoul of some other common mistake where I need brackets."},"3232":{"dur":2,"text":"And frankly, this code is starting to look ugly,"},"3234":{"dur":2,"text":"so we'll take a stab at cleaning this up in a moment."},"3236":{"dur":2,"text":"But now I'm incrementing both length and i."},"3238":{"dur":3,"text":"Frankly, I already see an opportunity for improvement here, but we'll come back to that."},"3242":{"dur":2,"text":"So now let's just make sure we're at least making progress."},"3245":{"dur":3,"text":"This has happened to a few of you, and I neglected to mention this in advance."},"3248":{"dur":4,"text":"When you do have the misfortune of a scenario like this, how do you fix this"},"3252":{"dur":2,"text":"short of restarting the appliance or your computer or closing the window?"},"3255":{"dur":1,"text":"It's actually easy."},"3256":{"dur":4,"text":"Control C will send this little carrot symbol C, and that just terminates most programs."},"3261":{"dur":4,"text":"If you have a really bad infinite loop that's printing stuff infinitely many times,"},"3265":{"dur":3,"text":"sometimes you might have to hit Control C a thousand times to make it actually hear it."},"3269":{"dur":3,"text":"So just realize now because I'm not printing anything, that was quite easy."},"3273":{"dur":4,"text":"And technically, once suffices, but I get impatient and I usually hit it that many times."},"3277":{"dur":5,"text":"So strlen. Give me a string: HELLO. Is it going to work this time?"},"3284":{"dur":2,"text":"Okay. Another common mistake. Have to recompile."},"3287":{"dur":2,"text":"That was deliberate, that one. All right."},"3290":{"dur":3,"text":"So strlen, H-E-L-L-O, Enter. Excellent."},"3294":{"dur":1,"text":"So we now have a strlen to 5."},"3295":{"dur":2,"text":"So we have literally reimplemented that wheel."},"3298":{"dur":3,"text":"So now let's clean this up because this does not make me impressed"},"3302":{"dur":2,"text":"with the design of my code."},"3304":{"dur":3,"text":"What can we clearly eliminate in this program to clean this up?"},"3307":{"dur":4,"text":"[inaudible student response] >>Yeah. Literally, we're treating i and length identically."},"3311":{"dur":4,"text":"So why don't we just get smart and say while length?"},"3316":{"dur":4,"text":"Rather, let's just call it length to begin with, initialize it to 0"},"3320":{"dur":2,"text":"because by default the string has no length until we figure out what it is."},"3323":{"dur":2,"text":"Now we do this, and now this is a pretty elegant program."},"3326":{"dur":2,"text":"One variable. I cleaned it up, tightened it up."},"3328":{"dur":3,"text":"So now let's go back to my terminal window. Let's go ahead and run this."},"3331":{"dur":3,"text":"Make strlen. Looks good. Run strlen again, Enter."},"3335":{"dur":5,"text":"Give me a string: HELLO, Enter. And it seems to be working as 5."},"3340":{"dur":4,"text":"Now, to be clear, if I had not written, for instance, HELLO in 1 string"},"3345":{"dur":3,"text":"and then BYE in another, we can certainly have multiple words."},"3348":{"dur":4,"text":"If the expression I actually wanted to type was not HELLO but, for instance,"},"3353":{"dur":5,"text":"HELLO WORLD, notice that what we would not have is this situation here, right?"},"3358":{"dur":1,"text":"That would suggest that that's 2 strings."},"3360":{"dur":5,"text":"You certainly can have space bar characters, so if we actually typed in a longer phrase"},"3366":{"dur":2,"text":"like HELLO WORLD, what we would really have in memory"},"3368":{"dur":4,"text":"looks a little something like that there."},"3372":{"dur":6,"text":"All right. Any questions then about the representation here of strings?"},"3378":{"dur":1,"text":"No? All right."},"3380":{"dur":4,"text":"So I said earlier that calling strlen again and again deliberately like that"},"3385":{"dur":2,"text":"probably isn't the best idea because you're going to be doing a whole lot of work"},"3388":{"dur":2,"text":"again and again and again."},"3390":{"dur":5,"text":"Indeed, what kind of work is necessary for figuring out the length of a string, apparently?"},"3396":{"dur":4,"text":"You have to start at the beginning and then look, look, look, look, look"},"3400":{"dur":4,"text":"until you finally see that special character, at which point, ah, now I know the length."},"3404":{"dur":3,"text":"So earlier when we had strlen being called again and again and again,"},"3408":{"dur":4,"text":"the reason I proposed that was kind of stupid is because again, that string looks like that."},"3412":{"dur":2,"text":"It's not going to change every time you iterate through some loop,"},"3414":{"dur":2,"text":"so you're doing unnecessary work."},"3416":{"dur":3,"text":"At the same time you should know, as an aside, that compilers like Clang these days"},"3420":{"dur":1,"text":"have been developed over many years,"},"3422":{"dur":3,"text":"and compiler writers, programmers, are pretty smart."},"3425":{"dur":4,"text":"And so it turns out that Clang and other compilers can actually figure out that,"},"3430":{"dur":3,"text":"okay, yes, you wrote strlen in your condition,"},"3433":{"dur":3,"text":"which technically means that we would call it again and again and again."},"3437":{"dur":4,"text":"But smart compilers can actually optimize those kinds of poor user decisions"},"3441":{"dur":1,"text":"out of your code to redress things."},"3443":{"dur":3,"text":"So do just realize that sometimes the compiler is smarter than us"},"3447":{"dur":1,"text":"and will kind of hide our own mistakes."},"3449":{"dur":2,"text":"But certainly when it comes to problem sets and the like,"},"3451":{"dur":3,"text":"do be thinking about those fundamentally erroneous design decisions"},"3455":{"dur":2,"text":"potentially for the simple reason that we'd be doing way more work"},"3458":{"dur":3,"text":"than we actually have to do. But how much more work?"},"3461":{"dur":3,"text":"In the case of HELLO WORLD, let's start to generalize the size of this problem."},"3464":{"dur":3,"text":"What's the length of the problem or the size of the problem"},"3468":{"dur":2,"text":"when the word the user typed in is HELLO?"},"3470":{"dur":3,"text":"It's apparently 5, maybe 6. Plus or minus 1. Whatever."},"3473":{"dur":1,"text":"It's so close we'll just call it 5."},"3475":{"dur":4,"text":"So what's the size of the problem here when trying to figure out the length of HELLO?"},"3480":{"dur":6,"text":"It's 1, 2, 3, 4, 5, and maybe 6 for the last character, but let's generalize that as n."},"3486":{"dur":3,"text":"So n, just the variable n, is what computer scientists would typically use"},"3490":{"dur":3,"text":"to describe the size of a problem, and the problem at hand is how long is HELLO?"},"3493":{"dur":3,"text":"How much time does strlen take?"},"3497":{"dur":3,"text":"It takes on the order of n steps, where each step means look at a character,"},"3501":{"dur":2,"text":"look at a character, look at a character."},"3503":{"dur":3,"text":"And we had this discussion a while back, the number of operations something takes."},"3506":{"dur":3,"text":"The very first day of class we had everyone awkwardly stand up,"},"3509":{"dur":2,"text":"and then everyone started pairing off with each other"},"3512":{"dur":3,"text":"in order to actually count ideally how many people were in the room."},"3515":{"dur":3,"text":"And we also did another thing whereby if I instead did it the old school way"},"3519":{"dur":4,"text":"of just starting 1, 2, 3, 4, 5, 6 and so forth,"},"3524":{"dur":4,"text":"that too, the size of that problem was of size n. There were n people in the room."},"3529":{"dur":2,"text":"But I could speed that up, right? Grade school style I could start counting in 2s."},"3532":{"dur":3,"text":"2, 4, 6, 8, 10, 12. And that feels so much faster, and indeed it is."},"3535":{"dur":6,"text":"It's literally twice as fast, but again, if another 400 people walked into this room"},"3541":{"dur":6,"text":"all at once, those algorithms would take another 400 or maybe 200 steps."},"3548":{"dur":5,"text":"But by contrast, if we really get smart and we instead have all of you count yourselves,"},"3553":{"dur":1,"text":"recall how that algorithm worked."},"3555":{"dur":1,"text":"You all stood up. Let me fast-forward to this."},"3557":{"dur":3,"text":"You all stood up, you paired off, then half of you sat down,"},"3560":{"dur":2,"text":"half of you sat down, half of you sat down,"},"3562":{"dur":4,"text":"and on each iteration of this loop from week 0, we halved the problem at hand"},"3567":{"dur":2,"text":"and went to n\/2, then n\/4, then n\/8."},"3570":{"dur":5,"text":"And the implication of that is that if another 400 people walk into the room, no big deal,"},"3575":{"dur":4,"text":"it will take us 1 more round, not 400 more rounds, not 200 more rounds."},"3580":{"dur":3,"text":"And so the story we told a while back had to do a little something with this."},"3583":{"dur":4,"text":"This red line here is linear, it's straight, and it's labeled as n"},"3587":{"dur":2,"text":"because as the size of a problem grows,"},"3590":{"dur":4,"text":"if your algorithm or program with which you're solving it takes n steps,"},"3594":{"dur":3,"text":"we can plot it as a straight line where it takes more time the bigger the size of the problem."},"3598":{"dur":4,"text":"And the twosies approach, counting 2, 4, 6, 8, still a straight line, just a little better."},"3603":{"dur":5,"text":"It takes a little less time, so the yellow line is below the red line point for point."},"3608":{"dur":4,"text":"But even better was this holy grail of what we called logarithmic time"},"3612":{"dur":2,"text":"where even if again we double the number of people in the room,"},"3614":{"dur":3,"text":"we double the size of that phone book from the first day of class,"},"3618":{"dur":4,"text":"no big deal, it takes 1 more page tear, takes 1 more sitting down"},"3622":{"dur":3,"text":"in order to solve a problem that's twice as big."},"3625":{"dur":1,"text":"And so the conversation we now get to start having is"},"3627":{"dur":2,"text":"how do we actually solve problems efficiently"},"3630":{"dur":2,"text":"if we consider the simplest of problems like this?"},"3632":{"dur":3,"text":"Suppose we have 8 doors behind which are some numbers,"},"3636":{"dur":3,"text":"and each of these numbers is not sorted in any way,"},"3639":{"dur":3,"text":"they're just random integers behind these doors,"},"3642":{"dur":4,"text":"and we ask the question how do you go about finding the number--who knows--"},"3647":{"dur":2,"text":"7 behind these doors?"},"3650":{"dur":3,"text":"What would you, a human, do in order to find me the number 7"},"3653":{"dur":3,"text":"if again each of these are doors and to see a value you have to open a door?"},"3656":{"dur":2,"text":"What would your algorithm be perhaps?"},"3659":{"dur":5,"text":"[inaudible student response] >>So start with the left and open a door, open a door, open a door."},"3665":{"dur":3,"text":"And in the worst case, how long is it going to take us to find the number 7?"},"3668":{"dur":4,"text":"And again, they're not sorted, so it's not as easy as, well, I'm going to open the 7th door."},"3672":{"dur":2,"text":"It could take us, maximally, 8 steps."},"3675":{"dur":4,"text":"In the worst case, 7 is randomly at the very end of the line of doors,"},"3679":{"dur":2,"text":"so we might have to try all n doors."},"3682":{"dur":2,"text":"So again here, we seem to have a linear algorithm."},"3684":{"dur":2,"text":"In fact, we did this just a couple of years ago."},"3687":{"dur":2,"text":"One of your predecessors was challenged with precisely this"},"3689":{"dur":2,"text":"where we didn't have a digital version, we instead had a blackboard"},"3692":{"dur":1,"text":"with some pieces of paper on it."},"3693":{"dur":3,"text":"And what I thought I would do is take a quick look back at how this went,"},"3696":{"dur":3,"text":"one of the best and perhaps most awkward opportunities on stage"},"3700":{"dur":1,"text":"to have a demonstration right here on Sanders."},"3702":{"dur":1,"text":"We had 2 rows of numbers."},"3704":{"dur":3,"text":"We're only going to look at what happens here with Sean for the very top of these rows."},"3707":{"dur":2,"text":"Unless no one ever again volunteers in CS50,"},"3709":{"dur":2,"text":"we had Sean's blessing to keep this on camera,"},"3712":{"dur":2,"text":"so he knows that hundreds of people have been watching this now for years."},"3714":{"dur":4,"text":"But Sean did an amazing job--or did he?--at actually finding us a particular number."},"3719":{"dur":5,"text":"So let's see how he solved this algorithm so that we'll resume this conversation before long"},"3724":{"dur":3,"text":"of how we find things efficiently."},"3728":{"dur":4,"text":"[Malan on video] I have hidden behind these doors the number 7,"},"3732":{"dur":4,"text":"but tucked away in some of these doors as well are other non-negative numbers,"},"3736":{"dur":3,"text":"and your goal is to think of this top row of numbers as just an array"},"3739":{"dur":2,"text":"or just a sequence of pieces of paper with numbers behind them,"},"3742":{"dur":4,"text":"and your goal is, only using the top array here, find me the number 7."},"3746":{"dur":3,"text":"And we are then going to critique how you go about doing it. >>All right."},"3750":{"dur":3,"text":"[Malan] Find us the number 7, please."},"3756":{"dur":2,"text":"[laughter]"},"3761":{"dur":2,"text":"[Malan] No. [laughter]"},"3765":{"dur":12,"text":"5, 19, 13, [laughter]. It's not a trick question."},"3780":{"dur":1,"text":"1."},"3784":{"dur":2,"text":"[laughter]"},"3786":{"dur":3,"text":"At this point your score is not very good, so you might as well keep going. [laughter]"},"3792":{"dur":1,"text":"3."},"3797":{"dur":6,"text":"Go on. Frankly, I can't help but wonder what you're even thinking about. [laughter]"},"3805":{"dur":3,"text":"Only the top row, so you've got 3 left. So find me 7."},"3808":{"dur":16,"text":"[students murmuring]"},"3826":{"dur":3,"text":"[Malan] 17."},"3829":{"dur":5,"text":"[students murmuring]"},"3836":{"dur":4,"text":"[Malan] 7! [applause]"},"3841":{"dur":4,"text":"So on Wednesday we will dive into this and more sophisticated algorithms for finding things."},"3846":{"dur":4,"text":"For now we'll leave you with Sean and see you on Wednesday."},"3851":{"dur":1,"text":"[CS50.TV]"}}