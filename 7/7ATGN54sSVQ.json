{"0":{"dur":3,"text":">> [MUSIC PLAYING]"},"10":{"dur":0,"text":"DAVID MALAN: All right."},"11":{"dur":2,"text":"This is CS50, and this\nis the end of week 2."},"14":{"dur":2,"text":"I'm so sorry I couldn't be\nthere with you all today,"},"16":{"dur":1,"text":"but you're in very good hands."},"18":{"dur":3,"text":"Allow me to introduce\nCS50's own Rob Bowden."},"29":{"dur":2,"text":"ROB BOWDEN: And of course, then\nwe have to make fun of the fact"},"31":{"dur":5,"text":"that he sent us a vertical\nvideo and show this."},"36":{"dur":1,"text":">> [VIDEO PLAYBACK]"},"38":{"dur":1,"text":">> [MUSIC PLAYING]"},"39":{"dur":2,"text":">> [FOOTSTEPS]"},"42":{"dur":2,"text":">> -This video didn't\nhave to look this way."},"44":{"dur":1,"text":"It could have been prevented."},"46":{"dur":2,"text":"Say no to vertical videos."},"49":{"dur":4,"text":">> -Vertical videos happen when you\nhold your camera the wrong way."},"53":{"dur":2,"text":"Your video will end\nup looking like crap."},"55":{"dur":1,"text":">> -[GRUNT]"},"57":{"dur":4,"text":">> -There are more and more people addicted\nto making vertical videos every day."},"62":{"dur":4,"text":"It's not crack or nothing,\nbut it's still really bad."},"66":{"dur":4,"text":"There are two different kinds of\npeople who are afflicted with VVS."},"70":{"dur":3,"text":"The first group treats the\nvideos they shoot like pictures."},"74":{"dur":1,"text":"They don't mean any harm."},"75":{"dur":3,"text":"They just don't understand that\nwhile you can turn a picture,"},"79":{"dur":1,"text":"you can't really turn a video."},"80":{"dur":1,"text":">> [CRASH]"},"81":{"dur":1,"text":">> -[MONKEY SOUNDS]"},"83":{"dur":4,"text":">> -The other group is people\nwho don't give a [BLEEP]."},"87":{"dur":3,"text":">> -Vertical Video Syndrome is dangerous."},"91":{"dur":3,"text":"Motion pictures have\nalways been horizontal."},"94":{"dur":1,"text":"Televisions are horizontal."},"95":{"dur":2,"text":"Computer screens are horizontal."},"98":{"dur":3,"text":"People's eyes are horizontal."},"101":{"dur":3,"text":"We aren't built to\nwatch vertical videos."},"105":{"dur":2,"text":">> -I love vertical videos."},"107":{"dur":2,"text":">> -Nobody cares about you."},"110":{"dur":2,"text":">> -If this problem's\nleft unchecked, you too"},"113":{"dur":4,"text":"will begin showing four videos\nat once just to save bandwidth."},"117":{"dur":4,"text":">> -Letterboxed vertical videos would\nbe the size of a postage stamp."},"122":{"dur":2,"text":">> -And it will spread everywhere."},"124":{"dur":2,"text":"Movie screens have\nalways been horizontal."},"127":{"dur":3,"text":"If vertical videos become\naccepted, movie theaters"},"131":{"dur":2,"text":"will have to be tall and skinny."},"133":{"dur":3,"text":">> -And all of the movie theaters would\nhave to get torn down and rebuilt."},"137":{"dur":4,"text":"And by the time they were rebuilt,\nMila Kunis would be old and ugly."},"142":{"dur":2,"text":">> -Birds will crash into them and die."},"144":{"dur":2,"text":">> -We'll all get stiff\nnecks from looking up."},"146":{"dur":3,"text":">> -And no one will sit in\nthe front row ever again."},"149":{"dur":7,"text":">> -George Lucas will re-release Star\nWars again-- the skinny edition."},"157":{"dur":4,"text":">> -I was never really able to tell\nthe story that I wanted to tell."},"161":{"dur":4,"text":"This was a great chance for me to\nexperiment with a new technology."},"166":{"dur":2,"text":">> -You're a jerk."},"168":{"dur":6,"text":">> -Every time a mobile device is used to\nrecord video, the temptation is there."},"174":{"dur":1,"text":"Just say no."},"176":{"dur":3,"text":"Say no to George Lucas."},"180":{"dur":3,"text":"Say no to old Mila Kunis."},"184":{"dur":2,"text":"Say no to vertical videos."},"186":{"dur":5,"text":">> -And if you see someone doing it, say,\n\"you're not shooting that right dummy!\""},"192":{"dur":2,"text":">> [MUSIC PLAYING]"},"198":{"dur":0,"text":">> [END PLAYBACK]"},"199":{"dur":3,"text":">> [APPLAUSE]"},"203":{"dur":3,"text":">> [AUDIO OUT]"},"224":{"dur":1,"text":"ROB BOWDEN: --simple\nform of cryptography,"},"225":{"dur":3,"text":"which is basically the encryption\nand decryption of secret messages."},"229":{"dur":3,"text":"So here we have a very simple toy."},"232":{"dur":4,"text":"And the idea is the outer ring\nrotates around the inner ring."},"236":{"dur":4,"text":"And you can see, maybe if I zoom\nin, that-- it's hard to see."},"241":{"dur":3,"text":"But, like, the number\n1-- well, that moved."},"245":{"dur":4,"text":">> The number 1 maps to the letter\nX, number 2 maps to the letter"},"249":{"dur":2,"text":"J. Incredibly difficult\nnot to skip forward."},"251":{"dur":4,"text":"Letter 2 maps to J.\nNumber 3 maps to D. So"},"256":{"dur":4,"text":"with this ring you can give\nsomeone a message 1, 2, 3."},"260":{"dur":2,"text":"For some reason you\nwant to tell them XJD."},"262":{"dur":1,"text":"But you can give them\nsome message of numbers,"},"264":{"dur":3,"text":"and as long as they have this ring, they\ncan decrypt what you're trying to say."},"268":{"dur":4,"text":">> So you may have seen this\nparticular example of cryptography"},"272":{"dur":4,"text":"before if around the Christmas season\nyou've watched A Christmas Story."},"276":{"dur":1,"text":"If you've never seen\nit before, then just"},"278":{"dur":2,"text":"turn on TBS at literally\nany time on Christmas Eve,"},"281":{"dur":3,"text":"because they just show it back to back\nto back to back to back the entire day."},"284":{"dur":2,"text":"And the relevant video is this."},"286":{"dur":0,"text":"[VIDEO PLAYBACK]"},"287":{"dur":2,"text":"-Be it known to all and sundry\nthat Ralph Parker is hereby"},"290":{"dur":2,"text":"appointed a member of the Little\nOrphan Annie Secret Circle"},"292":{"dur":3,"text":"and is entitled to all the honors\nand benefits occurring thereto."},"296":{"dur":2,"text":"Signed Little Orphan Annie."},"299":{"dur":4,"text":"Countersigned Pierre Andre in ink!"},"303":{"dur":4,"text":"Honors and benefits\nalready at the age of nine!"},"307":{"dur":5,"text":">> [YELLING FROM RADIO]"},"312":{"dur":0,"text":"-Come on."},"313":{"dur":0,"text":"Let's get on with it."},"314":{"dur":4,"text":"I don't need all that jazz\nabout smugglers and pirates."},"318":{"dur":2,"text":"-Listen tomorrow night with\nthe concluding adventure"},"320":{"dur":2,"text":"of the Black Pirate Ship."},"322":{"dur":2,"text":"Now, it's time for\nAnnie's secret message"},"325":{"dur":3,"text":"for you members of the Secret Circle."},"328":{"dur":3,"text":"Remember kids, only members\nof Annie's Secret Circle"},"332":{"dur":2,"text":"can decode Annie's secret message."},"334":{"dur":4,"text":"Remember, Annie is depending on you."},"339":{"dur":2,"text":"Set your pins to B2."},"341":{"dur":2,"text":"Here is the message."},"343":{"dur":0,"text":"12."},"344":{"dur":0,"text":"11."},"345":{"dur":2,"text":"-I am in my first secret meeting."},"348":{"dur":0,"text":">> -25."},"349":{"dur":1,"text":"11."},"351":{"dur":0,"text":"16."},"352":{"dur":1,"text":">> -Oh, Pierre is in great voice tonight."},"354":{"dur":2,"text":"I could tell that tonight's\nmessage was really important."},"357":{"dur":2,"text":"25."},"360":{"dur":1,"text":"That's a message from Annie herself."},"361":{"dur":1,"text":"Remember, don't tell anyone."},"367":{"dur":3,"text":">> -Five seconds later, I'm in the only\nroom in the house where a boy of nine"},"371":{"dur":4,"text":"could sit in privacy and decode."},"375":{"dur":0,"text":"Aha!"},"376":{"dur":0,"text":"B!"},"377":{"dur":2,"text":"I went to the next."},"380":{"dur":3,"text":"E. The first word is \"be.\""},"383":{"dur":2,"text":"S. It was coming easier now."},"385":{"dur":2,"text":"U. 25."},"388":{"dur":2,"text":"That's R."},"390":{"dur":0,"text":"-Come on, Ralphie!"},"391":{"dur":1,"text":"-I'll be right down, Ma!"},"393":{"dur":2,"text":"Gee whiz."},"396":{"dur":6,"text":"T. O. \"Be sure to\"-- be sure to what?"},"402":{"dur":1,"text":"What was Little Orphan\nAnnie trying to say?"},"404":{"dur":1,"text":"Be sure to what?"},"406":{"dur":1,"text":">> -Randy has got to go!"},"407":{"dur":1,"text":"Will you please come out?"},"408":{"dur":0,"text":">> -All right, mom!"},"409":{"dur":2,"text":"I'll be right out!"},"411":{"dur":1,"text":"I was getting closer now."},"413":{"dur":1,"text":"The tension was terrible."},"415":{"dur":1,"text":"What was it?"},"417":{"dur":2,"text":"The fate of the planet\nmay hang in the balance!"},"419":{"dur":1,"text":">> -Ralphie, Randy's got to go!"},"421":{"dur":3,"text":">> -I'll be right out, for crying out loud!"},"425":{"dur":1,"text":"Almost there!"},"427":{"dur":0,"text":"My fingers flew."},"428":{"dur":1,"text":"My mind was a steel trap."},"429":{"dur":1,"text":"Every pore vibrated."},"431":{"dur":1,"text":"It was almost clear!"},"433":{"dur":0,"text":"Yes."},"434":{"dur":0,"text":"Yes."},"435":{"dur":1,"text":"Yes."},"436":{"dur":3,"text":"Be sure to drink your Ovaltine."},"440":{"dur":0,"text":"Ovaltine?"},"446":{"dur":0,"text":"A crummy commercial?"},"452":{"dur":2,"text":"Son of a bitch."},"454":{"dur":0,"text":">> [END PLAYBACK]"},"455":{"dur":3,"text":">> ROB BOWDEN: So that's how\nOvaltine relates to cryptography."},"459":{"dur":2,"text":"Basically CS50 just advertised\nOvaltine, so we could"},"462":{"dur":2,"text":"be a crummy commercial for Ovaltine."},"464":{"dur":2,"text":"So now actual computer science."},"467":{"dur":3,"text":"Remember on Monday we left off\ndiving deeper into strings."},"470":{"dur":2,"text":"So we were dealing with\nthe string \"Zamyla.\""},"472":{"dur":2,"text":"And we were recognizing\nthe fact that we can treat"},"475":{"dur":2,"text":"\"Zamyla\" as a sequence of characters."},"477":{"dur":2,"text":"And remember that we learned\nthe bracket notation."},"479":{"dur":2,"text":"So if this were stored\nin a string \"s,\" then"},"481":{"dur":3,"text":"if we said s bracket 0, that would\nindicate the letter capital Z."},"485":{"dur":3,"text":"And if we said s bracket 1, that\nwould indicate the first lowercase a,"},"489":{"dur":4,"text":"and so on up to s bracket 5,\nwhich would indicate the last a."},"494":{"dur":2,"text":">> Now remember that the\nlength of this string is 6,"},"497":{"dur":6,"text":"but the indices into the string are\n0 through 5, Z through that last a."},"503":{"dur":5,"text":"So this now fits into a bigger picture\nof your computer's memory, your RAM."},"508":{"dur":3,"text":"So somewhere the program that\nyou're running your computer"},"512":{"dur":2,"text":"needs to remember Zamyla\nsomewhere in memory."},"514":{"dur":1,"text":"So can I have a volunteer?"},"518":{"dur":1,"text":"Yes, please."},"530":{"dur":1,"text":"And what is your name?"},"531":{"dur":0,"text":">> DEAN: Dean."},"532":{"dur":1,"text":">> ROB BOWDEN: Dean?"},"533":{"dur":1,"text":"Nice to meet you, Dean."},"534":{"dur":3,"text":"So come over here, and\nwe're going to have you draw"},"538":{"dur":2,"text":"on our nice nifty layout of memory."},"540":{"dur":5,"text":"Now I like to think of memory\nas one long strip of bytes,"},"545":{"dur":5,"text":"but just for display purposes we'll\njust do left to right, top to bottom."},"551":{"dur":10,"text":">> So I'm going to show a\nprogram-- Getstrings.c."},"562":{"dur":3,"text":"And so all this program is\ndoing is requesting four strings"},"565":{"dur":3,"text":"from the user with\nGetString and then printing"},"568":{"dur":2,"text":"whatever that first string entered was."},"570":{"dur":1,"text":"We're ignoring two through four."},"572":{"dur":0,"text":"OK."},"573":{"dur":4,"text":"So over here now-- when\nI first request s1."},"578":{"dur":1,"text":"So you are the computer."},"579":{"dur":1,"text":"And you are implementing GetString."},"581":{"dur":5,"text":"So you request a string from\nme, and I say, OK, Dean."},"586":{"dur":1,"text":"Give the string \"Dean.\""},"587":{"dur":2,"text":">> So somewhere in memory you\nneed to remember \"Dean.\""},"590":{"dur":1,"text":"So write it into memory somewhere."},"598":{"dur":0,"text":"Perfect."},"599":{"dur":1,"text":"So now we have s2."},"601":{"dur":2,"text":"And s2 is going to be\na request to GetString."},"603":{"dur":1,"text":"So I'm going to enter a string."},"605":{"dur":3,"text":"I'm going to enter \"Hannah.\""},"608":{"dur":1,"text":"So enter \"Hannah\" somewhere into memory."},"618":{"dur":0,"text":"Yeah."},"619":{"dur":3,"text":"A-H."},"623":{"dur":2,"text":">> OK, so now s3."},"625":{"dur":2,"text":"And it's going to be another\nrequest to GetString."},"628":{"dur":8,"text":"And so now enter \"Maria.\""},"637":{"dur":3,"text":"And then there's one last\nrequest to GetString, s4."},"640":{"dur":1,"text":"So, I don't know."},"642":{"dur":3,"text":"How about we go with\nantidisestablishmentarianism."},"645":{"dur":3,"text":"So enter that into memory."},"649":{"dur":0,"text":"Yeah."},"650":{"dur":3,"text":"So just do \"Rob.\""},"653":{"dur":0,"text":">> OK."},"654":{"dur":3,"text":"So now explain-- why did\nyou leave these spaces?"},"658":{"dur":2,"text":"Why do you have this blank\nspace here, here, and up here?"},"665":{"dur":3,"text":"So notice when I go\nto print s1-- so if we"},"669":{"dur":2,"text":"had \"Hannah\" running\nright up next to \"Dean,\""},"671":{"dur":2,"text":"how do we know when\nthe string \"Dean\" ends?"},"674":{"dur":5,"text":"So printing the string s1 may have\njust printed \"DeanHannahMariaRob\""},"679":{"dur":3,"text":"if it doesn't have any clue\nof when \"Dean\" actually ends."},"682":{"dur":0,"text":">> All right."},"683":{"dur":4,"text":"So in memory the way we actually\nrepresent this end of a string"},"687":{"dur":2,"text":"is with backslash zero."},"689":{"dur":2,"text":"So this space is exactly what we wanted."},"692":{"dur":1,"text":"It should be a backslash zero."},"694":{"dur":3,"text":"This will be a backslash zero,\nand this will be a backslash zero."},"697":{"dur":3,"text":"And you can have a fabulous prize\nfor being a perfect volunteer."},"704":{"dur":0,"text":"Take a stress ball!"},"709":{"dur":4,"text":"So this character backslash zero is\nhow we indicate the end of a string."},"714":{"dur":2,"text":"It's how when any given program\nwants to print a string,"},"717":{"dur":2,"text":"it's how-- remember we learned\nthe strlen function last week?"},"719":{"dur":1,"text":"String length?"},"720":{"dur":2,"text":"It's how string length is able to\ndetermine how long a string is."},"723":{"dur":2,"text":"It just keeps iterating\nover the characters"},"725":{"dur":2,"text":"until it finds the\nbackslash zero character."},"728":{"dur":2,"text":"So the important thing to realize\nabout the backslash zero character"},"731":{"dur":3,"text":"is it's represented\nby all zeros in bits."},"734":{"dur":4,"text":"So notice that this is distinct\nfrom the zero character."},"738":{"dur":4,"text":"So the zero character, if you remember\nin the example that he gave at the end"},"743":{"dur":4,"text":"of lecture where characters map\nto-- like capital A maps to 65."},"747":{"dur":1,"text":"Lowercase a maps to 97."},"749":{"dur":1,"text":"Lowercase b would be 98."},"750":{"dur":4,"text":"So the number 0 maps to-- I don't\nknow off the top of my head."},"755":{"dur":1,"text":"44 or 45."},"756":{"dur":1,"text":"Somewhere in that region."},"757":{"dur":2,"text":">> So the character 0 is an actual number."},"760":{"dur":3,"text":"But backslash zero\nmaps to all zero bits."},"764":{"dur":2,"text":"So there's a distinction\nbetween backslash zero,"},"766":{"dur":2,"text":"which we'll call the null terminator."},"768":{"dur":4,"text":"There's a distinction between\nbackslash zero and the character zero."},"773":{"dur":1,"text":">> All right."},"774":{"dur":3,"text":"So talking a bit more about strings."},"777":{"dur":3,"text":"So then we see here this is how\nit would be laid out in memory."},"781":{"dur":6,"text":"So this idea of strings as a sequence\nof characters-- so the official computer"},"787":{"dur":2,"text":"sciency term for sequence is an array."},"790":{"dur":3,"text":"So we would call a string\nan array of characters."},"793":{"dur":3,"text":"And there are actually other data\ntypes that we can make arrays out of."},"797":{"dur":2,"text":">> So to motivate this, look at an example."},"802":{"dur":7,"text":"We'll call it ages0.c I'll\ncopy and paste our template."},"812":{"dur":0,"text":"OK."},"813":{"dur":5,"text":"So in this program what we\nwant to do is grab the age"},"819":{"dur":5,"text":"of three students in the course."},"825":{"dur":4,"text":"So we know the int age--\nand now I'm going to say 0."},"829":{"dur":3,"text":"So you might want to say age1, but\nfor purposes we'll see very shortly,"},"833":{"dur":4,"text":"I'll say int age0 equals GetInt."},"837":{"dur":2,"text":"So the same call to GetInt\nthat we've been using I"},"839":{"dur":2,"text":"don't happen to be prompting\nsaying, \"give me the age.\""},"841":{"dur":1,"text":"But just requests it."},"843":{"dur":3,"text":">> And age1 equals GetInt."},"846":{"dur":3,"text":"And int age2 equals GetInt."},"849":{"dur":4,"text":"So, again, three students, but\nultimately the variable indices"},"854":{"dur":2,"text":"are age0 through age2."},"856":{"dur":0,"text":"OK."},"857":{"dur":6,"text":"So this program will do whatever\nwe want with age0, age1, and age2,"},"863":{"dur":3,"text":"but this program ultimately\nworks for three students."},"867":{"dur":0,"text":">> OK."},"868":{"dur":3,"text":"So now what if I want four students?"},"872":{"dur":3,"text":"Well, I'm going to have to go back\ninto my code, change the comment,"},"876":{"dur":3,"text":"and now we have an int\nage3 equals GetInt."},"879":{"dur":0,"text":"OK."},"880":{"dur":3,"text":"So who sees the problem here?"},"883":{"dur":3,"text":"What is the problem\nwith this sort of setup?"},"887":{"dur":0,"text":"Yeah."},"893":{"dur":2,"text":"So we're creating a\nvariable for each student."},"896":{"dur":3,"text":"Now that works, but\nultimately what if I now"},"900":{"dur":6,"text":"say, \"I want to grab the age of\neight students or 16 students"},"906":{"dur":4,"text":"or the however many students of\nthe hundreds of students in CS50"},"911":{"dur":5,"text":"or the thousands of students on campus\nor the billions of people in the world?"},"916":{"dur":2,"text":"So ultimately this is not sustainable."},"919":{"dur":2,"text":"Any time you see yourself copying\nand pasting code like this,"},"921":{"dur":3,"text":"you should generally feel\nthat there is a better way."},"925":{"dur":6,"text":">> So this is where we introduce\nan array declaration."},"931":{"dur":3,"text":"So when you declare an array,\nthis is what the general format"},"934":{"dur":0,"text":"is going to look like."},"935":{"dur":1,"text":"We're going to say the type."},"936":{"dur":2,"text":"and then we're going to\ngive the name of that array,"},"938":{"dur":2,"text":"just as we define any given variable."},"941":{"dur":2,"text":"And then finally we are using\nthis bracket notation again"},"943":{"dur":3,"text":"but in a different context from\nhow we were using it earlier."},"947":{"dur":4,"text":">> So here this looks like a normal\nvariable declaration that we've seen."},"951":{"dur":3,"text":"So we've seen int x semi-colon before."},"954":{"dur":5,"text":"Well now we might see something\nlike int x brackets 5."},"960":{"dur":4,"text":"And putting this idea into the\nGetInt program that we have--"},"964":{"dur":4,"text":"so we can implement\nthis in the same way."},"968":{"dur":4,"text":">> Let's say in CS we tend to use\nn as the number of something."},"973":{"dur":2,"text":"So here we're going to\nstore four students."},"976":{"dur":9,"text":"And now we can say int age\nbracket n-- not quite get it yet--"},"985":{"dur":6,"text":"to declare an array of four students."},"992":{"dur":5,"text":"So how this will look in\nmemory will be similar to this."},"998":{"dur":1,"text":"Clear this."},"999":{"dur":7,"text":"And we're going to have somewhere\nin memory-- I'll put this up there."},"1012":{"dur":1,"text":">> So somewhere in memory."},"1018":{"dur":0,"text":"One, two, three, four."},"1023":{"dur":6,"text":"We have four integers in a row\nfor this array of four integers."},"1029":{"dur":3,"text":"So, currently, what is the\nsize of one of these boxes?"},"1037":{"dur":0,"text":"It's four bytes."},"1038":{"dur":1,"text":"It's 32 bits."},"1039":{"dur":2,"text":"So now this is different\nfrom the array that we"},"1042":{"dur":1,"text":"saw earlier, the array of characters."},"1044":{"dur":4,"text":"In a string each box was only one byte,\nbecause a character is only one byte."},"1048":{"dur":3,"text":"But with an array of integers, each\nbox has to be four bytes in order"},"1052":{"dur":1,"text":"to fit an entire integer."},"1054":{"dur":3,"text":"So this is what an array of\nfour ints would look like."},"1060":{"dur":3,"text":">> And then back to code."},"1063":{"dur":3,"text":"Now we want to actually store\nintegers into that array."},"1067":{"dur":6,"text":"So now this is a very, very, very\ncommon pattern that will at some point"},"1073":{"dur":1,"text":"become muscle memory."},"1074":{"dur":2,"text":"So int i equals 0."},"1076":{"dur":1,"text":"i less than n."},"1077":{"dur":3,"text":"i plus plus."},"1081":{"dur":3,"text":"Age bracket i equals GetInt."},"1085":{"dur":9,"text":">> So this for loop, this format,\nyou should get very used to."},"1095":{"dur":4,"text":"So this is generally how we will\niterate over almost any array."},"1100":{"dur":3,"text":"Now notice this sort of\nexplains why from the beginning"},"1103":{"dur":6,"text":"we didn't have for loops going for int\ni equals 1, i less than or equal to 10."},"1109":{"dur":4,"text":"The reason being that starting from\nzero makes this work well with arrays."},"1114":{"dur":2,"text":"So arrays are zero indexed."},"1116":{"dur":4,"text":"If this array is of length 4,\nthe indices are 0 through 3."},"1120":{"dur":2,"text":">> So through the first\niteration of this for loop"},"1122":{"dur":7,"text":"we're going to be setting age\nbracket 0 equal to a call to GetInt."},"1129":{"dur":2,"text":"So whatever I happened\nto enter at the keyboard."},"1132":{"dur":4,"text":"In the second pass, we're\nsetting age1 equal to GetInt."},"1136":{"dur":1,"text":"Third pass, age2."},"1138":{"dur":1,"text":"Final pass age3."},"1139":{"dur":5,"text":"So if in the first pass of the loop\nI enter the number 4 at the keyboard,"},"1145":{"dur":1,"text":"then we'll insert a 4 here."},"1147":{"dur":3,"text":"If on the second pass I enter\n50, we'll put a 50 here."},"1151":{"dur":3,"text":"On the third pass I might\nenter negative 1, negative 1,"},"1155":{"dur":6,"text":"and then finally if I enter 0-- and\nnow remember that this was index three."},"1161":{"dur":3,"text":">> After we loop back, i is\ngoing to be incremented to 4."},"1165":{"dur":2,"text":"i is no longer less than n, which is 4."},"1167":{"dur":2,"text":"And we break out of the loop."},"1169":{"dur":2,"text":"So what would be wrong with this?"},"1178":{"dur":0,"text":"AUDIENCE: [INAUDIBLE]"},"1185":{"dur":0,"text":">> Yes."},"1186":{"dur":5,"text":"So the array only has four places,\nwhich means as indices 0 through 3."},"1191":{"dur":4,"text":"So if this were the case, I would\ntake on the value 4 at some point."},"1195":{"dur":5,"text":"age bracket 4 will be setting\nwhatever happens to be over here"},"1200":{"dur":2,"text":"to what I have to say, enter 6."},"1202":{"dur":2,"text":"That'll be setting this to 6."},"1205":{"dur":1,"text":">> But we don't know what's over here."},"1206":{"dur":2,"text":"This is not memory\nthat we had access to."},"1208":{"dur":1,"text":"So if you remember from\nthe previous lecture,"},"1210":{"dur":3,"text":"he was printing out values of Zamyla and\nat some point he hit this segmentation"},"1214":{"dur":3,"text":"fault. So you will probably be seeing\nmany segmentation faults as you"},"1217":{"dur":2,"text":"implement some of the problem sets."},"1220":{"dur":4,"text":"But this is one of the ways in which\nyou can encounter a segmentation"},"1224":{"dur":3,"text":"fault, when you start accessing\nmemory in ways that you shouldn't be."},"1228":{"dur":5,"text":"So we did not have access to\nthis location and this is a bug."},"1237":{"dur":2,"text":">> So this is better."},"1240":{"dur":5,"text":"Now there is still a small\nissue with this code."},"1245":{"dur":4,"text":"And that's basically that we're\nstill stuck at four students."},"1250":{"dur":2,"text":"Now if I want to use eight students, OK."},"1252":{"dur":1,"text":"It's not that big a deal."},"1254":{"dur":3,"text":"I can go in, change the\ncomment, and change n."},"1258":{"dur":1,"text":"Now this will work with eight students."},"1259":{"dur":2,"text":"If I compile this and run\nthis, it will show me--"},"1262":{"dur":5,"text":"it will request integers for eight\nstudents and it will just work."},"1267":{"dur":3,"text":"But it's less than ideal to need to\nrecompile the program every single time"},"1271":{"dur":4,"text":"I want to change the number of students\nthat I want to enter the ages for."},"1275":{"dur":7,"text":">> So the final improvement on\nthis, as we'll see here-- we're"},"1282":{"dur":3,"text":"going to request the number of people."},"1286":{"dur":1,"text":"Here we have a number\nof people in the rooms"},"1288":{"dur":1,"text":"or any ages of people in the room."},"1289":{"dur":3,"text":"But we're going to request the number\nof people in the room from the user."},"1293":{"dur":2,"text":"So this is the exact same do-while\nloop that we've seen before."},"1296":{"dur":1,"text":"It's the exact same\ndo-while loop that you"},"1297":{"dur":2,"text":"may be implementing on the problem set."},"1300":{"dur":3,"text":"So as long as they're\nentering an n less than 1,"},"1303":{"dur":2,"text":"so there's got to be at\nleast one person in the room."},"1305":{"dur":2,"text":"As long as they're\nentering an n less than 1,"},"1307":{"dur":1,"text":"then we're going to keep asking again."},"1308":{"dur":1,"text":"Please enter the number\nof people in the room."},"1310":{"dur":2,"text":"Now, once we have the number\nof people in the room--"},"1313":{"dur":4,"text":"so I might enter that there\nare 200 people in this room."},"1318":{"dur":7,"text":"Then down here we're going to come\nand declare an array of size 200."},"1325":{"dur":4,"text":"We're declaring array that's\nbig enough to hold 200 ages."},"1330":{"dur":5,"text":"Coming down, it's the for loop\nthat you will get very used to."},"1335":{"dur":4,"text":"So iterating over this array,\nassigning to each location"},"1339":{"dur":3,"text":"in that array an integer, and\nthen ultimately here we're"},"1343":{"dur":5,"text":"just getting an example of iterating\nover that array, not to assign values,"},"1348":{"dur":1,"text":"but to access values."},"1350":{"dur":3,"text":">> So over here we see that we\nare saying, a year from now,"},"1353":{"dur":6,"text":"person %i will be %i years old,\nwhere the first %i is i plus 1."},"1360":{"dur":2,"text":"So i is this index variable."},"1363":{"dur":6,"text":"And the second %i is going to be the\nvalue stored in the ages array plus 1."},"1369":{"dur":4,"text":"So this plus 1 is just because we're\nsaying-- this plus 1, ages i plus 1."},"1374":{"dur":2,"text":"This plus 1 is just because we're\nsaying, a year from now the person"},"1377":{"dur":1,"text":"will be this old."},"1378":{"dur":2,"text":">> So why is this i plus 1?"},"1381":{"dur":2,"text":"Why we have a plus 1 there?"},"1384":{"dur":0,"text":"Yeah."},"1387":{"dur":2,"text":"So remember arrays are zero indexed."},"1390":{"dur":4,"text":"So if we are printing this out for\nsomeone to just read the output,"},"1394":{"dur":4,"text":"then probably they want to see something\nlike person one, person number one,"},"1399":{"dur":1,"text":"will be 20 years old."},"1401":{"dur":2,"text":"Person number two will be 15 years old."},"1403":{"dur":3,"text":"They'd rather not see person\nnumber zero is 15 years old."},"1407":{"dur":9,"text":">> So compiling this and just seeing what\nit looks like-- Create some space."},"1416":{"dur":7,"text":"Make ages compiles."},"1423":{"dur":1,"text":"Running ages."},"1425":{"dur":1,"text":"We see number of people in the room."},"1426":{"dur":2,"text":"So I'll say there are\nthree people in the room."},"1428":{"dur":5,"text":"Age of person number one,\nlet's say 15, 20, 25."},"1434":{"dur":5,"text":"And now I'll say a year from\nnow they will be 16, 21, 26."},"1439":{"dur":3,"text":"Let's see that this works with\nan n that isn't equal to 3."},"1442":{"dur":5,"text":"So if I say number of people is 5, one,\ntwo, three, two, one, a year from now"},"1447":{"dur":3,"text":"they'll be two, three,\nfour, three, two years old."},"1451":{"dur":5,"text":"So I could just as\neasily have n be 10,000."},"1456":{"dur":4,"text":"Now I will be sitting here for quite\na while entering ages, but this works."},"1461":{"dur":4,"text":">> So now in memory somewhere we\nhave an array of size 10,000,"},"1466":{"dur":2,"text":"so ultimately 40,000\nbytes, because there are"},"1468":{"dur":2,"text":"four bytes for each of those integers."},"1471":{"dur":1,"text":"So there's an array of\nsize 10,000 where we can"},"1473":{"dur":3,"text":"store the ages of those 10,000 people."},"1476":{"dur":3,"text":"Questions about any of this?"},"1480":{"dur":1,"text":"Yeah."},"1481":{"dur":1,"text":"What if you gave a negative number?"},"1483":{"dur":1,"text":"Let's see what happens."},"1484":{"dur":4,"text":"So in this particular case-- number\nof people in the room, negative one."},"1489":{"dur":3,"text":"It rejected that,\nbecause up here we happen"},"1492":{"dur":4,"text":"to be handling the fact that if n is\nless than one we're going to ask again."},"1497":{"dur":4,"text":"If you try to declare an\narray of negative size,"},"1501":{"dur":2,"text":"it generally doesn't work."},"1503":{"dur":1,"text":">> So let's try."},"1505":{"dur":2,"text":"Let's ignore whatever\nvalue they input for n"},"1508":{"dur":2,"text":"and just say int ages negative one."},"1510":{"dur":1,"text":"Let's see if it even compiles."},"1512":{"dur":1,"text":"I am not sure."},"1514":{"dur":3,"text":"So ages is declared as an\narray with a negative size."},"1518":{"dur":4,"text":"So upfront it recognizes an array cannot\nbe of negative size and rejects it."},"1522":{"dur":4,"text":"Now, if we didn't handle\nthis do-while loop correctly,"},"1526":{"dur":1,"text":"if we weren't checking\nif n is less than 1--"},"1528":{"dur":3,"text":"let's say we just\ndidn't have this at all"},"1532":{"dur":3,"text":"and instead we just grab an integer."},"1535":{"dur":4,"text":"No matter what that integer is,\nwe declare an array of that size."},"1540":{"dur":3,"text":">> So the compiler cannot\npossibly complain now."},"1544":{"dur":4,"text":"If I compile this--\nso it can't complain,"},"1548":{"dur":2,"text":"because it can't know that I'm\ngoing to enter a negative number,"},"1551":{"dur":1,"text":"which might be invalid."},"1552":{"dur":2,"text":"For all it knows, I might\nenter a positive number,"},"1554":{"dur":1,"text":"which is perfectly valid."},"1556":{"dur":5,"text":"So I imagine if I enter negative 1\npeople in the room, segmentation fault."},"1561":{"dur":4,"text":">> So, OK."},"1566":{"dur":7,"text":"So let's add this back just\nkeep it what it originally was."},"1573":{"dur":2,"text":"So make ages."},"1575":{"dur":2,"text":"Now if I want to try a\nnegative age-- so let's"},"1578":{"dur":1,"text":"say there are five people in the room."},"1579":{"dur":3,"text":"Age of person number one\nis negative 4, person three"},"1583":{"dur":3,"text":"is zero, person three-- OK."},"1586":{"dur":3,"text":"So here, a year from now, person number\none will be negative 3 years old."},"1589":{"dur":2,"text":"So probably doesn't make sense."},"1592":{"dur":4,"text":"But that's just because looking\nat the code all we're doing"},"1597":{"dur":3,"text":"is requesting GetInt."},"1600":{"dur":3,"text":">> Now, if we had had the\nGetPositiveInt function"},"1604":{"dur":5,"text":"or we had just simply done this\nsort of same while loop down there,"},"1609":{"dur":2,"text":"then this would work perfectly fine."},"1612":{"dur":1,"text":"But in this particular\ncase, we just don't"},"1614":{"dur":3,"text":"happen to be handling negative values."},"1617":{"dur":1,"text":"Any other questions about arrays?"},"1622":{"dur":0,"text":"OK."},"1623":{"dur":6,"text":">> So we've now seen arrays."},"1629":{"dur":3,"text":"And we're going to need to use\nthis for command-line arguments."},"1632":{"dur":2,"text":"So in problem set two--\nI know many of you"},"1634":{"dur":3,"text":"might still be working on problem set\none, but problem set two is coming up."},"1638":{"dur":4,"text":"In problem set two, you're going to\nneed to be dealing with strings, arrays,"},"1642":{"dur":1,"text":"and command-line arguments."},"1643":{"dur":2,"text":">> So what are command line arguments?"},"1646":{"dur":3,"text":"Now, you can see down here a\nlittle teaser for exactly what's"},"1649":{"dur":1,"text":"going to be happening."},"1650":{"dur":2,"text":"We see int main, inc argc,\nstring argv brackets."},"1654":{"dur":3,"text":"So first let's try to interpret\nwhat that's trying to say."},"1658":{"dur":2,"text":"Now, OK."},"1660":{"dur":3,"text":">> So at the command line you should be\ngetting used to some of these commands"},"1664":{"dur":3,"text":"now, and you've probably run\ncd in the terminal before."},"1668":{"dur":3,"text":"So if we say cd pset1,\nyou know that that should"},"1672":{"dur":2,"text":"be changing into the pset1 directory."},"1675":{"dur":4,"text":">> Now notice that you've never\nwritten a program like this before."},"1679":{"dur":4,"text":"Each program that you've written,\nyou would run, say, dot slash Mario,"},"1683":{"dur":3,"text":"dot slash greedy, and then it\nmight prompt you for input."},"1686":{"dur":1,"text":"Now, that's not what\nchange directory does."},"1688":{"dur":4,"text":"When you run cd, it doesn't then say,\nwhich directory do you want to cd into?"},"1692":{"dur":4,"text":"Instead, you just say, cd pset1, and\nit just goes into the pset1 directory."},"1697":{"dur":3,"text":">> So similarly we have other examples."},"1700":{"dur":1,"text":"make hello."},"1701":{"dur":4,"text":"When you run make, it doesn't then say,\nwhich program would you like to make?"},"1705":{"dur":3,"text":"You just say, at the\ncommand line make hello."},"1709":{"dur":1,"text":">> Move is another example."},"1711":{"dur":3,"text":"This one we are moving the\nmario.c file up one directory."},"1714":{"dur":3,"text":"So now we know with this example\nwe're really passing two arguments."},"1718":{"dur":4,"text":"There's mario.c as the first argument,\nand dot dot is the second argument."},"1722":{"dur":4,"text":"And then when you run make, you\nsee that really long command line--"},"1726":{"dur":4,"text":"that really long command\nprinted at the command line."},"1730":{"dur":3,"text":"So that long command-- this\nis just a short part of it,"},"1733":{"dur":2,"text":"but now we have three\ncommand-line arguments."},"1736":{"dur":3,"text":"Dot dash zero, hello, and hello.c."},"1739":{"dur":3,"text":">> So these are command-line\narguments, arguments"},"1743":{"dur":2,"text":"that you're passing at the\ncommand line so that it"},"1745":{"dur":3,"text":"doesn't have to be prompted\nwhen you run the program."},"1748":{"dur":4,"text":"It would be frustrating if when\nyou ran clang it said, \"OK,"},"1753":{"dur":2,"text":"which program-- which\nfile are you compiling?"},"1755":{"dur":1,"text":"Hello.c."},"1757":{"dur":2,"text":"What flags would you\nlike to enter? dash o."},"1759":{"dur":1,"text":"What would you like\nthe file to be called?"},"1761":{"dur":3,"text":"No, you just run clang\ndash o hello hello.c."},"1765":{"dur":3,"text":">> So looking back at this."},"1768":{"dur":4,"text":"Now argc-- argc is the argument counts."},"1772":{"dur":3,"text":"It's the number of command-line\narguments entered at the command line."},"1776":{"dur":3,"text":"Well, argv-- technically\nthe v stands for vector,"},"1779":{"dur":1,"text":"which basically means array."},"1781":{"dur":1,"text":"But you can ignore that."},"1782":{"dur":4,"text":"Argv-- we have string argv,\nso string argv brackets."},"1787":{"dur":2,"text":"So this is another form of\nbrackets you haven't seen before."},"1790":{"dur":2,"text":"So we've seen bracket\nnotation when we've said,"},"1792":{"dur":1,"text":"like, string s equals Zamyla."},"1793":{"dur":2,"text":"s bracket 0 accesses the character Z."},"1796":{"dur":3,"text":">> We've also seen brackets when\nwe said int ages bracket 5."},"1800":{"dur":2,"text":"That declared an array of size 5."},"1803":{"dur":3,"text":"So here is a version of the\nbrackets we haven't seen before."},"1806":{"dur":3,"text":"So this sort of string argv that\nwould be completely familiar"},"1809":{"dur":2,"text":"that it would just be a string."},"1812":{"dur":2,"text":"Now the brackets indicate\nthat this is an array."},"1814":{"dur":5,"text":"So string argv brackets means\nthat argv is an array of strings."},"1819":{"dur":2,"text":"Now technically a string\nis an array of characters."},"1822":{"dur":3,"text":"So this is now an array\nof an array of characters."},"1826":{"dur":5,"text":"But it's much easier to think about\nthis as just an array of strings."},"1831":{"dur":3,"text":">> So why might the brackets be empty?"},"1834":{"dur":3,"text":"Like, why can't we say,\nbracket 5, bracket n?"},"1840":{"dur":0,"text":"Yeah."},"1843":{"dur":0,"text":"Yeah."},"1844":{"dur":2,"text":"We don't know how many\ninputs there are going to be."},"1846":{"dur":7,"text":"So if we look at the clang example,\nwe say clang dash o hello hello.c."},"1853":{"dur":3,"text":"In this particular case, there happen\nto be three command-line arguments."},"1856":{"dur":3,"text":"And so the brackets-- we'll see\nin a second it wouldn't be three."},"1860":{"dur":1,"text":"It technically would be four."},"1861":{"dur":2,"text":"But the brackets, we would\nsay, there are three."},"1864":{"dur":4,"text":"But now if we looked at move\nmario.c dot dot, the brackets"},"1868":{"dur":1,"text":"we would want to put two in them."},"1869":{"dur":3,"text":">> And there are a lot of commands that\nhave a variable number of command line"},"1872":{"dur":0,"text":"arguments."},"1873":{"dur":3,"text":"So what this version of the\nbracket notation indicates"},"1877":{"dur":3,"text":"is that argv is an array of strings."},"1880":{"dur":3,"text":"But we don't know how many\nstrings are in that array."},"1884":{"dur":2,"text":"And how do we then know how\nmany strings are in the array?"},"1887":{"dur":1,"text":"That's the whole point argc."},"1888":{"dur":3,"text":"argc tells us how long argv is."},"1892":{"dur":4,"text":">> So the last thing to keep in\nmind is that, technically,"},"1896":{"dur":4,"text":"the command itself counts as one\nof the command-line arguments."},"1900":{"dur":4,"text":"So cd pset1, there are two\ncommand-line arguments."},"1905":{"dur":4,"text":"The program in itself, cd, and then\nthe actual argument part of it, pset1."},"1910":{"dur":4,"text":"Any program that you've written thus far\nhas had one command-line argument-- dot"},"1914":{"dur":0,"text":"slash Mario."},"1915":{"dur":2,"text":"That is the only command-line argument."},"1917":{"dur":3,"text":">> So now looking at clang\ndash o hello hello.c."},"1920":{"dur":1,"text":"So what is argc?"},"1925":{"dur":0,"text":"4."},"1926":{"dur":2,"text":"So argc is 4."},"1928":{"dur":4,"text":"Clang, so argv bracket 0 is clang."},"1932":{"dur":3,"text":"argv bracket 1 is dash 0."},"1935":{"dur":6,"text":"argv bracket 2 is hello, and\nargv bracket 3 is hello.c."},"1941":{"dur":4,"text":"OK, so questions on this, and then we'll\nlook at some programmatic examples."},"1949":{"dur":1,"text":">> OK."},"1950":{"dur":5,"text":"So we'll take a look at hello3.c."},"1956":{"dur":5,"text":"So this should be familiar from\none of the first c examples"},"1961":{"dur":3,"text":"we had where we would just say, hello\nworld, but now this is more general."},"1965":{"dur":6,"text":"So here we are saying hello\n%s backslash n argv bracket 1."},"1972":{"dur":5,"text":"Notice-- so up till this point, this is\nwhat my template file has looked like."},"1977":{"dur":4,"text":"I had int main(void), and then I would\ndo something in the main function."},"1981":{"dur":3,"text":"Now instead, once we start dealing\nwith command-line arguments,"},"1985":{"dur":2,"text":"we need to state a\ndifferent form of main."},"1987":{"dur":4,"text":">> So looking at hello3\nagain, the main is going"},"1991":{"dur":4,"text":"to take two arguments now-- int argc,\nthe number of command-line arguments,"},"1995":{"dur":4,"text":"and string argv brackets, the actual\nstrings entered at the command line."},"2000":{"dur":5,"text":"So I'm going to change that\ntemplate to reflect that fact."},"2006":{"dur":2,"text":"Now whenever you write\na program, if you don't"},"2009":{"dur":4,"text":"need to take any command-line\narguments, then just use int main(void)."},"2013":{"dur":3,"text":"But now when you're writing\ncommand-line argument programs, which"},"2017":{"dur":3,"text":"you're going to be doing for problem\nset two-- so now that you're running"},"2020":{"dur":2,"text":"programs that need to take\ncommand-line arguments,"},"2022":{"dur":2,"text":"you need to have main of this form."},"2025":{"dur":6,"text":">> So here-- this is the big usage\nof the command-line argument."},"2031":{"dur":2,"text":"So printing argv 1."},"2034":{"dur":5,"text":"OK so let's compile\nand run this program."},"2039":{"dur":3,"text":"Make hello3."},"2042":{"dur":1,"text":"Compiles."},"2043":{"dur":3,"text":"Dot slash hello3."},"2046":{"dur":2,"text":"And let's say, \"Rob.\""},"2048":{"dur":1,"text":"Hello Rob."},"2050":{"dur":4,"text":"If I say, \"hello Maria,\" hello Maria."},"2054":{"dur":0,"text":"Hello Maria."},"2055":{"dur":2,"text":"Hannah still says, \"hello\nMaria,\" because I'm not"},"2058":{"dur":2,"text":"doing anything with our argv 2."},"2061":{"dur":1,"text":"Argv 2 now would be \"Hannah.\""},"2062":{"dur":2,"text":"Argc would be 3."},"2065":{"dur":2,"text":"What if I did this?"},"2071":{"dur":2,"text":"So hello null."},"2074":{"dur":4,"text":">> He briefly touched on the fact\nthat, technically, GetString"},"2078":{"dur":3,"text":"might return null, but we'll get a\nlot more into what null actually is."},"2082":{"dur":5,"text":"But take it as a matter of\nfact that no is generally bad."},"2087":{"dur":2,"text":"We did something wrong if\nit's printing \"hello null.\""},"2090":{"dur":2,"text":"And the reason we did\nsomething wrong is-- well,"},"2092":{"dur":4,"text":"when I ran dot slash hello3, argc was 1."},"2096":{"dur":3,"text":"So that means the length of argv was 1."},"2099":{"dur":5,"text":"If an array is of length 1,\nthe only valid index is zero."},"2105":{"dur":3,"text":"And so here argv 1 is outside\nthe range of this array."},"2108":{"dur":4,"text":"It was similar to before when I tried\nto store 6 outside the end of the array."},"2113":{"dur":4,"text":"So I'm trying to access something\noutside of the argv counts,"},"2118":{"dur":3,"text":"and we're getting null."},"2121":{"dur":3,"text":">> So a better version of\nthis, an improvement,"},"2124":{"dur":2,"text":"is explicitly checking argc."},"2127":{"dur":6,"text":"So if argc equals 2, that means we ran\nsomething like dot slash hello3 Rob."},"2133":{"dur":3,"text":"And it will print \"hello Rob.\""},"2136":{"dur":3,"text":"If argc does not equal\n2, then it's just going"},"2139":{"dur":2,"text":"to ignore whatever you put\nat the command-line argument"},"2142":{"dur":1,"text":"as command-line arguments."},"2143":{"dur":3,"text":"Or if you didn't put any at all, it's\njust going to ignore that and just say,"},"2147":{"dur":3,"text":">> So compiling this."},"2151":{"dur":3,"text":"Make hello4."},"2154":{"dur":2,"text":"And running hello4."},"2156":{"dur":3,"text":"Running it this way,\nwhat should be printed?"},"2160":{"dur":1,"text":"\"Hello you.\""},"2161":{"dur":1,"text":"Hello you."},"2162":{"dur":3,"text":"What about hello4 Rob?"},"2165":{"dur":1,"text":"\"Hello Rob.\""},"2166":{"dur":3,"text":"And finally, hello Rob Maria\nis just \"hello You\" again,"},"2170":{"dur":3,"text":"because you didn't really enter\nsomething that it expected."},"2173":{"dur":1,"text":"You entered more names\nthan it could handle,"},"2175":{"dur":3,"text":"so it just defaulted to\nthe hello you behavior."},"2179":{"dur":3,"text":"So questions on this?"},"2183":{"dur":3,"text":"Or command-line arguments?"},"2186":{"dur":2,"text":">> OK, so taking a look at a\ncouple more examples of using"},"2188":{"dur":5,"text":"command-line arguments-- first\nwe have argv dash 1 dot c."},"2194":{"dur":4,"text":"So the comments give away what\nthis program should be doing."},"2198":{"dur":3,"text":"But notice now-- this for loop,\nthis matches the exact pattern"},"2202":{"dur":0,"text":"I was saying before."},"2203":{"dur":2,"text":"We just happen to be\nusing argc instead of n."},"2206":{"dur":2,"text":"Now argc is really the n."},"2208":{"dur":2,"text":"It's the length of the argv array."},"2211":{"dur":8,"text":"So are iterating over the argv\narray printf-ing each argv value."},"2219":{"dur":5,"text":">> So if I make this."},"2224":{"dur":3,"text":"Make argv 1."},"2228":{"dur":1,"text":"It compiles."},"2229":{"dur":1,"text":"Dot slash argv 1."},"2231":{"dur":3,"text":"Just running this, it\nprints dot slash argv 1"},"2235":{"dur":2,"text":"since that was the only command-line\nargument-- the program name."},"2238":{"dur":3,"text":"There will always be at least--\nargc cannot be less than one,"},"2242":{"dur":3,"text":"since there will always at least\nbe the program name to run."},"2245":{"dur":6,"text":"So argv 1 Rob will print argv 1\nand then on the new line \"Rob.\""},"2252":{"dur":4,"text":">> So in the first iteration\nof this loop, i is 0."},"2256":{"dur":2,"text":"Argv 0 is the program name."},"2259":{"dur":0,"text":"Dot slash argv 1."},"2260":{"dur":3,"text":"And then argv 1 is my first\ncommand-line argument, which is Rob."},"2263":{"dur":2,"text":"At this point, we are equal to argc."},"2265":{"dur":2,"text":"We break out of the loop and we're done."},"2268":{"dur":5,"text":"So this will work for an arbitrary\nnumber of command-line arguments."},"2273":{"dur":4,"text":"Notice it prints argv 0, argv\n1, argv 2, argv 3, argv 4."},"2278":{"dur":1,"text":"And there is no argv 5."},"2280":{"dur":1,"text":"argc is equal to 5."},"2281":{"dur":5,"text":"So at argc-- at i equals 5,\nwe break out of the loop."},"2286":{"dur":0,"text":"OK."},"2287":{"dur":3,"text":"So questions on that before we\nlook at a more complex example?"},"2294":{"dur":2,"text":">> So argv 2."},"2296":{"dur":0,"text":"All right."},"2297":{"dur":2,"text":"So we're still printing\nthe command-line arguments."},"2300":{"dur":2,"text":"But now notice we have\na nested for loop."},"2303":{"dur":1,"text":"So what is this doing?"},"2304":{"dur":3,"text":"So the first loop is doing\nexactly what it did before."},"2308":{"dur":2,"text":"We're still looping over\neach command-line argument,"},"2310":{"dur":3,"text":"but now this second loop-- we've\nalso seen something like this before."},"2314":{"dur":4,"text":"When he was iterating over\nZamyla printing out Z-A-M-Y-L-A."},"2318":{"dur":6,"text":"So this second loop for int j equals\n0, n equals strlen of argv bracket i."},"2324":{"dur":4,"text":">> So let's first think for\nthe-- let's walk through."},"2329":{"dur":4,"text":"Let's think what the computer would\ndo if I ran this program as just dot"},"2333":{"dur":2,"text":"slash argv dash 2."},"2336":{"dur":7,"text":"So if I ran this code, then\nargc is going to be equal to 1."},"2343":{"dur":3,"text":"And string argv-- there's only\ngoing to be one index in argv,"},"2347":{"dur":5,"text":"and that's going to be equal to dot\nslash argv 2-- the program name."},"2352":{"dur":6,"text":">> OK, so now i equals 0, i less than\n1, i plus plus for int j equals 0,"},"2359":{"dur":4,"text":"n equals strlen of argv bracket 0, so in\nthe first iteration of this loop. argv"},"2363":{"dur":3,"text":"bracket 0 is dot slash argv 2."},"2367":{"dur":2,"text":"So what is the length of that string?"},"2369":{"dur":3,"text":"Well, dot slash A-R-G-V dash 2."},"2372":{"dur":2,"text":"So strlen of that will be 8."},"2375":{"dur":2,"text":"So j equals 0, n equals 8."},"2377":{"dur":2,"text":"As long as j is less than 8, j++."},"2379":{"dur":4,"text":"And with that we're going to be\nprinting a single character, which"},"2384":{"dur":3,"text":"is argv bracket i bracket j."},"2387":{"dur":2,"text":">> So the only i is zero."},"2389":{"dur":1,"text":"We still only have one\ncommand-line argument."},"2391":{"dur":2,"text":"In that first iteration\nof the for loop, we're"},"2393":{"dur":3,"text":"going to be printing\nargv bracket 0 bracket 0."},"2396":{"dur":1,"text":"And then j is going to increment."},"2398":{"dur":3,"text":"And we're going to printing\nargv bracket 0 bracket 1."},"2401":{"dur":2,"text":"And then argv bracket 0 bracket 2."},"2404":{"dur":4,"text":">> So this is our first encounter\nof multi-dimensional arrays."},"2409":{"dur":3,"text":"Remember earlier that I said\nthat argv is technically"},"2412":{"dur":3,"text":"an array of arrays of characters."},"2415":{"dur":8,"text":"So here if I said something like\nstring s equals argv bracket i,"},"2424":{"dur":5,"text":"and then I said, s bracket j, this\nwould be accomplishing the same thing."},"2429":{"dur":2,"text":"Now, you've seen s bracket j before."},"2431":{"dur":4,"text":"That's just access the j-th\ncharacter of this string."},"2436":{"dur":11,"text":"So with this, we are getting the\nj-th character of the i-th argv."},"2448":{"dur":3,"text":">> So what should this ultimately output?"},"2451":{"dur":1,"text":"Make argv 2."},"2453":{"dur":1,"text":"It compiles."},"2454":{"dur":1,"text":"Dot slash argv 2."},"2456":{"dur":7,"text":"\"Rob Maria Hannah,\"\nand give us some room."},"2463":{"dur":3,"text":"So we see that this is outputting\ndot on its own line and slash"},"2467":{"dur":1,"text":"on its own line and a on its own line."},"2468":{"dur":2,"text":"It's printing out each\nindividual character"},"2471":{"dur":1,"text":"of each command-line argument."},"2472":{"dur":3,"text":"And then in between them,\nbecause of this new line"},"2475":{"dur":3,"text":"we're printing down here, in\nbetween them it'll print a new line."},"2479":{"dur":5,"text":">> So this is similar to\nthe prior argv dash 1,"},"2484":{"dur":1,"text":"which printed each\ncommand-line argument,"},"2486":{"dur":2,"text":"but now we're printing\nthe command-line arguments"},"2488":{"dur":3,"text":"and then iterating through each\ncharacter of each command-line argument"},"2491":{"dur":3,"text":"to get this output."},"2495":{"dur":1,"text":"OK?"},"2496":{"dur":3,"text":"So questions on this?"},"2500":{"dur":4,"text":">> One thing to note is that\ncommand-line arguments--"},"2505":{"dur":4,"text":"so they are separated by spaces as\nyou would naturally expect them to be."},"2509":{"dur":3,"text":"So a string can have spaces in it."},"2513":{"dur":4,"text":"It's not super important, but if I\nwanted the third command-line argument"},"2517":{"dur":3,"text":"to have a space in it, then I\ncould say something like this."},"2524":{"dur":1,"text":"OK?"},"2525":{"dur":6,"text":"So this now still only has three\ncommand-line arguments-- well 4."},"2532":{"dur":5,"text":"Dot slash argv dash 2, Rob,\nMaria, and Hannah Bloomberg."},"2537":{"dur":0,"text":"OK."},"2538":{"dur":0,"text":"Questions on this?"},"2542":{"dur":2,"text":">> There's nothing special\nabout the space character."},"2544":{"dur":2,"text":"It just happens to be that the\ncommand-line treats the space character"},"2547":{"dur":1,"text":"as how you separate each argument."},"2552":{"dur":0,"text":"All right."},"2553":{"dur":6,"text":"So then Problem set\ntwo-- you're going to be"},"2559":{"dur":3,"text":"looking at secret-key cryptography."},"2563":{"dur":4,"text":"So, similar to that example\nwe saw from A Christmas Story,"},"2567":{"dur":5,"text":"you're going to be implementing some\nalgorithms that, given a message,"},"2572":{"dur":2,"text":"you're going to be able\nto encrypt that message"},"2575":{"dur":3,"text":"that only someone with that secret\nkey, with that decoder ring,"},"2578":{"dur":2,"text":"should be able to decrypt."},"2581":{"dur":3,"text":">> So that is the standard edition."},"2584":{"dur":2,"text":"You're going to be implementing\ntwo different versions."},"2587":{"dur":2,"text":"If you happen to take a look\nat the hacker edition-- now,"},"2589":{"dur":2,"text":"we're going to give\nyou a string like this,"},"2592":{"dur":2,"text":"which represents an encrypted password."},"2595":{"dur":4,"text":"So your goal is to figure out\nwhat the decrypted password is."},"2599":{"dur":6,"text":"Now this is actually how passwords\nare stored in a lot of computers,"},"2606":{"dur":4,"text":"and it just stores this\nrandom string of characters."},"2611":{"dur":3,"text":"You have to figure out how to get\nfrom this random string of characters"},"2614":{"dur":1,"text":"to what the original password was."},"2619":{"dur":4,"text":">> And finally, after this\nproblem set, you should"},"2623":{"dur":2,"text":"be able to understand what this means."},"2626":{"dur":5,"text":"So you will learn how to decrypt\nthis sort of random string."},"2631":{"dur":4,"text":"Similarly, if you remember from week\n0, you might have seen this URL."},"2636":{"dur":3,"text":"And you should be able to\ndecrypt this eventually."},"2640":{"dur":4,"text":"You might not be happy when you\ndecrypt it and click on the link."},"2644":{"dur":0,"text":"All right."},"2645":{"dur":0,"text":"That's it for today."},"2646":{"dur":5,"text":"So see you next week!"},"2652":{"dur":6,"text":">> [ELECTRONIC MUSIC PLAYING]"}}