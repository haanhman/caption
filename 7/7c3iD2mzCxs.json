{"7.71":{"start":"7.71","dur":"3.41","text":"In this video I&#39;ll introduce some new components"},"11.12":{"start":"11.12","dur":"2.51","text":"that will be used to construct your first circuit."},"13.63":{"start":"13.63","dur":"4.18","text":"Afterwards we will step into the Arduino development environment"},"17.81":{"start":"17.81","dur":"3.44","text":"and learn some of it&#39;s basic features."},"21.25":{"start":"21.25","dur":"7.1","text":"Finally we will code our first microcontroller program and upload it to our Arduino."},"28.35":{"start":"28.35","dur":"2.05","text":"Let&#39;s get started."},"30.40":{"start":"30.4","dur":"7.1","text":"&gt;&gt; The first component that we should familiarize ourselves with is the solderless breadboard."},"37.50":{"start":"37.5","dur":"5.09","text":"This breadboard allows us to prototype or test our circuits"},"45.19":{"start":"45.19","dur":"6.71","text":"simply by placing the leads or component ends inside these tiny holes called sockets."},"51.90":{"start":"51.9","dur":"6.1","text":"It&#39;s important to note that letters and numbers run along the perimeter of the breadboard."},"60.67":{"start":"60.67","dur":"4.09","text":"This is because the sockets in each numbered row are connected"},"64.76":{"start":"64.76","dur":"8.5","text":"which means row 1A to row 1E, for example,"},"73.26":{"start":"73.26","dur":"7.31","text":"will receive the same current; however, the rows are not connected to each other."},"83.92":{"start":"83.92","dur":"4.41","text":"&gt;&gt; The next component is the resistor which has the primary puroposes"},"88.33":{"start":"88.33","dur":"2.95","text":"of limiting current and dividing voltage."},"91.28":{"start":"91.28","dur":"5.25","text":"We use resistors because not all components accept the same level of voltage"},"96.53":{"start":"96.53","dur":"2.69","text":"that the power source provides."},"99.22":{"start":"99.22","dur":"5.97","text":"When a steady voltage is applied to the leads of the resistor,"},"105.19":{"start":"105.19","dur":"5.85","text":"the amount of current that allows to flow through it is determined by its resistance"},"111.04":{"start":"111.04","dur":"2.32","text":"which is measured in ohms."},"113.36":{"start":"113.36","dur":"4.16","text":"So more ohms results to less current."},"117.52":{"start":"117.52","dur":"4.2","text":"In order to figure out how to calculate the amount of resistance in ohms"},"121.72":{"start":"121.72","dur":"4.18","text":"that a resistor applies, we simply look at its color stripes"},"125.90":{"start":"125.9","dur":"2.6","text":"which wrap around the outer casing."},"128.50":{"start":"128.5","dur":"5.7","text":"The resistance value can be read by the first 3 stripes of color."},"134.20":{"start":"134.2","dur":"7.84","text":"Each color has a specified value from 0, being black, to 9, being white."},"142.04":{"start":"142.04","dur":"4.73","text":"You could find more information about these values from the link provided."},"146.77":{"start":"146.77","dur":"6.76","text":"There is also a fourth stripe that comes in either gold, silver, or just blank."},"153.53":{"start":"153.53","dur":"7.87","text":"This gives the tolerance levels of the resistor, i.e. how closely it matches its rated resistance."},"161.40":{"start":"161.4","dur":"6.39","text":"For now we can ignore the fourth stripe and set our focus on the first 3."},"167.79":{"start":"167.79","dur":"7.04","text":"&gt;&gt; The first stripe, which is the opposite of the tolerance stripe, is the first digit."},"174.83":{"start":"174.83","dur":"3.43","text":"This value can be 0 to 9."},"178.26":{"start":"178.26","dur":"6.87","text":"Similarly, the second stripe is the second digit which can also have a value of 0 to 9."},"185.13":{"start":"185.13","dur":"4.65","text":"But the third digit is where it becomes different."},"189.78":{"start":"189.78","dur":"6.95","text":"The third digit is the number of 0&#39;s that are added to the end of the first 2 digits."},"196.73":{"start":"196.73","dur":"4.19","text":"The formal name of this stripe is the multiplor."},"200.92":{"start":"200.92","dur":"2.88","text":"Take for example this resistor."},"203.80":{"start":"203.8","dur":"4.81","text":"We currently have an orange, orange, brown resistor."},"208.61":{"start":"208.61","dur":"6.51","text":"Orange&#39;s value is 3, and brown&#39;s value is 1."},"215.12":{"start":"215.12","dur":"7.28","text":"Therefore, we have a 3, 3, 0 or 330 ohm resistor."},"222.40":{"start":"222.4","dur":"6.56","text":"Remember the third stripe, which is brown, is telling us only the number of 0&#39;s to be added"},"228.96":{"start":"228.96","dur":"3.24","text":"onto the first and second digits."},"232.20":{"start":"232.2","dur":"6.52","text":"&gt;&gt; Finally our last component is the light-emitting diode or LED for short."},"238.72":{"start":"238.72","dur":"5.53","text":"The LED is a little light that we may find in most of our electronics."},"244.25":{"start":"244.25","dur":"6","text":"In order for an LED to emit light, current must pass through a lead in a specific direction."},"250.25":{"start":"250.25","dur":"2","text":"But we will come back to this shortly."},"252.25":{"start":"252.25","dur":"3.959","text":"For now, notice how 1 lead is longer than the other."},"256.21":{"start":"256.209","dur":"6.651","text":"The longer lead is called the anode, and this is the positive terminal for the LED."},"262.86":{"start":"262.86","dur":"5.61","text":"The shorter lead, which is the negative terminal, is called the cathode."},"268.47":{"start":"268.47","dur":"3.34","text":"&gt;&gt; Now that we have a general understanding of our components,"},"271.81":{"start":"271.81","dur":"2.14","text":"let&#39;s build our first circuit."},"273.95":{"start":"273.95","dur":"5","text":"When you begin building a circuit you should always unplug your Arduino from the computer."},"278.95":{"start":"278.95","dur":"5.84","text":"So according to our schematic, we know that the resistor should be between"},"284.79":{"start":"284.79","dur":"5.7","text":"the power source, i.e. one of the Arduino&#39;s digital pins, and the anode,"},"290.49":{"start":"290.49","dur":"3.06","text":"the positive lead of the LED."},"293.55":{"start":"293.55","dur":"4.83","text":"While the cathode, negative lead, will be connected directly to ground,"},"298.38":{"start":"298.38","dur":"2.55","text":"thus completing our circuit."},"300.93":{"start":"300.93","dur":"6.11","text":"Unlike the LED, the direction by which we place the resistor does not matter."},"307.04":{"start":"307.04","dur":"6.27","text":"Let&#39;s place one of the resistors leads in socket row 1A."},"321.79":{"start":"321.79","dur":"4.04","text":"Now let&#39;s place the other lead of the resistor in a separate circuit path."},"325.83":{"start":"325.83","dur":"3.06","text":"How about row 2A?"},"339.99":{"start":"339.99","dur":"3.42","text":"&gt;&gt; Great. Halfway there. Let&#39;s move on to the LED."},"343.41":{"start":"343.41","dur":"6.56","text":"Per the schematic, our anode, the positive lead, must be connected to our resistor."},"352.19":{"start":"352.19","dur":"5.72","text":"This means that we should place the LEDs anode in a socket that is on the same"},"357.91":{"start":"357.91","dur":"2.6","text":"circuit path as 1 of the resistors leads."},"360.51":{"start":"360.51","dur":"3.25","text":"Let&#39;s do row 2E."},"369.44":{"start":"369.44","dur":"5.87","text":"Per our schematic, we know that the cathode will go directly into the Arduinos ground pin."},"375.31":{"start":"375.31","dur":"6.06","text":"So we can place the cathode into row 3E."},"384.48":{"start":"384.48","dur":"2.97","text":"&gt;&gt; Great. The final part to our schematic is simply using these jumper cables"},"387.45":{"start":"387.45","dur":"4.74","text":"to connect to our Arduino, thus completing the circuit."},"392.19":{"start":"392.19","dur":"4.89","text":"Let&#39;s start by making the connection from the cathode to the Arduinos ground."},"397.08":{"start":"397.08","dur":"5.53","text":"To do this, we simply plug the jumper cable into any of the sockets"},"402.61":{"start":"402.61","dur":"5.02","text":"which share the same A to E row of the cathode."},"407.63":{"start":"407.63","dur":"7.43","text":"In this case we&#39;ll plug 1 end of the jumper cable directly into row 3A."},"432.19":{"start":"432.19","dur":"6.39","text":"The other plug will go into 1 of the grounded or GRD digital pins of the Arduino."},"445.31":{"start":"445.31","dur":"4.24","text":"As for the second cable, according to our schematic we will make a connection"},"449.55":{"start":"449.55","dur":"6.84","text":"from our resistor to our power source which is 1 of the digital pins on the Arduino."},"456.39":{"start":"456.39","dur":"5.76","text":"We already know that 1 end of the resistor is connected to the LEDs anode."},"462.15":{"start":"462.15","dur":"6.96","text":"So this leaves us with only 1 option, row 1 sockets B through E."},"469.11":{"start":"469.11","dur":"3.3","text":"Let&#39;s give ourselves some room between our components."},"472.41":{"start":"472.41","dur":"4.2","text":"Let&#39;s plug 1 end of the jumper cable in row 1E."},"487.67":{"start":"487.67","dur":"5.2","text":"Finally, plug the other end of this jumper cable in digital pin 13."},"492.87":{"start":"492.87","dur":"4.13","text":"Remember this pin. It will be very important soon."},"506.66":{"start":"506.66","dur":"3.2","text":"&gt;&gt; Well the circuit looks pretty, but we want it to do something."},"509.86":{"start":"509.86","dur":"2","text":"Let&#39;s crack our knuckles and get down to business"},"511.86":{"start":"511.86","dur":"2.89","text":"writing our first microcontroller program."},"514.75":{"start":"514.75","dur":"3.98","text":"First plug the square USB end into the Arduino."},"522.87":{"start":"522.87","dur":"2.06","text":"In order to start writing our own program,"},"524.93":{"start":"524.93","dur":"3.07","text":"we will need to access the Arduino integrated development environment,"},"528.00":{"start":"528","dur":"3.57","text":"which I will refer to as the IDE."},"531.57":{"start":"531.57","dur":"4.32","text":"To do this click on the appliance menu at the bottom lefthand of the screen."},"535.89":{"start":"535.89","dur":"5.62","text":"Go to programming and select Arduino from this menu."},"541.51":{"start":"541.51","dur":"3.7","text":"If the Arduino software is not currently installed you can easily install it by"},"545.21":{"start":"545.21","dur":"3.24","text":"opening a terminal and typing the following command:"},"548.45":{"start":"548.45","dur":"5","text":"Sudo yum install arduino."},"553.45":{"start":"553.45","dur":"2","text":"You will need to restart the appliance when it completes."},"556.82":{"start":"556.82","dur":"3.25","text":"So once you launch the IDE, the first thing you should check"},"560.07":{"start":"560.07","dur":"5.41","text":"is if the Arduino IDE is registering or seeing your Arduino device."},"565.48":{"start":"565.48","dur":"4.71","text":"You can do this by simply going to the tools menu, hover over serial port,"},"570.19":{"start":"570.19","dur":"4.15","text":"and there should be at least 3 devices listed."},"574.84":{"start":"574.84","dur":"6.84","text":"If it is not checked already, do make sure you check the \/dev\/ttyacm0"},"581.68":{"start":"581.68","dur":"3.31","text":"as this is where you Arduino is plugged into."},"584.99":{"start":"584.99","dur":"5.8","text":"&gt;&gt; When you first open the Arduino IDE a new project, which is called a Sketch,"},"590.79":{"start":"590.79","dur":"2.46","text":"opens up automatically."},"593.25":{"start":"593.25","dur":"3.25","text":"This area will be used to place our coding."},"596.50":{"start":"596.5","dur":"4.2","text":"At the bottom of the screen there is a terminal window responsible for outputing information"},"600.70":{"start":"600.7","dur":"5.48","text":"such as complilation response codes or syntax errors in your code."},"606.18":{"start":"606.18","dur":"4.16","text":"At the top of the screen just below the file menu, there are a series of icons"},"610.34":{"start":"610.34","dur":"1.95","text":"that we should be acquainted with."},"612.29":{"start":"612.29","dur":"4.76","text":"Starting from the far left, there is an icon that resembles a check."},"617.05":{"start":"617.05","dur":"3.87","text":"This button is called verify, and its responsible for compiling your code"},"620.92":{"start":"620.92","dur":"4.28","text":"while validating the correctness of your program syntax."},"625.20":{"start":"625.2","dur":"5.06","text":"The button after verify, which resembles that of a sideways arrow pointing to the right,"},"630.26":{"start":"630.26","dur":"2","text":"is the upload command."},"632.26":{"start":"632.26","dur":"4.92","text":"The upload command is resonsible for sending the programs compiled 1&#39;s and 0&#39;s"},"637.18":{"start":"637.18","dur":"3.83","text":"over to your microcontroller for it to be saved on the board."},"641.01":{"start":"641.01","dur":"4.8","text":"Keep in mind that the verify button will not upload your code."},"645.81":{"start":"645.81","dur":"4.47","text":"The next 3 buttons are new, open, and save respectively."},"650.28":{"start":"650.28","dur":"4.64","text":"The final button to the far right of this menu is called the serial monitor,"},"654.92":{"start":"654.92","dur":"6.01","text":"and it acts as a consult whereby programmers can configure the Arduino to read as the input"},"660.93":{"start":"660.93","dur":"4.8","text":"or display as the output to and from the serial monitor."},"665.73":{"start":"665.73","dur":"2.87","text":"We&#39;ll come back to the serial monitor in another video."},"668.60":{"start":"668.6","dur":"3.25","text":"&gt;&gt; For now let&#39;s start writing our program."},"671.85":{"start":"671.85","dur":"5.5","text":"Now starting to write an Arduino program slightly differs from regular C programs."},"677.35":{"start":"677.35","dur":"6.22","text":"This is because an Arduino needs, at a bare minimum, 2 specific void funtions defined."},"683.57":{"start":"683.57","dur":"2.74","text":"Setup and loop."},"686.31":{"start":"686.31","dur":"6.04","text":"Arduino makes it very easy to get started by utilizing example code templates"},"692.35":{"start":"692.35","dur":"3.16","text":"which come with the IDE."},"695.51":{"start":"695.51","dur":"7.24","text":"To load our bare minimum, simply go to the file menu, examples, choose number 1 basics,"},"702.75":{"start":"702.75","dur":"1.63","text":"and click on bare minimum."},"704.38":{"start":"704.38","dur":"2.39","text":"A new sketch window should appear."},"706.77":{"start":"706.77","dur":"2","text":"Loading the templated code."},"708.77":{"start":"708.77","dur":"2.74","text":"Let&#39;s briefly go over these 2 functions."},"711.51":{"start":"711.51","dur":"5.8","text":"The setup function is similar to main as it is the first function to run,"},"717.31":{"start":"717.31","dur":"2.51","text":"and it only runs once."},"719.82":{"start":"719.82","dur":"4.34","text":"Setup is used for defining which pins will be input or output."},"724.16":{"start":"724.16","dur":"5.24","text":"For example, this would be a great place to tell the Arduino that we want to output"},"729.40":{"start":"729.4","dur":"4","text":"some electrical current over to pin number 13."},"733.40":{"start":"733.4","dur":"5.97","text":"Loop is a function that runs continuously on the microcontroller."},"739.37":{"start":"739.37","dur":"2.76","text":"Ever wonder why your alarm clock never stops?"},"742.13":{"start":"742.13","dur":"4.04","text":"It&#39;s because most of the microcontrollers will loop through their program."},"746.17":{"start":"746.17","dur":"5.48","text":"In our current circuit this would be a great place to tell the Arduino that we want to make"},"751.65":{"start":"751.65","dur":"2.46","text":"our light blink forever."},"754.11":{"start":"754.11","dur":"7.44","text":"So in pseudocode it would be something like turn light on, delay n seconds, turn light off,"},"761.55":{"start":"761.55","dur":"3.62","text":"delay n seconds."},"765.17":{"start":"765.17","dur":"5.29","text":"&gt;&gt; Well instead of writing out that code we&#39;re just going to cheat. Just this time."},"770.46":{"start":"770.46","dur":"5.18","text":"This is actually already a code template for a blinking LED saved in our examples."},"775.64":{"start":"775.64","dur":"7.71","text":"To load it go to file, examples, choose number 1 basics, and choose blink."},"783.35":{"start":"783.35","dur":"5.74","text":"What happens here is that a new sketch window should appear with some code already inside."},"789.09":{"start":"789.09","dur":"5.84","text":"Inside of the setups body there is an Arduino helper function called pinMode."},"794.93":{"start":"794.93","dur":"2.61","text":"PinMode prepares the pin to be used."},"797.54":{"start":"797.54","dur":"2.49","text":"It accepts 2 parameters."},"800.03":{"start":"800.03","dur":"4.36","text":"First the IO pin number, which is the pin you want to utilize,"},"804.39":{"start":"804.39","dur":"5.52","text":"and second, a value declaring whether the pin is used for input from the circuit"},"809.91":{"start":"809.91","dur":"6.14","text":"constant value of INPUT in all capitals, or output to the circut,"},"816.05":{"start":"816.05","dur":"3.06","text":"which is a constant value OUTPUT in all capitals."},"819.11":{"start":"819.11","dur":"4.71","text":"Inside of the loop there are 2 additional Arduino helper functions,"},"823.82":{"start":"823.82","dur":"5.02","text":"digialWrite accepting 2 parameters and delay accepting 1 parameter."},"828.84":{"start":"828.84","dur":"6.17","text":"DigialWrite is used to interact with the pin that you configured using pinMode."},"835.01":{"start":"835.01","dur":"4.72","text":"&gt;&gt; The first argument is the pin number that you are interacting with."},"839.73":{"start":"839.73","dur":"4.71","text":"The second argument is a constant that is either high, meaning full voltage,"},"844.44":{"start":"844.44","dur":"2.64","text":"or low, meaning no voltage."},"847.08":{"start":"847.08","dur":"2.72","text":"The second helper function is delay"},"849.80":{"start":"849.8","dur":"4.07","text":"which will stop the code from running based on the amount of time in milliseconds."},"853.87":{"start":"853.87","dur":"4.43","text":"Remember 1 second is equal to 1,000 milliseconds."},"858.30":{"start":"858.3","dur":"5.32","text":"Based on our walkthrough we can deduce that if our circuit was set up correctly"},"863.62":{"start":"863.62","dur":"7.29","text":"our LED should turn on and stay lit for 1 second and turn off and stay off for 1 second"},"870.91":{"start":"870.91","dur":"2.73","text":"before turning it back on."},"873.64":{"start":"873.64","dur":"4.94","text":"This should repeat forever as it is currently in the loop function."},"878.58":{"start":"878.58","dur":"3.76","text":"Let&#39;s choose the upload to board button and find out."},"888.06":{"start":"888.06","dur":"2.93","text":"&gt;&gt; Great. So you might be wondering what&#39;s next."},"890.99":{"start":"890.99","dur":"4.72","text":"Well now that you have an understanding of everything that is needed to create"},"895.71":{"start":"895.71","dur":"5.32","text":"an Arduino circuit, we can start applying knowledge gained from our lectures in CS50"},"901.03":{"start":"901.03","dur":"2.77","text":"to sharpen our skills further."},"903.80":{"start":"903.8","dur":"4.29","text":"For example, what if I didn&#39;t want to use the Arduino loop function?"},"908.09":{"start":"908.09","dur":"3.67","text":"What if instead I wanted to write my own type of loops and conditions"},"911.76":{"start":"911.76","dur":"4.11","text":"or even create my own functions outside of the bare minimum?"},"915.87":{"start":"915.87","dur":"4.31","text":"What if I wanted to play music or build a burglar alarm"},"920.18":{"start":"920.18","dur":"3.72","text":"or even contact the internet with my Arduino?"},"923.90":{"start":"923.9","dur":"5.43","text":"The answers to those questions are coming. So stick around."},"929.33":{"start":"929.33","dur":"3.28","text":"&gt;&gt; I&#39;m Christoper Bartholomew. This is CS50."}}