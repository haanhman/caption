{"7":{"dur":3,"text":"In this video I'll introduce some new components"},"11":{"dur":2,"text":"that will be used to construct your first circuit."},"13":{"dur":4,"text":"Afterwards we will step into the Arduino development environment"},"17":{"dur":3,"text":"and learn some of it's basic features."},"21":{"dur":7,"text":"Finally we will code our first microcontroller program and upload it to our Arduino."},"28":{"dur":2,"text":"Let's get started."},"30":{"dur":7,"text":">> The first component that we should familiarize ourselves with is the solderless breadboard."},"37":{"dur":5,"text":"This breadboard allows us to prototype or test our circuits"},"45":{"dur":6,"text":"simply by placing the leads or component ends inside these tiny holes called sockets."},"51":{"dur":6,"text":"It's important to note that letters and numbers run along the perimeter of the breadboard."},"60":{"dur":4,"text":"This is because the sockets in each numbered row are connected"},"64":{"dur":8,"text":"which means row 1A to row 1E, for example,"},"73":{"dur":7,"text":"will receive the same current; however, the rows are not connected to each other."},"83":{"dur":4,"text":">> The next component is the resistor which has the primary puroposes"},"88":{"dur":2,"text":"of limiting current and dividing voltage."},"91":{"dur":5,"text":"We use resistors because not all components accept the same level of voltage"},"96":{"dur":2,"text":"that the power source provides."},"99":{"dur":5,"text":"When a steady voltage is applied to the leads of the resistor,"},"105":{"dur":5,"text":"the amount of current that allows to flow through it is determined by its resistance"},"111":{"dur":2,"text":"which is measured in ohms."},"113":{"dur":4,"text":"So more ohms results to less current."},"117":{"dur":4,"text":"In order to figure out how to calculate the amount of resistance in ohms"},"121":{"dur":4,"text":"that a resistor applies, we simply look at its color stripes"},"125":{"dur":2,"text":"which wrap around the outer casing."},"128":{"dur":5,"text":"The resistance value can be read by the first 3 stripes of color."},"134":{"dur":7,"text":"Each color has a specified value from 0, being black, to 9, being white."},"142":{"dur":4,"text":"You could find more information about these values from the link provided."},"146":{"dur":6,"text":"There is also a fourth stripe that comes in either gold, silver, or just blank."},"153":{"dur":7,"text":"This gives the tolerance levels of the resistor, i.e. how closely it matches its rated resistance."},"161":{"dur":6,"text":"For now we can ignore the fourth stripe and set our focus on the first 3."},"167":{"dur":7,"text":">> The first stripe, which is the opposite of the tolerance stripe, is the first digit."},"174":{"dur":3,"text":"This value can be 0 to 9."},"178":{"dur":6,"text":"Similarly, the second stripe is the second digit which can also have a value of 0 to 9."},"185":{"dur":4,"text":"But the third digit is where it becomes different."},"189":{"dur":6,"text":"The third digit is the number of 0's that are added to the end of the first 2 digits."},"196":{"dur":4,"text":"The formal name of this stripe is the multiplor."},"200":{"dur":2,"text":"Take for example this resistor."},"203":{"dur":4,"text":"We currently have an orange, orange, brown resistor."},"208":{"dur":6,"text":"Orange's value is 3, and brown's value is 1."},"215":{"dur":7,"text":"Therefore, we have a 3, 3, 0 or 330 ohm resistor."},"222":{"dur":6,"text":"Remember the third stripe, which is brown, is telling us only the number of 0's to be added"},"228":{"dur":3,"text":"onto the first and second digits."},"232":{"dur":6,"text":">> Finally our last component is the light-emitting diode or LED for short."},"238":{"dur":5,"text":"The LED is a little light that we may find in most of our electronics."},"244":{"dur":6,"text":"In order for an LED to emit light, current must pass through a lead in a specific direction."},"250":{"dur":2,"text":"But we will come back to this shortly."},"252":{"dur":3,"text":"For now, notice how 1 lead is longer than the other."},"256":{"dur":6,"text":"The longer lead is called the anode, and this is the positive terminal for the LED."},"262":{"dur":5,"text":"The shorter lead, which is the negative terminal, is called the cathode."},"268":{"dur":3,"text":">> Now that we have a general understanding of our components,"},"271":{"dur":2,"text":"let's build our first circuit."},"273":{"dur":5,"text":"When you begin building a circuit you should always unplug your Arduino from the computer."},"278":{"dur":5,"text":"So according to our schematic, we know that the resistor should be between"},"284":{"dur":5,"text":"the power source, i.e. one of the Arduino's digital pins, and the anode,"},"290":{"dur":3,"text":"the positive lead of the LED."},"293":{"dur":4,"text":"While the cathode, negative lead, will be connected directly to ground,"},"298":{"dur":2,"text":"thus completing our circuit."},"300":{"dur":6,"text":"Unlike the LED, the direction by which we place the resistor does not matter."},"307":{"dur":6,"text":"Let's place one of the resistors leads in socket row 1A."},"321":{"dur":4,"text":"Now let's place the other lead of the resistor in a separate circuit path."},"325":{"dur":3,"text":"How about row 2A?"},"339":{"dur":3,"text":">> Great. Halfway there. Let's move on to the LED."},"343":{"dur":6,"text":"Per the schematic, our anode, the positive lead, must be connected to our resistor."},"352":{"dur":5,"text":"This means that we should place the LEDs anode in a socket that is on the same"},"357":{"dur":2,"text":"circuit path as 1 of the resistors leads."},"360":{"dur":3,"text":"Let's do row 2E."},"369":{"dur":5,"text":"Per our schematic, we know that the cathode will go directly into the Arduinos ground pin."},"375":{"dur":6,"text":"So we can place the cathode into row 3E."},"384":{"dur":2,"text":">> Great. The final part to our schematic is simply using these jumper cables"},"387":{"dur":4,"text":"to connect to our Arduino, thus completing the circuit."},"392":{"dur":4,"text":"Let's start by making the connection from the cathode to the Arduinos ground."},"397":{"dur":5,"text":"To do this, we simply plug the jumper cable into any of the sockets"},"402":{"dur":5,"text":"which share the same A to E row of the cathode."},"407":{"dur":7,"text":"In this case we'll plug 1 end of the jumper cable directly into row 3A."},"432":{"dur":6,"text":"The other plug will go into 1 of the grounded or GRD digital pins of the Arduino."},"445":{"dur":4,"text":"As for the second cable, according to our schematic we will make a connection"},"449":{"dur":6,"text":"from our resistor to our power source which is 1 of the digital pins on the Arduino."},"456":{"dur":5,"text":"We already know that 1 end of the resistor is connected to the LEDs anode."},"462":{"dur":6,"text":"So this leaves us with only 1 option, row 1 sockets B through E."},"469":{"dur":3,"text":"Let's give ourselves some room between our components."},"472":{"dur":4,"text":"Let's plug 1 end of the jumper cable in row 1E."},"487":{"dur":5,"text":"Finally, plug the other end of this jumper cable in digital pin 13."},"492":{"dur":4,"text":"Remember this pin. It will be very important soon."},"506":{"dur":3,"text":">> Well the circuit looks pretty, but we want it to do something."},"509":{"dur":2,"text":"Let's crack our knuckles and get down to business"},"511":{"dur":2,"text":"writing our first microcontroller program."},"514":{"dur":3,"text":"First plug the square USB end into the Arduino."},"522":{"dur":2,"text":"In order to start writing our own program,"},"524":{"dur":3,"text":"we will need to access the Arduino integrated development environment,"},"528":{"dur":3,"text":"which I will refer to as the IDE."},"531":{"dur":4,"text":"To do this click on the appliance menu at the bottom lefthand of the screen."},"535":{"dur":5,"text":"Go to programming and select Arduino from this menu."},"541":{"dur":3,"text":"If the Arduino software is not currently installed you can easily install it by"},"545":{"dur":3,"text":"opening a terminal and typing the following command:"},"548":{"dur":5,"text":"Sudo yum install arduino."},"553":{"dur":2,"text":"You will need to restart the appliance when it completes."},"556":{"dur":3,"text":"So once you launch the IDE, the first thing you should check"},"560":{"dur":5,"text":"is if the Arduino IDE is registering or seeing your Arduino device."},"565":{"dur":4,"text":"You can do this by simply going to the tools menu, hover over serial port,"},"570":{"dur":4,"text":"and there should be at least 3 devices listed."},"574":{"dur":6,"text":"If it is not checked already, do make sure you check the \/dev\/ttyacm0"},"581":{"dur":3,"text":"as this is where you Arduino is plugged into."},"584":{"dur":5,"text":">> When you first open the Arduino IDE a new project, which is called a Sketch,"},"590":{"dur":2,"text":"opens up automatically."},"593":{"dur":3,"text":"This area will be used to place our coding."},"596":{"dur":4,"text":"At the bottom of the screen there is a terminal window responsible for outputing information"},"600":{"dur":5,"text":"such as complilation response codes or syntax errors in your code."},"606":{"dur":4,"text":"At the top of the screen just below the file menu, there are a series of icons"},"610":{"dur":1,"text":"that we should be acquainted with."},"612":{"dur":4,"text":"Starting from the far left, there is an icon that resembles a check."},"617":{"dur":3,"text":"This button is called verify, and its responsible for compiling your code"},"620":{"dur":4,"text":"while validating the correctness of your program syntax."},"625":{"dur":5,"text":"The button after verify, which resembles that of a sideways arrow pointing to the right,"},"630":{"dur":2,"text":"is the upload command."},"632":{"dur":4,"text":"The upload command is resonsible for sending the programs compiled 1's and 0's"},"637":{"dur":3,"text":"over to your microcontroller for it to be saved on the board."},"641":{"dur":4,"text":"Keep in mind that the verify button will not upload your code."},"645":{"dur":4,"text":"The next 3 buttons are new, open, and save respectively."},"650":{"dur":4,"text":"The final button to the far right of this menu is called the serial monitor,"},"654":{"dur":6,"text":"and it acts as a consult whereby programmers can configure the Arduino to read as the input"},"660":{"dur":4,"text":"or display as the output to and from the serial monitor."},"665":{"dur":2,"text":"We'll come back to the serial monitor in another video."},"668":{"dur":3,"text":">> For now let's start writing our program."},"671":{"dur":5,"text":"Now starting to write an Arduino program slightly differs from regular C programs."},"677":{"dur":6,"text":"This is because an Arduino needs, at a bare minimum, 2 specific void funtions defined."},"683":{"dur":2,"text":"Setup and loop."},"686":{"dur":6,"text":"Arduino makes it very easy to get started by utilizing example code templates"},"692":{"dur":3,"text":"which come with the IDE."},"695":{"dur":7,"text":"To load our bare minimum, simply go to the file menu, examples, choose number 1 basics,"},"702":{"dur":1,"text":"and click on bare minimum."},"704":{"dur":2,"text":"A new sketch window should appear."},"706":{"dur":2,"text":"Loading the templated code."},"708":{"dur":2,"text":"Let's briefly go over these 2 functions."},"711":{"dur":5,"text":"The setup function is similar to main as it is the first function to run,"},"717":{"dur":2,"text":"and it only runs once."},"719":{"dur":4,"text":"Setup is used for defining which pins will be input or output."},"724":{"dur":5,"text":"For example, this would be a great place to tell the Arduino that we want to output"},"729":{"dur":4,"text":"some electrical current over to pin number 13."},"733":{"dur":5,"text":"Loop is a function that runs continuously on the microcontroller."},"739":{"dur":2,"text":"Ever wonder why your alarm clock never stops?"},"742":{"dur":4,"text":"It's because most of the microcontrollers will loop through their program."},"746":{"dur":5,"text":"In our current circuit this would be a great place to tell the Arduino that we want to make"},"751":{"dur":2,"text":"our light blink forever."},"754":{"dur":7,"text":"So in pseudocode it would be something like turn light on, delay n seconds, turn light off,"},"761":{"dur":3,"text":"delay n seconds."},"765":{"dur":5,"text":">> Well instead of writing out that code we're just going to cheat. Just this time."},"770":{"dur":5,"text":"This is actually already a code template for a blinking LED saved in our examples."},"775":{"dur":7,"text":"To load it go to file, examples, choose number 1 basics, and choose blink."},"783":{"dur":5,"text":"What happens here is that a new sketch window should appear with some code already inside."},"789":{"dur":5,"text":"Inside of the setups body there is an Arduino helper function called pinMode."},"794":{"dur":2,"text":"PinMode prepares the pin to be used."},"797":{"dur":2,"text":"It accepts 2 parameters."},"800":{"dur":4,"text":"First the IO pin number, which is the pin you want to utilize,"},"804":{"dur":5,"text":"and second, a value declaring whether the pin is used for input from the circuit"},"809":{"dur":6,"text":"constant value of INPUT in all capitals, or output to the circut,"},"816":{"dur":3,"text":"which is a constant value OUTPUT in all capitals."},"819":{"dur":4,"text":"Inside of the loop there are 2 additional Arduino helper functions,"},"823":{"dur":5,"text":"digialWrite accepting 2 parameters and delay accepting 1 parameter."},"828":{"dur":6,"text":"DigialWrite is used to interact with the pin that you configured using pinMode."},"835":{"dur":4,"text":">> The first argument is the pin number that you are interacting with."},"839":{"dur":4,"text":"The second argument is a constant that is either high, meaning full voltage,"},"844":{"dur":2,"text":"or low, meaning no voltage."},"847":{"dur":2,"text":"The second helper function is delay"},"849":{"dur":4,"text":"which will stop the code from running based on the amount of time in milliseconds."},"853":{"dur":4,"text":"Remember 1 second is equal to 1,000 milliseconds."},"858":{"dur":5,"text":"Based on our walkthrough we can deduce that if our circuit was set up correctly"},"863":{"dur":7,"text":"our LED should turn on and stay lit for 1 second and turn off and stay off for 1 second"},"870":{"dur":2,"text":"before turning it back on."},"873":{"dur":4,"text":"This should repeat forever as it is currently in the loop function."},"878":{"dur":3,"text":"Let's choose the upload to board button and find out."},"888":{"dur":2,"text":">> Great. So you might be wondering what's next."},"890":{"dur":4,"text":"Well now that you have an understanding of everything that is needed to create"},"895":{"dur":5,"text":"an Arduino circuit, we can start applying knowledge gained from our lectures in CS50"},"901":{"dur":2,"text":"to sharpen our skills further."},"903":{"dur":4,"text":"For example, what if I didn't want to use the Arduino loop function?"},"908":{"dur":3,"text":"What if instead I wanted to write my own type of loops and conditions"},"911":{"dur":4,"text":"or even create my own functions outside of the bare minimum?"},"915":{"dur":4,"text":"What if I wanted to play music or build a burglar alarm"},"920":{"dur":3,"text":"or even contact the internet with my Arduino?"},"923":{"dur":5,"text":"The answers to those questions are coming. So stick around."},"929":{"dur":3,"text":">> I'm Christoper Bartholomew. This is CS50."}}