{"0":{"dur":3,"text":"[Walkthrough] [Problem Set 3]"},"3":{"dur":2,"text":"[Zamyla Chan] [Harvard University]"},"5":{"dur":3,"text":"[This is CS50.] [CS50.TV]"},"8":{"dur":2,"text":"All right, welcome everyone to Walkthrough 3."},"10":{"dur":2,"text":"Pset 3 is a really fun one."},"12":{"dur":2,"text":"It's a new one to CS50 called Scramble,"},"14":{"dur":4,"text":"so if you've ever played Scramble or the similar board game Boggle"},"18":{"dur":2,"text":"essentially it's a game where you have a grid of letters,"},"20":{"dur":4,"text":"and in the time allotted you need to find as many"},"24":{"dur":4,"text":"2-letter or longer words that exist on the board,"},"28":{"dur":4,"text":"and so there are certain rules such as you can only use one letter"},"32":{"dur":5,"text":"in the grid, one block in the grid once, and you can't go back to it."},"37":{"dur":5,"text":"You can only construct letters by linking together the adjacent letters,"},"42":{"dur":8,"text":"so this is going to be a really fun pset, so let's look at our toolbox."},"50":{"dur":3,"text":"Again, the appliance is still being updated, so make sure"},"53":{"dur":3,"text":"every time you enter the appliance to right open your terminal window"},"56":{"dur":6,"text":"and in the terminals do the command sudo yum -y update."},"62":{"dur":2,"text":"This is important also if you want to be able to"},"64":{"dur":2,"text":"run the staff solutions, which we definitely recommend."},"66":{"dur":3,"text":"Sometimes it's good once you've finished your code"},"69":{"dur":3,"text":"to test it against the staff solution, make sure that everything"},"72":{"dur":3,"text":"you enter into the staff solution, whatever comes out there,"},"75":{"dur":3,"text":"same thing that happens with your code."},"78":{"dur":2,"text":"All right, so make sure to update your appliance."},"80":{"dur":3,"text":"Now, also, since we're dealing with a grid in this case"},"83":{"dur":3,"text":"we're actually going to be delving into 2-dimensional arrays."},"86":{"dur":2,"text":"We've dealt with 1-dimensional arrays,"},"88":{"dur":3,"text":"but now we're going to extend them so that they have"},"91":{"dur":4,"text":"multiple rows as well as multiple columns."},"95":{"dur":3,"text":"Then we're going to definitely be using functions in this pset,"},"98":{"dur":5,"text":"basically calling a function, sending some parameters out"},"103":{"dur":3,"text":"and then getting a return value back."},"106":{"dur":4,"text":"And in Scramble we're not asking you to actually make the whole thing from scratch,"},"110":{"dur":3,"text":"but rather, we're actually giving you something called distribution code,"},"113":{"dur":3,"text":"so code functions that we've already written that kind of lays out"},"116":{"dur":4,"text":"the skeleton of the pset as well as implements some of the tougher things"},"120":{"dur":4,"text":"that you'll definitely be able to read over and understand"},"124":{"dur":6,"text":"but don't need to quite make it yet."},"130":{"dur":5,"text":"To quickly rehash over the 1-dimensional arrays."},"135":{"dur":3,"text":"Arrays are data structures that hold multiple values of the same type,"},"138":{"dur":3,"text":"and as a reminder, these arrays are zero-indexed,"},"141":{"dur":5,"text":"so most of you are probably familiar with an array such as this."},"146":{"dur":3,"text":"If we wanted an int array with length 3,"},"149":{"dur":3,"text":"then we could initialize it by having int values"},"152":{"dur":3,"text":"and then the square brackets indicating the length of it,"},"155":{"dur":4,"text":"and then we would assign values to the specific elements within that array."},"159":{"dur":5,"text":"Here we have an int array with the first index at index 0, 2,"},"164":{"dur":3,"text":"index 1 is 4, index 2 is 6."},"167":{"dur":5,"text":"Say we wanted a larger array and to hold multiple values."},"172":{"dur":3,"text":"Then we could have a 2D array."},"175":{"dur":3,"text":"Now, this is very similar to our 1-dimensional array."},"178":{"dur":4,"text":"It's 0 indexed, so that means that the first column"},"182":{"dur":2,"text":"is indexed at 0."},"184":{"dur":3,"text":"The next one is at 1, and then the next one is at 2,"},"187":{"dur":4,"text":"and then similarly we have rows, and so you see that when we"},"191":{"dur":4,"text":"declare our array we also\u2014just like before\u2014we indicated the size of the array."},"195":{"dur":3,"text":"We also similarly indicate the size where the first bracket"},"198":{"dur":3,"text":"indicates how many rows  you have, and the second one indicates"},"201":{"dur":4,"text":"how many columns."},"205":{"dur":5,"text":"All right, in this pset you'll want to be able to"},"210":{"dur":5,"text":"iterate over the 2D array, be able to access every element"},"215":{"dur":4,"text":"in this 2D array, so essentially you want to reach"},"219":{"dur":3,"text":"all possible combinations of the row and column values."},"222":{"dur":5,"text":"We want to reach row 0 at column 1, 2, and 3."},"227":{"dur":7,"text":"We want to reach row 1 at column 0, 1 and 2."},"234":{"dur":4,"text":"We have to have some kind of structure that allows us to"},"238":{"dur":4,"text":"iterate over all of the rows and all of the combinations"},"242":{"dur":6,"text":"of columns within that."},"248":{"dur":2,"text":"Here I have a 2D int array."},"250":{"dur":4,"text":"It has 3 rows and 3 columns,"},"254":{"dur":5,"text":"and so this is the quick way to"},"259":{"dur":3,"text":"find the whole 2D array."},"262":{"dur":3,"text":"I'm saying the first row is going to have 2, 4, and 6,"},"265":{"dur":5,"text":"kind of similar to the previous example in this slide."},"270":{"dur":5,"text":"Then I'm going to have the 2nd row be 3, 6, 9,"},"275":{"dur":4,"text":"and then the 3rd row is 4, 8, 12."},"279":{"dur":4,"text":"We have our 2D array,"},"283":{"dur":3,"text":"and we know that it looks like this."},"286":{"dur":6,"text":"We have 2, 4, 6,"},"292":{"dur":3,"text":"3, 6, 9,"},"295":{"dur":7,"text":"4, 8, 12."},"302":{"dur":3,"text":"Now if we add in the indices,"},"305":{"dur":3,"text":"this would be row 0."},"308":{"dur":3,"text":"This would be row 1."},"311":{"dur":2,"text":"This would be row 2."},"313":{"dur":6,"text":"Similarly we have column 0,"},"319":{"dur":4,"text":"column 1, and column 2."},"323":{"dur":2,"text":"Yes."},"325":{"dur":3,"text":"[Male] Which three are the column, and which one is the row?"},"328":{"dur":3,"text":"The columns are these ones,"},"331":{"dur":3,"text":"so your columns are these ones."},"334":{"dur":3,"text":"This is column 0, and this is column 1."},"337":{"dur":2,"text":"This is column 2."},"339":{"dur":5,"text":"[Male] How many in the declaration of int to table [3] [3]?"},"344":{"dur":6,"text":"When you're declaring the 2D array then the first number in the square brackets"},"350":{"dur":3,"text":"is going to be how many rows you have,"},"353":{"dur":4,"text":"and then the second one is going to be how many columns."},"357":{"dur":4,"text":"Great, so we want some kind of structure,"},"361":{"dur":5,"text":"some kind of loop that's going to give us every possible combination."},"366":{"dur":7,"text":"Say we start by saying\u2014okay, to access anything in this row\u2014"},"373":{"dur":5,"text":"let's just look at this row for now."},"378":{"dur":2,"text":"These are rows here."},"380":{"dur":3,"text":"We know that our row index is going to be 0,"},"383":{"dur":4,"text":"but to access this element it's at the 0th row and the 0th column,"},"387":{"dur":7,"text":"so then we would access it by the index of [0] [0]."},"394":{"dur":4,"text":"Then this one, similarly, is still on the first row,"},"398":{"dur":5,"text":"but it's on the second column, so we access that by [0] [1]."},"403":{"dur":5,"text":"Then the last one would be [0] [2]."},"408":{"dur":4,"text":"Whenever we're at a specific row we're going to want to"},"412":{"dur":8,"text":"iterate over all of the possible column values."},"420":{"dur":6,"text":"Let's start with a for loop"},"426":{"dur":9,"text":"that starts at 0, and goes to the length of how many rows we have."},"435":{"dur":11,"text":"This is cycling through every row."},"446":{"dur":3,"text":"Then what we want to do is within that,"},"449":{"dur":4,"text":"whenever we're at a specific row we want to cycle through all of the available columns,"},"453":{"dur":3,"text":"so then we'll have another loop."},"456":{"dur":2,"text":"Let's call it j."},"458":{"dur":4,"text":"I, j and k are very common row indexing loop variables,"},"462":{"dur":6,"text":"so you can use these if you like."},"468":{"dur":4,"text":"Also try to avoid then\u2014if these variables are commonly used in loops"},"472":{"dur":4,"text":"try to avoid using them like as variable names for other things in your code"},"476":{"dur":8,"text":"just because it's common convention to use i, j, and k within the loop or indices."},"484":{"dur":7,"text":"Okay, then here we have a for loop that iterates over all of the rows."},"491":{"dur":3,"text":"Then every time that it's at a different row"},"494":{"dur":3,"text":"we'll iterate over all of the different columns."},"497":{"dur":6,"text":"This way we can actually get to every possible combination"},"503":{"dur":4,"text":"of 0, 1, and 2 with 0, 1, and 2."},"507":{"dur":2,"text":"That make sense?"},"509":{"dur":3,"text":"This way we're able to access over every value."},"512":{"dur":4,"text":"Now, we could have chosen to do columns first as well."},"516":{"dur":3,"text":"It really doesn't matter as long as you iterate through"},"519":{"dur":2,"text":"all of the columns and all of the rows."},"521":{"dur":3,"text":"Now let's do something with these values."},"524":{"dur":4,"text":"Let's say print."},"528":{"dur":7,"text":"Now let's print their integers"},"535":{"dur":7,"text":"and then the variable at that place is the\u2014it's going to be a value n table."},"542":{"dur":5,"text":"Now the specific row index would be i because we used that to iterate through our rows,"},"547":{"dur":7,"text":"and then j to iterate through our columns."},"554":{"dur":10,"text":"Now let's make 2D."},"564":{"dur":5,"text":"Now when we run 2D it prints out all of the values"},"569":{"dur":3,"text":"in the order that we specified above,"},"572":{"dur":3,"text":"so you see that it goes through all the rows first,"},"575":{"dur":3,"text":"so it's at row 0, and then it prints all of the values within that row"},"578":{"dur":2,"text":"and then continues."},"580":{"dur":3,"text":"That's an example of a way that you would iterate over"},"583":{"dur":9,"text":"and conduct actions on values within a 2D array."},"592":{"dur":7,"text":"Great, now, what we'll see in the distribution code are many functions,"},"599":{"dur":2,"text":"and so some of these functions will be boolean functions"},"601":{"dur":2,"text":"where they return a boolean to you."},"603":{"dur":4,"text":"Some will be integers, for instance, and so essentially to"},"607":{"dur":3,"text":"review functions a little bit basically functions have"},"610":{"dur":5,"text":"a return value, a name, with which you use to call the program,"},"615":{"dur":6,"text":"and then they can have any number of parameters."},"621":{"dur":4,"text":"Essentially when you call the function within the next function,"},"625":{"dur":2,"text":"basically like you're saying now I want you to execute this function,"},"627":{"dur":4,"text":"you have to pass in certain values, so in this case our function foo"},"631":{"dur":5,"text":"would have to take 2 integers, and within that function then"},"636":{"dur":4,"text":"it would be able to access them, refer to them as x and y."},"640":{"dur":4,"text":"A similar example is lower functions"},"644":{"dur":4,"text":"that you may have used in your crypto program,"},"648":{"dur":3,"text":"and so essentially those functions were already written for you,"},"651":{"dur":6,"text":"but depending on their return type you could use them within the functions."},"657":{"dur":3,"text":"Say you have a boolean function called foo."},"660":{"dur":4,"text":"Then you could use that because you know that it will represent a boolean."},"664":{"dur":2,"text":"Essentially when you call it, it will return back a boolean,"},"666":{"dur":5,"text":"so you can treat that as this will represent a boolean."},"671":{"dur":2,"text":"Within your condition you can simply say"},"673":{"dur":4,"text":"if foo, and then you pass in its required parameters,"},"677":{"dur":3,"text":"5 and 9 for instance, 2 integers,"},"680":{"dur":2,"text":"then you know that that will return either true or false,"},"682":{"dur":4,"text":"and so then you can use that as your condition itself."},"686":{"dur":4,"text":"Similarly you could also say foo(5, 9) == true"},"690":{"dur":3,"text":"or == false or something like that,"},"693":{"dur":5,"text":"but that is slightly unnecessary as the function itself"},"698":{"dur":3,"text":"already values to either true or false."},"701":{"dur":6,"text":"We're going to keep this in mind when we see some examples in the distribution code."},"707":{"dur":3,"text":"Okay, back to Scramble after we have 2D arrays"},"710":{"dur":3,"text":"and understanding functions under our belts."},"713":{"dur":6,"text":"In Scramble essentially you're going to have a grid of letters,"},"719":{"dur":3,"text":"and then you're going to help implement a program"},"722":{"dur":4,"text":"whereby the user can input different letters that they see on the grid,"},"726":{"dur":4,"text":"so that also means that you're also going to have to draw the game board."},"730":{"dur":3,"text":"Then the user will be inputting certain words,"},"733":{"dur":4,"text":"but you have to check, A, whether those words are valid in the dictionary,"},"737":{"dur":6,"text":"or B, whether they actually exist in the board, can be found in the board."},"743":{"dur":5,"text":"Then in the distribution code we'll go over that in a second."},"748":{"dur":3,"text":"You'll see what's already made for you,"},"751":{"dur":4,"text":"and then within the given structure of the distribution code add the functions."},"755":{"dur":2,"text":"There are certain functions that are left empty."},"757":{"dur":3,"text":"There are certain functions that you just have to add to."},"760":{"dur":3,"text":"A certain function that you're going to be working with is draw,"},"763":{"dur":2,"text":"so you have to implement the draw function,"},"765":{"dur":2,"text":"actually drawing all of the letters on the board."},"767":{"dur":4,"text":"You're going to have to implement the lookup function whereby you have to check"},"771":{"dur":4,"text":"whether the string that the user inputted is a valid word,"},"775":{"dur":4,"text":"and so then as I mentioned before, that includes whether that's in the dictionary or not"},"779":{"dur":4,"text":"as well as whether it's a valid game move."},"783":{"dur":3,"text":"Then you're going to implement Scramble"},"786":{"dur":5,"text":"where in the game if the user is, for instance, having trouble finding any word"},"791":{"dur":5,"text":"then if they type in \"Scramble\" into the prompt"},"796":{"dur":3,"text":"then the game board actually rotates 90\u00b0,"},"799":{"dur":5,"text":"keeping the same letters but just rotating  90\u00b0 clockwise."},"804":{"dur":3,"text":"And then finally we're going to deal with case and sensitivity,"},"807":{"dur":8,"text":"essentially when all of the words in the dictionary included in the distribution code"},"815":{"dur":3,"text":"are all stored as uppercase, but we want to allow the user, for instance,"},"818":{"dur":3,"text":"if they enter in a mixture of lowercase and uppercase"},"821":{"dur":4,"text":"or just lowercase letters then if that word is valid"},"825":{"dur":5,"text":"then they should be able to get points for that as well."},"830":{"dur":6,"text":"Okay, so distribution code, it might be a little tough to get through at first."},"836":{"dur":3,"text":"You might not want to read all of it and just get straight to"},"839":{"dur":4,"text":"writing your program, but please do read it once,"},"843":{"dur":3,"text":"read it twice, read it thrice, read it over and over again"},"846":{"dur":3,"text":"so that you have a good sense and can feel really comfortable"},"849":{"dur":4,"text":"with the code, even though you didn't write these functions yourself,"},"853":{"dur":4,"text":"that you kind of know what they're doing and you can expect"},"857":{"dur":5,"text":"the way that they might interact with the functions that you will implement."},"862":{"dur":3,"text":"Without further ado, let's actually get into this distribution code,"},"865":{"dur":7,"text":"and I'll help you guys make sense of it."},"872":{"dur":4,"text":"I've already downloaded the distribution code."},"876":{"dur":2,"text":"You can do this."},"878":{"dur":3,"text":"There's instructions in the spec where you have to make your own directory for pset 3,"},"881":{"dur":5,"text":"and then if you execute a command that's found in the spec"},"886":{"dur":3,"text":"then you'll be able to download the words file,"},"889":{"dur":7,"text":"which contains basically the dictionary file, if we just look at that quickly."},"896":{"dur":7,"text":"This essentially contains a whole list of words that are going to be our dictionary."},"903":{"dur":2,"text":"Okay, let's start at the top."},"905":{"dur":6,"text":"Also here you'll notice that the good style of this distribution code"},"911":{"dur":3,"text":"is to our benefit because we can see comments"},"914":{"dur":6,"text":"that explain how the code is being used."},"920":{"dur":2,"text":"We have this, including our libraries."},"922":{"dur":3,"text":"Notice that here we have #include <time.h>,"},"925":{"dur":4,"text":"and so that library allows us to keep track of time because"},"929":{"dur":4,"text":"in Scramble you have to essentially enter in as many words as possible"},"933":{"dur":3,"text":"within a given time frame."},"936":{"dur":2,"text":"Here we have some variables."},"938":{"dur":4,"text":"The duration of the game we've set it to be 30 seconds."},"942":{"dur":3,"text":"We say that the dimension of the grid\u2014it's a square grid\u2014"},"945":{"dur":2,"text":"is going to be 4 x 4."},"947":{"dur":7,"text":"We say that there are words, a number of words in the dictionary,"},"954":{"dur":7,"text":"that anywhere can only have a maximum of 29 letters."},"961":{"dur":2,"text":"Then here there's a file called log."},"963":{"dur":4,"text":"Essentially we're going to be automating some of the results from your code,"},"967":{"dur":4,"text":"so try not to alter anything to do with log because we'll be dealing with that."},"971":{"dur":3,"text":"You don't have to quite understand that yet,"},"974":{"dur":5,"text":"but just try not to alter anything to do with log."},"979":{"dur":6,"text":"Notice that here this variable grid, which is a 2D array of characters,"},"985":{"dur":2,"text":"is declared outside of our main function,"},"987":{"dur":2,"text":"so this is what we call a global variable."},"989":{"dur":2,"text":"Because we're dealing with a game here,"},"991":{"dur":3,"text":"if you recall all the way back to scratch"},"994":{"dur":2,"text":"when we had something like a score, for instance,"},"996":{"dur":3,"text":"when we were dealing with a game, that had to be accessible to"},"999":{"dur":4,"text":"a lot of the various scripts, so similarly, we have this variable"},"1003":{"dur":5,"text":"that needs to be accessible to a lot of the functions in our program,"},"1008":{"dur":4,"text":"so grid here is a 2-dimensional array that will store"},"1012":{"dur":3,"text":"the letters in the Scramble game."},"1015":{"dur":4,"text":"Later on we'll see the use of this later,"},"1019":{"dur":4,"text":"but then we also have a 2D array of booleans called marks,"},"1023":{"dur":4,"text":"and so essentially when we go into checking whether a word"},"1027":{"dur":5,"text":"is valid or not we need to know whether we've been visited a certain block,"},"1032":{"dur":3,"text":"visited a certain letter, and so then marks basically is going to"},"1035":{"dur":5,"text":"contain either true or false at a given index,"},"1040":{"dur":3,"text":"so it will let us know whether we've been there before,"},"1043":{"dur":3,"text":"whether we've visited that letter during our certain check,"},"1046":{"dur":4,"text":"and so marks, as you'll see later on,"},"1050":{"dur":11,"text":"will essentially exactly mirror the grid."},"1061":{"dur":5,"text":"Here we decided that we wanted our own data type."},"1066":{"dur":2,"text":"We weren't happy with just string."},"1068":{"dur":3,"text":"We actually wanted something called a word,"},"1071":{"dur":4,"text":"so we have this typedef struct here,"},"1075":{"dur":3,"text":"and then within it it has a boolean called found,"},"1078":{"dur":3,"text":"so whether this word has been found or not."},"1081":{"dur":3,"text":"Then it has an array of characters,"},"1084":{"dur":6,"text":"essentially the actual word that it is."},"1090":{"dur":4,"text":"Now then, word is an actual new data type that we've made,"},"1094":{"dur":3,"text":"so we can have an array of words, for instance,"},"1097":{"dur":6,"text":"or we can make a new word and have multiple instances of them."},"1103":{"dur":3,"text":"But we only have one dictionary, and so that's why we only have a"},"1106":{"dur":3,"text":"struct call a dictionary as opposed to a typedef struct."},"1109":{"dur":5,"text":"The struct has an integer with the size of the dictionary"},"1114":{"dur":3,"text":"as well as an array of words, and again,"},"1117":{"dur":4,"text":"we use this global variable words, which is defined above,"},"1121":{"dur":5,"text":"to be the number of words that's actually in our dictionary."},"1126":{"dur":3,"text":"Here we have a whole list of prototypes, function prototypes,"},"1129":{"dur":3,"text":"essentially saying, okay, now you can expect to have"},"1132":{"dur":3,"text":"all of these functions later on in the program."},"1135":{"dur":2,"text":"I'm going to have a void function called clear,"},"1137":{"dur":3,"text":"a boolean function called crawl that takes in"},"1140":{"dur":5,"text":"a string and then 2 integers, et cetera, so you see these here."},"1145":{"dur":4,"text":"Also a nice feature in gedit is that along the side here"},"1149":{"dur":5,"text":"if you make sure that you selected this functions tab here,"},"1154":{"dur":4,"text":"the source code tab, then it will actually show you all of the functions"},"1158":{"dur":2,"text":"that you have in your program."},"1160":{"dur":4,"text":"It will show you several things that you can use."},"1164":{"dur":5,"text":"For instance, here it has that you've defined a new data type called word"},"1169":{"dur":4,"text":"and then the certain global variables that you have."},"1173":{"dur":4,"text":"But this functions tab is quite useful because you can click back and forth"},"1177":{"dur":5,"text":"and jump to the specific points in your program."},"1182":{"dur":6,"text":"All right, we're at the main function now."},"1188":{"dur":4,"text":"When the user enters in the command,"},"1192":{"dur":3,"text":"basically they can either say .\/scramble,"},"1195":{"dur":4,"text":"or they can also enter in a number after that to basically indicate"},"1199":{"dur":3,"text":"which board they want to play with."},"1202":{"dur":3,"text":"Usually whenever you only enter in one command line argument"},"1205":{"dur":4,"text":"then it's just going to give you a random board, but say for debugging purposes"},"1209":{"dur":3,"text":"you want to make sure that you just check the same board over and over again"},"1212":{"dur":3,"text":"then what you can do is just say .\/scramble1, for instance,"},"1215":{"dur":4,"text":"and it will always give you the same board."},"1219":{"dur":2,"text":"Here it's ensuring the proper usage,"},"1221":{"dur":5,"text":"so if the user enters in more than 2 command line arguments,"},"1226":{"dur":3,"text":"then it will instruct them on how to properly use the program"},"1229":{"dur":5,"text":"and then exit."},"1234":{"dur":4,"text":"Here if argc is 2, that means if the user has inputted a number"},"1238":{"dur":4,"text":"of the specific word that they want to use then"},"1242":{"dur":5,"text":"essentially when the program later on makes a random board"},"1247":{"dur":4,"text":"then we essentially are giving it a seed, kind of like forcing it"},"1251":{"dur":6,"text":"to use a certain value."},"1257":{"dur":5,"text":"Then here we load our words file."},"1262":{"dur":4,"text":"Basically if it can't open the dictionary, if something goes wrong,"},"1266":{"dur":2,"text":"then it will return 1."},"1268":{"dur":3,"text":"We initialize the grid. We'll look into that function later."},"1271":{"dur":2,"text":"We set the score to 0."},"1273":{"dur":5,"text":"We calculate when the game will end,"},"1278":{"dur":2,"text":"so that's 30 seconds, as we set."},"1280":{"dur":7,"text":"Then here, again, is the log file, which you don't need to alter."},"1287":{"dur":6,"text":"Here's the meat of the program where we have a while (true) loop,"},"1293":{"dur":3,"text":"so notice that if you just have a while (true) loop by itself"},"1296":{"dur":3,"text":"then it will just keep on executing whatever is in its body,"},"1299":{"dur":3,"text":"but as you'll see later on, we actually have a break"},"1302":{"dur":4,"text":"so we actually allow it\u2014we have some way of it actually breaking out"},"1306":{"dur":4,"text":"of the function and not executing forever."},"1310":{"dur":2,"text":"First what happens is the screen will clear"},"1312":{"dur":7,"text":"so that you can draw a new board, and then it will have the function called draw."},"1319":{"dur":4,"text":"Again, it will log it, so essentially every time that it goes through this loop"},"1323":{"dur":3,"text":"it will report the score to you."},"1326":{"dur":3,"text":"Check whether the game should be ending,"},"1329":{"dur":3,"text":"whether you're out of time or not, and then report how much time you have left"},"1332":{"dur":3,"text":"if the game is still in play."},"1335":{"dur":4,"text":"Then here we have a prompt for a word,"},"1339":{"dur":2,"text":"and then we have the GetString function,"},"1341":{"dur":5,"text":"so that's where the user actually inputs a word for you."},"1346":{"dur":5,"text":"Then essentially if they've actually entered a word, if it's not null,"},"1351":{"dur":7,"text":"then the program will log it."},"1358":{"dur":3,"text":"Then you want to check whether you need to scramble the grid,"},"1361":{"dur":3,"text":"so basically if they enter in the command scramble, the word scramble,"},"1364":{"dur":4,"text":"then it's going to rotate 90\u00b0."},"1368":{"dur":3,"text":"Then otherwise if it's not the word scramble"},"1371":{"dur":6,"text":"then what you want to do is you'll want to look for the word."},"1377":{"dur":2,"text":"The (find(word) is true. We'll go into that function later."},"1379":{"dur":3,"text":"And then you'll want to look it up, so basically is it on the grid,"},"1382":{"dur":2,"text":"and is it in the dictionary?"},"1384":{"dur":4,"text":"And if it is the case, then it will increase your score by the number of letters"},"1388":{"dur":4,"text":"that that word is."},"1392":{"dur":4,"text":"That's our main function there."},"1396":{"dur":3,"text":"This here is essentially like an escape code,"},"1399":{"dur":2,"text":"so you don't need to worry about that quite so much,"},"1401":{"dur":4,"text":"but essentially whenever you call the clear it will clear the terminal"},"1405":{"dur":7,"text":"and move the cursor back and kind of erase whatever it had written before."},"1412":{"dur":8,"text":"Let's not go to crawl quite just yet."},"1420":{"dur":3,"text":"Instead we'll scroll down and see the draw function here,"},"1423":{"dur":2,"text":"which is your job TODO."},"1425":{"dur":3,"text":"Essentially you have to print the grid in its current state,"},"1428":{"dur":4,"text":"so we've already taken care of actually initializing the grid,"},"1432":{"dur":4,"text":"and so you don't need to worry about which letters to put in the grid"},"1436":{"dur":5,"text":"or something like that, but in the draw function you're going to want to"},"1441":{"dur":3,"text":"print out whatever is in the grid."},"1444":{"dur":3,"text":"Then here we have a boolean function called find,"},"1447":{"dur":3,"text":"which we saw above in the main function."},"1450":{"dur":7,"text":"If the word was found and also was looked up in the dictionary,"},"1457":{"dur":4,"text":"if both of those returned true, then it would increase the score."},"1461":{"dur":5,"text":"Here is the find function where it takes in the word as a string,"},"1466":{"dur":6,"text":"and it has to be 2 or more characters,"},"1472":{"dur":4,"text":"and then what this does is it searches the grid for that word."},"1476":{"dur":5,"text":"Here we see an example of iterating over every element in the grid"},"1481":{"dur":6,"text":"where they iterate over the rows and then within that iterate over the columns."},"1487":{"dur":3,"text":"Here remember the marks 2D array that basically stores either true or false"},"1490":{"dur":2,"text":"whether we've been to that letter already."},"1492":{"dur":6,"text":"Essentially this resets all of the marks because we're only dealing with marks"},"1498":{"dur":3,"text":"every time that we're checking a specific word."},"1501":{"dur":3,"text":"Then here once we've reset all the marks"},"1504":{"dur":4,"text":"it actually searches for the word, and so to search for the word"},"1508":{"dur":5,"text":"that's where we use the crawl function, so let's go back up to crawl"},"1513":{"dur":3,"text":"and take a look at it."},"1516":{"dur":4,"text":"What crawl does is it takes in a string called letters"},"1520":{"dur":7,"text":"as well as basically x and y, which is the starting index"},"1527":{"dur":6,"text":"of where the user has said the word is."},"1533":{"dur":5,"text":"Essentially it checks if x is < 0 or > the dimension"},"1538":{"dur":3,"text":"basically that means that that index actually doesn't exist in our game,"},"1541":{"dur":2,"text":"so then that returns false."},"1543":{"dur":4,"text":"If you've already visited the specific letter"},"1547":{"dur":15,"text":"then that's going to return false as well because a rule in Scramble"},"1562":{"dur":9,"text":"is that when you have"},"1571":{"dur":3,"text":"a letter here, for instance,"},"1574":{"dur":6,"text":"you can join a letter by going up or diagonal like this,"},"1580":{"dur":4,"text":"so basically your next letter can be at any of these adjoining blocks,"},"1584":{"dur":7,"text":"but what you can't do, for instance, is go to this letter"},"1591":{"dur":6,"text":"and go back to the A, so you can only use each letter once."},"1597":{"dur":5,"text":"Then that makes sense that here are marks that if we've been there before,"},"1602":{"dur":5,"text":"if marks is set to true, then that's not a valid word."},"1607":{"dur":2,"text":"Then what it does is it checks."},"1609":{"dur":4,"text":"It says I'm going to check whether at this specific location"},"1613":{"dur":2,"text":"the letter that we want is there."},"1615":{"dur":2,"text":"If it's not, it returns false."},"1617":{"dur":5,"text":"Since it's already checked that block, then it's going to set the mark"},"1622":{"dur":4,"text":"at that specific point as true."},"1626":{"dur":3,"text":"Now it checks that basically if we're continuing"},"1629":{"dur":4,"text":"that means that we're going to search for the next letter"},"1633":{"dur":5,"text":"in the word that the user is trying to submit."},"1638":{"dur":2,"text":"Here recall back to the rules."},"1640":{"dur":4,"text":"You're trying to check all adjacent values,"},"1644":{"dur":4,"text":"the ones above, below, left and right as well as the diagonals,"},"1648":{"dur":4,"text":"and so similarly when we thought of iterating over 2D arrays"},"1652":{"dur":3,"text":"where we wanted to iterate over every possible and check"},"1655":{"dur":6,"text":"every possible permutation between the row indices and the column indices"},"1661":{"dur":2,"text":"here we want to check every possible combination,"},"1663":{"dur":6,"text":"if it's to the left of the letter, directly above, or to the right."},"1669":{"dur":7,"text":"Here we see that this loop checks to the left"},"1676":{"dur":2,"text":"when i is -1."},"1678":{"dur":6,"text":"When it's at 0 it checks at the same column that the letter is at,"},"1684":{"dur":4,"text":"and then if i is 1, which is its final value, then it checks to the right,"},"1688":{"dur":2,"text":"and then that's not enough, right?"},"1690":{"dur":3,"text":"We need to check all of the vertical values,"},"1693":{"dur":6,"text":"so then here we have a loop that gets checked whether it goes below"},"1699":{"dur":3,"text":"at the same level or above, so then the combination of that"},"1702":{"dur":6,"text":"will access every single adjacent block to A."},"1708":{"dur":10,"text":"However, it also checks the block here at A,"},"1718":{"dur":6,"text":"so then we want to make sure that we don't check that one."},"1724":{"dur":7,"text":"Now then, to actually check whether the preceding words are valid or not"},"1731":{"dur":5,"text":"then we want to do the same process for the rest of the word"},"1736":{"dur":4,"text":"barring the one that we've already done, so then here is a precursor function."},"1740":{"dur":3,"text":"It calls itself, and we'll get into that a bit later,"},"1743":{"dur":10,"text":"but it conducts the same process for all subsequent strings."},"1753":{"dur":3,"text":"We've talked about the find function."},"1756":{"dur":2,"text":"We understand what it's doing."},"1758":{"dur":5,"text":"It's basically checking whether this word that the user gave"},"1763":{"dur":4,"text":"actually exists on the board and whether it's a valued move."},"1767":{"dur":2,"text":"Here we have an initialize function."},"1769":{"dur":4,"text":"Notice that it's void, so it's not going to be returning us anything,"},"1773":{"dur":3,"text":"but it's just going to be doing something for us."},"1776":{"dur":3,"text":"Here off of Wikipedia there's a frequency"},"1779":{"dur":3,"text":"for every letter on the alphabet based on how often"},"1782":{"dur":3,"text":"it's used in the English language."},"1785":{"dur":5,"text":"You see that e is, for instance, one of the most popular letters used."},"1790":{"dur":2,"text":"We want to populate the grid."},"1792":{"dur":3,"text":"What this function does is populate the grid with letters"},"1795":{"dur":11,"text":"kind of relative to their frequency in this array."},"1806":{"dur":5,"text":"Now, this is using this language here"},"1811":{"dur":3,"text":"saying size of frequencies,"},"1814":{"dur":2,"text":"It's kind of only the specific case."},"1816":{"dur":5,"text":"We can actually use size of frequencies, so when you actually want to"},"1821":{"dur":5,"text":"find the length of an array you probably aren't going to be using size of"},"1826":{"dur":3,"text":"but rather just using the array length."},"1829":{"dur":4,"text":"You can ask your TFs to talk to you a bit more about that,"},"1833":{"dur":7,"text":"but just know that this syntax here is more of a special case."},"1840":{"dur":9,"text":"Now, for every element in the grid"},"1849":{"dur":4,"text":"we want to make a letter, and this is going to be pseudorandom,"},"1853":{"dur":2,"text":"so random but not quite."},"1855":{"dur":3,"text":"Essentially what this does is we set a new double"},"1858":{"dur":3,"text":"with a random value between 0 and 1."},"1861":{"dur":2,"text":"Based on that we're going to map that,"},"1863":{"dur":5,"text":"so say that d is set to 0.6, for instance."},"1868":{"dur":5,"text":"Then if d is 60% in"},"1873":{"dur":3,"text":"then we're going to look at all of the letters and find"},"1876":{"dur":3,"text":"relative to how often they're used"},"1879":{"dur":2,"text":"what's 60% in."},"1881":{"dur":3,"text":"This isn't just 60% of the alphabet but rather"},"1884":{"dur":4,"text":"a takes up this much space, and then b takes up this much,"},"1888":{"dur":3,"text":"and then e, for instance, will take up this much."},"1891":{"dur":4,"text":"Based on the relative lengths or the frequencies"},"1895":{"dur":4,"text":"of these letters we're going to map that random value"},"1899":{"dur":4,"text":"between 0 and 1 to a specific letter."},"1903":{"dur":2,"text":"That's what this code does here,"},"1905":{"dur":7,"text":"and then here k is like the shift of where along"},"1912":{"dur":7,"text":"in the letter we want to be, and so we set the character in the grid"},"1919":{"dur":5,"text":"to be A + k."},"1924":{"dur":3,"text":"Notice that back thinking to greedy"},"1927":{"dur":4,"text":"we had to use the round function to deal with floating-point imprecision here,"},"1931":{"dur":3,"text":"so similarly we had to take into account that sometimes"},"1934":{"dur":4,"text":"floats aren't exactly what we intend them to be,"},"1938":{"dur":9,"text":"so we want to make a catch for that."},"1947":{"dur":5,"text":"Then here we go into file I\/O, basically reading and writing to files,"},"1952":{"dur":2,"text":"which you will get into later but not quite yet,"},"1954":{"dur":5,"text":"so essentially this opens a dictionary file, reads what's in it,"},"1959":{"dur":3,"text":"and then sets it into an array."},"1962":{"dur":4,"text":"Notice that we set it into the struct that we've declared, the dictionary struct,"},"1966":{"dur":7,"text":"and so dictionary has an array called words associated with it,"},"1973":{"dur":7,"text":"so what it's doing is saying dictionary, the words at this particular index"},"1980":{"dur":4,"text":"are such and such value."},"1984":{"dur":6,"text":"Then we're almost finished with the distribution code."},"1990":{"dur":3,"text":"We finally have the lookup function where you have comments"},"1993":{"dur":5,"text":"instructing you on what that code should do."},"1998":{"dur":3,"text":"Lookup will look up a word in the dictionary"},"2001":{"dur":3,"text":"and as long as that word hasn't been found already"},"2004":{"dur":5,"text":"then flags it as found so the user can use it again"},"2009":{"dur":4,"text":"but also returns true thinking back to the main function again,"},"2013":{"dur":4,"text":"returns true, so says that that word can be scored."},"2017":{"dur":2,"text":"And then finally you have the scramble function,"},"2019":{"dur":3,"text":"which is another void function because it's doing something"},"2022":{"dur":3,"text":"but not returning anything, so what the scramble function will do"},"2025":{"dur":6,"text":"is rotate the grid 90\u00b0 clockwise."},"2031":{"dur":4,"text":"I know that might have been a little rough, but it's important to do."},"2035":{"dur":2,"text":"Watch me going through the distribution code,"},"2037":{"dur":2,"text":"but as well, try to go through it yourself."},"2039":{"dur":5,"text":"What I like to do is map it out to understand"},"2044":{"dur":11,"text":"what does this program with all of these functions actually do?"},"2055":{"dur":3,"text":"If I were to go through the distribution code again,"},"2058":{"dur":3,"text":"now that I kind of have a sense of what's going on then I would say"},"2061":{"dur":7,"text":"we start with our main function,"},"2068":{"dur":8,"text":"and then I think the first thing that it does is it calls load,"},"2076":{"dur":4,"text":"so main calls load, but load is a void function,"},"2080":{"dur":5,"text":"so then what I do to indicate that is just putting a single arrow"},"2085":{"dur":3,"text":"pointing to load because main calls it."},"2088":{"dur":8,"text":"The next thing is initialize."},"2096":{"dur":3,"text":"Main calls initialize,"},"2099":{"dur":3,"text":"and then if we look back into our main function"},"2102":{"dur":4,"text":"I think this next thing that it does,"},"2106":{"dur":3,"text":"right here there are tons of different things that main is calling,"},"2109":{"dur":4,"text":"but right now I'm just focusing on the most major ones"},"2113":{"dur":5,"text":"relevant to the code, so I'm not including a to i or stuff like that."},"2118":{"dur":7,"text":"Then the next thing that it does is it clears it,"},"2125":{"dur":4,"text":"and then it has draw,"},"2129":{"dur":7,"text":"and so I know that draw is something that we're going to do."},"2136":{"dur":2,"text":"That's the draw function."},"2138":{"dur":6,"text":"Later on we see that the next one is a bit\u2014"},"2144":{"dur":13,"text":"so then we have scramble."},"2157":{"dur":5,"text":"And then we have find, so find is another function."},"2162":{"dur":5,"text":"We see that find is\u2014if you recall back it's a boolean function,"},"2167":{"dur":2,"text":"so that's actually going to return something back to us."},"2169":{"dur":9,"text":"Then here I indicate that by we have find,"},"2178":{"dur":11,"text":"and then we also have lookup."},"2189":{"dur":3,"text":"But then remember that there's also this crawl function"},"2192":{"dur":3,"text":"that doesn't seem to have been called in main,"},"2195":{"dur":3,"text":"so that means that some other function is calling crawl,"},"2199":{"dur":2,"text":"and if you search back through the distribution code"},"2201":{"dur":5,"text":"you see that find here is the one that uses crawl,"},"2206":{"dur":6,"text":"so then find then also links to crawl,"},"2212":{"dur":3,"text":"which is a boolean value, which returns something,"},"2215":{"dur":2,"text":"so I'm adding another thing, and then since crawl is recursive"},"2218":{"dur":5,"text":"it also loops back on itself."},"2223":{"dur":4,"text":"Then if you see here I've drawn a picture of what our program looks like,"},"2227":{"dur":3,"text":"so understanding the relationships between certain functions,"},"2230":{"dur":4,"text":"and going back to that you also see the order of the game"},"2234":{"dur":10,"text":"and the logic of how the game program is going to proceed."},"2244":{"dur":3,"text":"We've read the distribution code."},"2247":{"dur":2,"text":"The first function that you're going to want to implement,"},"2249":{"dur":3,"text":"or one of the functions that you want to implement is draw,"},"2252":{"dur":5,"text":"and so here you actually have a little bit of freedom with this."},"2257":{"dur":6,"text":"If we look at the staff solution\u2014"},"2263":{"dur":11,"text":"I'm going to open the terminal window, actually,"},"2274":{"dur":11,"text":"pset3\/scramble."},"2285":{"dur":4,"text":"Scratch that. I think I need to update my appliance."},"2289":{"dur":3,"text":"If you play with the staff solution of Scramble\u2014"},"2292":{"dur":2,"text":"instructions are in the spec for that\u2014"},"2294":{"dur":6,"text":"then you can see how they've printed out the game board,"},"2300":{"dur":3,"text":"but essentially what they do is they put spaces between each character,"},"2303":{"dur":4,"text":"but you have a little freedom with this, so if you want to print lines, for instance,"},"2307":{"dur":4,"text":"between them then you can do that."},"2311":{"dur":7,"text":"You want to think back to how we iterate over all elements of a 2D array,"},"2318":{"dur":3,"text":"and you'll want to print those, make sure that you have your loop"},"2321":{"dur":8,"text":"and have your print functions such that you're printing in the right order."},"2329":{"dur":5,"text":"If you want your iteration loop to\u2014when you iterate over it"},"2334":{"dur":9,"text":"and you use the indices make sure that you're printing in the right order."},"2343":{"dur":3,"text":"Dealing with 2D arrays at first can be a little confusing,"},"2346":{"dur":6,"text":"so here on this slide I've made a table that shows you"},"2352":{"dur":4,"text":"for every given spot in the 2D array what the indices are,"},"2356":{"dur":3,"text":"so if you want to refer back to this for a quick check"},"2359":{"dur":3,"text":"or for a reference or something like that then you can use this."},"2362":{"dur":8,"text":"The columns are in blue, and the rows are in red."},"2370":{"dur":4,"text":"The lookup function is twofold."},"2374":{"dur":3,"text":"Lookup\u2014and it's a boolean function\u2014will tell us"},"2377":{"dur":6,"text":"true or false whether the user-submitted word"},"2383":{"dur":3,"text":"can be accepted as a valid value,"},"2386":{"dur":5,"text":"and so a word in scramble is only valid"},"2391":{"dur":5,"text":"if it's found in the dictionary and if it's actually found in the board,"},"2396":{"dur":6,"text":"and so remember that lookup you have to implement this by yourself,"},"2402":{"dur":8,"text":"so you want to check both things,"},"2410":{"dur":6,"text":"whether the word is actually in the dictionary and whether it's been found already."},"2416":{"dur":2,"text":"Recall back to the global variable dictionary,"},"2418":{"dur":5,"text":"which is a struct that we've made that basically has an int called size"},"2424":{"dur":3,"text":"associated with it as well as an array of words,"},"2427":{"dur":4,"text":"where word is a new data type."},"2432":{"dur":4,"text":"So to access, for instance, the size of the dictionary or the words array,"},"2436":{"dur":2,"text":"then what you can do is just write 'dictionary.size,'"},"2439":{"dur":2,"text":"similar to the way that you would just use any other variable."},"2442":{"dur":5,"text":"So if dictionary.size represents the size of the dictionary,"},"2448":{"dur":2,"text":"similarly, dictionary.words represents the array."},"2451":{"dur":3,"text":"So if you wanted to access a certain word within the dictionary,"},"2454":{"dur":4,"text":"then you would have to add an index"},"2459":{"dur":4,"text":"because you would have to say 'dictionary.words at index i'"},"2463":{"dur":2,"text":"and then do something based on that."},"2466":{"dur":3,"text":"So knowing that the dictionary has a certain size associated with it,"},"2469":{"dur":3,"text":"as well as an array of words, to check if something's in the dictionary,"},"2473":{"dur":3,"text":"then you would have to interate over the dictionary"},"2476":{"dur":3,"text":"to check whether that word is found."},"2480":{"dur":5,"text":"Now, if you think back to lecture, when we talked about different ways to search for things,"},"2485":{"dur":4,"text":"then remember that linear search probably isn't always the best way to go."},"2490":{"dur":5,"text":"But it definitely is one way to search for something."},"2496":{"dur":2,"text":"Sometimes you might find that you implement your find function with"},"2499":{"dur":3,"text":"linear search at first and then get the rest of your program going."},"2502":{"dur":4,"text":"And then later on you can go back and alter the way that you search through for a word."},"2507":{"dur":4,"text":"So that tackles--basically knowing that--knowing how to access the"},"2512":{"dur":3,"text":"words array of the dictionary, that tackles looking to see"},"2515":{"dur":2,"text":"whether that word is actually in the dictionary or not."},"2518":{"dur":8,"text":"But then we also need to tackle whether that word is on the board."},"2526":{"dur":2,"text":"And whether that's been found already."},"2528":{"dur":4,"text":"So we already have the find function, remember."},"2532":{"dur":5,"text":"It shows su, but what is a word?"},"2538":{"dur":4,"text":"This isn't a philosophical question but, rather, look at the type definitions."},"2542":{"dur":4,"text":"We have a boolean called 'found' as well as the array of characters"},"2547":{"dur":2,"text":"that represents that word."},"2549":{"dur":6,"text":"So when you return lookup, you will want to check whether that word has been found or not."},"2555":{"dur":7,"text":"Now, knowing that the boolean found--found is the name of the boolean"},"2563":{"dur":6,"text":"that's associated with every word--then how might you access that variable,"},"2569":{"dur":11,"text":"thinking back to how we accessed the variables within dictionary?"},"2581":{"dur":3,"text":"So here we had dictionary, and then we said dot size, right?"},"2585":{"dur":3,"text":"Similarly, when we have a word and, in this case, be careful because"},"2588":{"dur":5,"text":"word is just any other data type, just like an int or a string."},"2593":{"dur":6,"text":"So you can't just say 'word' unless that's the name of it."},"2599":{"dur":4,"text":"You're going to have to have a variable with a name, and then once you have that,"},"2604":{"dur":5,"text":"say that's called foo, for instance, then you can say 'foo.found,'"},"2609":{"dur":9,"text":"and that will return you the boolean value of whether that word has been found or not."},"2619":{"dur":7,"text":"So then the next part of the pset is to implement scramble,"},"2626":{"dur":4,"text":"whereby whenever the user inputs scramble--and that's already been dealt with"},"2631":{"dur":2,"text":"here in the distribution code--you just need to implement"},"2634":{"dur":8,"text":"the function scramble that has already instructed you to rotate the board 90\u00b0 clockwise."},"2643":{"dur":4,"text":"As per the spec, the instructions say that the board rotates 90\u00b0 clockwise"},"2647":{"dur":8,"text":"such that the value at grid [0] [0] then moves to grid [0] [dimension -1.]"},"2656":{"dur":22,"text":"In this case, for scramble, our dimension is 4, so 0-0 would then map to 0-3."},"2678":{"dur":2,"text":"Let's draw this out to see what it might look like."},"2681":{"dur":8,"text":"I'm not going to do a 4 x 4 grid but rather a 3 x 3 one."},"2689":{"dur":2,"text":"Let's say this is an inch 2D array."},"2692":{"dur":9,"text":"I'm just going to just have--all right."},"2702":{"dur":10,"text":"So say we want to scramble this; we want to rotate it 90\u00b0 clockwise."},"2712":{"dur":10,"text":"We know that, as a starting point, the value at 0-0, which in this case is the number 0,"},"2722":{"dur":6,"text":"is going to map to row 0, then column dimension -1."},"2728":{"dur":2,"text":"And so that, in this case, the dimension is 3."},"2731":{"dur":5,"text":"So then 0 would move to row 0, column 2."},"2737":{"dur":4,"text":"So we have the number 0 there."},"2741":{"dur":4,"text":"Essentially what we're doing is we're taking this,"},"2745":{"dur":6,"text":"physically rotating it so then the 2 would go to this corner,"},"2752":{"dur":4,"text":"the 8 would then go to this corner, the 6 to this one."},"2757":{"dur":10,"text":"And then the rest of it would look like--"},"2767":{"dur":7,"text":"So that's what a grid looks like when you have successfully scrambled it."},"2775":{"dur":2,"text":"When you're implementing the scramble function, what you'll want to do"},"2777":{"dur":5,"text":"is see, well, how can I replace these values?"},"2782":{"dur":3,"text":"Is there some kind of pattern or some kind of formula to determine"},"2786":{"dur":3,"text":"where a particular index goes?"},"2789":{"dur":12,"text":"For instance, I might look to see that 3-4-5 here is a row."},"2802":{"dur":2,"text":"Where else do I see 3-4-5?"},"2804":{"dur":4,"text":"Well I see it here."},"2809":{"dur":12,"text":"Similarly, I see 6-7-8 as a row, but then it's actually a column here."},"2822":{"dur":5,"text":"That's the pattern that I see right now, but there are probably a few other ones."},"2827":{"dur":4,"text":"Based on that, think of some kind of pattern, some kind of way."},"2831":{"dur":8,"text":"Once you've identified one, then you're going to want to reset the values in the grid."},"2840":{"dur":5,"text":"So grid 0-0 will become 6, grid 0-1 will become 3."},"2845":{"dur":7,"text":"But remember that you'll--for instance, if you reset this right away,"},"2852":{"dur":16,"text":"say that grid 0-2 becomes 0 now, then you lose what 2 was there."},"2869":{"dur":3,"text":"So thinking back, it's not enough to just reassign right away."},"2872":{"dur":4,"text":"You'll probably want to make a temporary copy of something"},"2876":{"dur":11,"text":"before you actually put it in at the right place."},"2888":{"dur":3,"text":"The last thing is to implement case insensitivity."},"2891":{"dur":7,"text":"If you look back, search to the spot in the spec where the user inputs a string."},"2899":{"dur":3,"text":"If you recall back, thinking back to--oh, I erased the map."},"2902":{"dur":7,"text":"If you think back to the map of your program, it's within the main function,"},"2910":{"dur":3,"text":"so look to where you're dealing with the user-inputted string,"},"2913":{"dur":4,"text":"and then within there, think of the tools that you learned from your"},"2918":{"dur":5,"text":"crypto pset, pset 2, and then think of ways that you might be able to"},"2923":{"dur":4,"text":"allow for user input as mixed case."},"2928":{"dur":5,"text":"So they could have a mix of uppercases and lowercases, but that should still be valid."},"2933":{"dur":5,"text":"In the dictionary, recall when we opened up that file, every word was stored as all uppercase."},"2939":{"dur":6,"text":"But we don't want the user to have to input uppercase all the time."},"2945":{"dur":6,"text":"Can anyone think of a way that we might be able to allow the user,"},"2952":{"dur":6,"text":"even though they inputted all lowercase, for instance? Yeah?"},"2958":{"dur":2,"text":"[Student] You could make it to upper?"},"2960":{"dur":2,"text":"Yeah, exactly. You could make it to upper."},"2963":{"dur":4,"text":"So you could convert all of the letters to uppercase, and then"},"2967":{"dur":3,"text":"that way you ensure that that is going to be an exact copy"},"2970":{"dur":4,"text":"of whatever's found in the dictionary, if it's in the dictionary."},"2975":{"dur":5,"text":"Great. We have a little bit of time left."},"2980":{"dur":6,"text":"So some things that you might encounter in this pset is a need to know"},"2987":{"dur":4,"text":"what your variables are at a certain point in time."},"2992":{"dur":4,"text":"Because in the spec we have the clear function that basically"},"2997":{"dur":8,"text":"clears whatever you've drawn on the board, erases it all and then rewrites on top of that,"},"3005":{"dur":5,"text":"you might, while you're writing your pset, not really want that to happen."},"3010":{"dur":3,"text":"Because you'll want to see, okay, once I enter in this scramble, for instance,"},"3013":{"dur":5,"text":"once I enter in scramble, what does it do and what was it before, just for reference."},"3019":{"dur":4,"text":"So then what you might want to do is go back to your main function"},"3024":{"dur":6,"text":"and comment out clear, for instance."},"3031":{"dur":2,"text":"So then when you run your program the next time,"},"3034":{"dur":11,"text":"your program won't clear it instead and will just keep on printing on top of that."},"3045":{"dur":2,"text":"There are some other ways to debug as well."},"3047":{"dur":4,"text":"What you could do is you can include print f statements, I think."},"3051":{"dur":5,"text":"One thing that I saw in psets that I graded was that people included print f statements"},"3057":{"dur":5,"text":"to print out variables at a certain point in time to keep track."},"3062":{"dur":4,"text":"But just make sure that at the end, once you've finished writing all your print f statements"},"3066":{"dur":4,"text":"for you to keep track of things, that you comment them out afterwards,"},"3071":{"dur":3,"text":"or delete them once you've finished."},"3075":{"dur":6,"text":"That's another way that you could do something; you could just write in a print f statement"},"3081":{"dur":4,"text":"somewhere that's relevant and see, based on what the terminal prints out,"},"3086":{"dur":2,"text":"what that variable was."},"3088":{"dur":4,"text":"Another way to do that, that we'll go into more detail during lecture,"},"3093":{"dur":3,"text":"is GDB, which is a debugging tool."},"3096":{"dur":10,"text":"Essentially, when you run it, it'll go into your program and you can have it advance"},"3107":{"dur":4,"text":"a single step at a time instead of evaluating everything."},"3111":{"dur":3,"text":"So then you can break it up into little steps, and then based on the way--"},"3114":{"dur":5,"text":"and then along the way print things and see what the values are."},"3120":{"dur":7,"text":"And that helps you figure out where a bug in your code might be."},"3127":{"dur":5,"text":"What we could do right now is write a quick function and then"},"3132":{"dur":6,"text":"see how we might be able to use GDB to see what's going on."},"3139":{"dur":3,"text":"So let's have an int main, and then what do we have as parameters to main?"},"3143":{"dur":9,"text":"We have int arg c, and string arg v."},"3152":{"dur":12,"text":"I'm going to save this in walkthrough as GDB.z. All right."},"3164":{"dur":3,"text":"I'm going to have return 0."},"3168":{"dur":11,"text":"So how about let's just have a simple for loop; let's have 12."},"3179":{"dur":7,"text":"Let's also have an int named counter, and"},"3186":{"dur":5,"text":"we can start that at 0. Okay."},"3191":{"dur":5,"text":"So at every point in the for loop, let's say that we want to increase counter"},"3197":{"dur":9,"text":"or multiply it by whatever i is."},"3206":{"dur":12,"text":"This is a pretty short function."},"3219":{"dur":6,"text":"Let's make GDB. Oh! And then--Clang is smart."},"3226":{"dur":17,"text":"Tells me that I didn't include cs50.h."},"3243":{"dur":12,"text":"All right. So now we want to--"},"3256":{"dur":16,"text":"Actually, sorry guys. I'm going to rename the file just because it's a bit confusing."},"3272":{"dur":10,"text":"All right. So now what we want to do is, we want to start GDB."},"3283":{"dur":8,"text":"I said 'GDB debugging,' so essentially it's going to be set to focusing on this debugging,"},"3291":{"dur":3,"text":"the debugging file."},"3295":{"dur":2,"text":"I'm going to put a breakpoint."},"3297":{"dur":3,"text":"Essentially, the program is going to run until it hits at a certain breakpoint."},"3301":{"dur":3,"text":"I'm going to say break at the main function."},"3304":{"dur":7,"text":"So now I'm going to run debugging; so inside GDB I can run the code."},"3312":{"dur":5,"text":"It's running the program, and even though main was one of the first things that we wrote,"},"3317":{"dur":3,"text":"we also have the include files; there's stuff going on already."},"3320":{"dur":5,"text":"It has the breakpoint at main."},"3325":{"dur":3,"text":"Let's say 'next,' so we can continue on."},"3329":{"dur":3,"text":"It says \"int counter = 0.\""},"3333":{"dur":6,"text":"I'm going to say 'print counter.'"},"3339":{"dur":3,"text":"This is strange. So essentially we expect counters to be 0,"},"3342":{"dur":3,"text":"but GDB is one step back, so whenever you say next,"},"3346":{"dur":3,"text":"it says int counter = 0. That's the next thing that it's going to execute."},"3350":{"dur":5,"text":"Then you click--you can say next again, or you can just say 'n,'"},"3356":{"dur":6,"text":"and now if you print counter, counter is 0, as we expect."},"3362":{"dur":5,"text":"Basically, it creates its own kind of variables for it, but whatever's there--"},"3367":{"dur":4,"text":"like right here; that's what counter represents."},"3372":{"dur":3,"text":"So I'm going to click next, and I want to know what i is."},"3375":{"dur":6,"text":"You'll print i, i is 0, as we expect."},"3381":{"dur":4,"text":"Next again, it's indicating that it's going through the for loop again,"},"3385":{"dur":7,"text":"so if I print i, for instance, I can see that we're on the--that i is 1 currently."},"3392":{"dur":3,"text":"So that's a way, that if you set a breakpoint at a certain function"},"3396":{"dur":3,"text":"and then keep on going next, and then checking what i is,"},"3399":{"dur":6,"text":"if you have a guess that maybe somewhere something's not happening as it should,"},"3405":{"dur":5,"text":"and you suspect that maybe it's at the first index or the last index or something,"},"3411":{"dur":8,"text":"you can use GDB, keep on printing i, to be able to check what those values are."},"3420":{"dur":5,"text":"So then, in GDB, because print and next are such common arguments,"},"3425":{"dur":5,"text":"common commands, just like I abbreviated next to n,"},"3431":{"dur":10,"text":"I can also just say p counter; that's still 0."},"3442":{"dur":3,"text":"Then I click next. I want to print counter again."},"3445":{"dur":1,"text":"Well, so that's still 0."},"3446":{"dur":12,"text":"And you're kind of wondering--well, I want counter to be a factorial function."},"3459":{"dur":4,"text":"Why--just in techniques of debugging--why might that be?"},"3463":{"dur":4,"text":"Why is counter not increasing its value?"},"3468":{"dur":4,"text":"Why is it staying at 0?"},"3473":{"dur":6,"text":"Well, here I have--back in here I say counter = counter x i."},"3479":{"dur":2,"text":"So then if I go back to the beginning of my function,"},"3482":{"dur":7,"text":"I see that when I printed i, i is 0, and what's 0 x anything?"},"3489":{"dur":4,"text":"It's 0, right? So that's probably the reason why counter"},"3493":{"dur":3,"text":"is never going to be any other number."},"3496":{"dur":4,"text":"So then what I might want to do is go back to my fuction,"},"3501":{"dur":5,"text":"say, okay, well actually, I want to start it at 1."},"3507":{"dur":4,"text":"Is that going to solve things?"},"3512":{"dur":2,"text":"Not quite, because counter is still 0 here."},"3514":{"dur":7,"text":"So let's set that to 1."},"3522":{"dur":6,"text":"We want to reset our debugging tool, so let's quit."},"3529":{"dur":4,"text":"And then what we can do is we can GDB debugging again,"},"3534":{"dur":11,"text":"put a break at main, and then run debugging again, next, next, next."},"3545":{"dur":6,"text":"Let's hit next a few times, and then we'll print counter, see that--"},"3552":{"dur":3,"text":"we did not correctly make the file again."},"3556":{"dur":3,"text":"Even though we changed the source code, then we actually"},"3559":{"dur":2,"text":"didn't update our executable."},"3561":{"dur":5,"text":"I believe that you can make--yeah."},"3567":{"dur":2,"text":"Within GDB itself, you can actually make the file."},"3569":{"dur":2,"text":"So you don't have to quit GDB again."},"3571":{"dur":4,"text":"You can go back to the source file, save it, back in GDB, you can make it again."},"3576":{"dur":4,"text":"Great. So let's run debugging."},"3580":{"dur":5,"text":"We want to start it from the beginning because we have a new executable."},"3585":{"dur":8,"text":"We can go through a couple of times, and then print i, print counter, continue."},"3594":{"dur":4,"text":"All right. So now we see that counter is actually increasing its value as we want it to."},"3599":{"dur":4,"text":"That's just a tiny little bite-sized example of how you might use GDB"},"3603":{"dur":6,"text":"to enter your code, print certain values, click next to proceed to the next line,"},"3609":{"dur":3,"text":"and abbreviate it and print it out."},"3612":{"dur":5,"text":"Obviously, the code in scramble is a bit more complex than that, but what you can do"},"3618":{"dur":8,"text":"is set a breakpoint at--you can set a breakpoint at your lookup functions, something like that."},"3626":{"dur":2,"text":"So whenever it reaches the point where it needs to look something up,"},"3629":{"dur":7,"text":"then GDB will run everything up to that point and then you can start printing values out."},"3637":{"dur":4,"text":"Like is marks at this point false or is it true?"},"3642":{"dur":4,"text":"That's probably something that you might want to use."},"3646":{"dur":2,"text":"GDB, don't stress too much about it,"},"3649":{"dur":2,"text":"because we will go into more detail in lecture,"},"3651":{"dur":3,"text":"but I just wanted to let you guys know how you might be able to use it"},"3654":{"dur":5,"text":"if you're getting started with the pset and want to understand"},"3660":{"dur":4,"text":"a better way than just putting print f statements and littering them all through your code."},"3665":{"dur":5,"text":"Having GDB to actually print it for you and being able to set those breakpoints"},"3670":{"dur":2,"text":"so that your program can run up until a certain point"},"3672":{"dur":8,"text":"and then allow you to really step into it and figure out the problem there."},"3681":{"dur":7,"text":"Right. So then if we look back to scramble, we've read the distribution code."},"3689":{"dur":6,"text":"We've talked about a way to iterate over 2D arrays, and you'll definitely"},"3695":{"dur":5,"text":"be wanting to iterate over the 2D array when you come to drawing your game grid."},"3700":{"dur":4,"text":"We talked about the lookup function, about how we want to make sure of a couple of things."},"3705":{"dur":3,"text":"We want to make sure that we haven't been to the word before."},"3708":{"dur":2,"text":"We also want to make sure that it's actually in the dictionary."},"3711":{"dur":3,"text":"Then we talked about scramble, about how we want to rotate the board."},"3714":{"dur":3,"text":"And knowing that you might want to make a copy of something"},"3718":{"dur":2,"text":"to be able to move it."},"3720":{"dur":2,"text":"Finally, we talked about case and sensitivity, about how you want to make sure"},"3723":{"dur":4,"text":"that despite whatever combination of case that the user inputs,"},"3727":{"dur":2,"text":"if it's a valid word in the dictionary,"},"3730":{"dur":4,"text":"then it's going to be found correctly."},"3734":{"dur":6,"text":"So then all of that together is the scramble pset, and that is walkthrough 3."},"3741":{"dur":7,"text":"Thanks everyone for coming, and good luck with scramble."},"3749":{"dur":3,"text":"CS50.TV"}}