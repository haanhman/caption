{"0.19":{"start":"0.19","dur":"6.8","text":"Most of you were here for Dr. Bryan Raney\u2019s\nlast Python tutorial, the basic introduction"},"7.06":{"start":"7.06","dur":"9.14","text":"to Python. So today he\u2019s going to be taking\nus through some examples, hopefully some things"},"16.20":{"start":"16.2","dur":"6.52","text":"that will actually be useful for research.\nI don&#39;t think I have anything else to say"},"22.86":{"start":"22.86","dur":"5.82","text":"so I&#39;ll turn it over to Bryan.\nThank you. Okay, so this is the...what are"},"28.68":{"start":"28.68","dur":"12.44","text":"you doing? Stop running. Silly thing. I don&#39;t\nknow why it did that. So this is a continuation"},"41.12":{"start":"41.12","dur":"9.459","text":"of two weeks ago. The homework was to install\nPython on your laptops. Anybody have trouble"},"50.58":{"start":"50.579","dur":"6.73","text":"with that? Or I guess &quot;who here has a laptop\nwith Python on it?&quot; is the question. Alright."},"57.31":{"start":"57.309","dur":"14.631","text":"Very good. So we&#39;re going to go over examples.\nHopefully I won&#39;t use the entire time with"},"71.94":{"start":"71.94","dur":"9.46","text":"my examples. We can give questions, try to\nfigure things out. For example, things I&#39;m"},"81.40":{"start":"81.4","dur":"7.3","text":"going to go into: if-statements, looping,\nI&#39;m going to try to show some gridded data,"},"88.70":{"start":"88.7","dur":"9.53","text":"Basemap (if I can get it to work) for drawing\nmaps, and whatever else we can come up with."},"98.23":{"start":"98.23","dur":"7.75","text":"Yes, you have laptops, you have Anaconda.\nIf you can download that file, you can follow"},"105.98":{"start":"105.98","dur":"9.29","text":"along. You can get my notebook and my data\nfiles and put them on your computer. You can"},"115.27":{"start":"115.27","dur":"7.389","text":"practice with me because some of the stuff...you&#39;ll\nhave to have the data files on your computer"},"122.66":{"start":"122.659","dur":"14.371","text":"if you want to do it. Go ahead and type people.envsci.rutgers.edu\/braney\n(that&#39;s me, brainy) and then \/python-pt2.zip."},"137.03":{"start":"137.03","dur":"14.92","text":"I&#39;ll wait until everyone has at least started\nthe download. You should also... well,"},"151.95":{"start":"151.95","dur":"4.46","text":"the Jupyter part we can do once you have the files.\nIs everybody... yes?"},"156.42":{"start":"156.42","dur":"4.54","text":"It might be a little while because it&#39;s 122\nmegs."},"160.98":{"start":"160.98","dur":"4.04","text":"-Is it slow?\n-Yeah, because of the wireless."},"165.02":{"start":"165.02","dur":"5.85","text":"-Well, ok.\n-Mine is only at 3.8 megs."},"171.36":{"start":"171.36","dur":"4.02","text":"-It takes like four minutes, it&#39;s not bad.\n-Four minutes?"},"175.38":{"start":"175.38","dur":"1.6","text":"-Yeah.\n-Oops."},"176.99":{"start":"176.99","dur":"2.53","text":"And everybody is trying to do it at"},"179.52":{"start":"179.52","dur":"11.47","text":"the same time. Oops, I didn&#39;t realize it was\nthat big. Anybody have a problem finding the"},"190.99":{"start":"190.99","dur":"7.91","text":"file? Anybody not know what to do with the\nzip file once you download it? It&#39;s ok if"},"198.90":{"start":"198.9","dur":"2.809","text":"you don&#39;t.\n-Should we unzip it?"},"201.71":{"start":"201.709","dur":"9.201","text":"Yeah, unzip it and then...once it&#39;s downloaded,\nyou unzip it and open a command prompt and"},"210.91":{"start":"210.91","dur":"6.97","text":"go to the directory where you unzipped it\nto so that the notebook is in the current"},"217.88":{"start":"217.88","dur":"7.109","text":"directory and there is a data subdirectory\nunder that. I can show you what it looks like"},"224.99":{"start":"224.989","dur":"11.671","text":"for me. I have a few more files than in the\nzip but it&#39;s going to be this examples.ipynb"},"236.66":{"start":"236.66","dur":"4.6","text":"for the notebook, and then a data directory\nthat has apparently a lot of megabytes of"},"241.26":{"start":"241.26","dur":"11.199","text":"files in it, and then a couple other things.\nHow far along is it?"},"252.46":{"start":"252.459","dur":"12.631","text":"-Almost finished.\n-Ok. We can be patient. Eat some pie, I guess."},"265.09":{"start":"265.09","dur":"9.07","text":"You download it, you unzip it...you basically\nwant to start Jupyter in that location."},"278.42":{"start":"278.42","dur":"8.82","text":"-Any problems? Are we just waiting?\n-I&#39;m still working on it because I wasn&#39;t here"},"287.38":{"start":"287.38","dur":"3.04","text":"last time.\n-Oh, ok, you can..."},"290.43":{"start":"290.43","dur":"6.78","text":"-I think there is a serious lack of bandwidth.\n-Well, you can also look on with someone else,"},"297.21":{"start":"297.21","dur":"8.92","text":"if you want. It&#39;s all available. If you don&#39;t\nwant to follow along, that&#39;s fine. You can"},"306.24":{"start":"306.24","dur":"11.94","text":"just watch and it&#39;ll be on the video and you\ncan download it later if you want."},"318.18":{"start":"318.18","dur":"15.5","text":"Everybody still downloading? Anyone still downloading?\nOk. Unzipping ok? No problems? So,"},"333.71":{"start":"333.71","dur":"8.6","text":"then we&#39;re going to run the Jupyter notebook. We&#39;re done with the slides. One thing I forgot to do"},"342.31":{"start":"342.31","dur":"8.48","text":"with the notebook was clear it out. If you\nbring up the notebook in Jupyter, you want"},"350.79":{"start":"350.79","dur":"7.59","text":"to go to &quot;Cell&quot;, &quot;All Output&quot;, &quot;Clear&quot; so\nthat we can start over fresh with just the"},"358.38":{"start":"358.38","dur":"17","text":"code. Anybody not in Jupyter yet? I&#39;ll wait\na little. Hopefully this won&#39;t take too long."},"379.32":{"start":"379.32","dur":"11.46","text":"Raise your hand if you have the notebook open\nin Jupyter. No? Nobody? Ok. You got it? Ok,"},"390.79":{"start":"390.79","dur":"11.659","text":"anyone else? Keep your hand up if you&#39;ve got\nit open. Anyone want me to wait or should"},"402.45":{"start":"402.449","dur":"10.741","text":"I just continue? I&#39;m going to just go on.\nToo much dead air. If you clear it--if you"},"413.19":{"start":"413.19","dur":"5.49","text":"go to &quot;Cell&quot; and &quot;All Output&quot;, &quot;Clear&quot;--then\nthat resets the notebook and it hasn&#39;t actually"},"418.68":{"start":"418.68","dur":"9.5","text":"run anything yet.\n-Bryan, can you make the font a little larger?"},"428.18":{"start":"428.18","dur":"7.37","text":"Oh, sure. How&#39;s that? These first few lines\nare just loading some of the libraries that"},"435.55":{"start":"435.55","dur":"7.489","text":"we need, the numpy and the pyplot stuff. I\nhave to hit Shift+Enter to make it run and"},"443.04":{"start":"443.039","dur":"7.181","text":"then it has the little &quot;1&quot; here, which means\nit&#39;s actually done that. These things are"},"450.22":{"start":"450.22","dur":"8.41","text":"in memory of Python. I missed it last time.\nI didn&#39;t talk about if-statements, which are"},"458.63":{"start":"458.63","dur":"10.23","text":"kind of important if you&#39;re writing any kind\nof code. If I have a value that is 1.3 and"},"468.86":{"start":"468.86","dur":"5.77","text":"I want to test if it is greater than 10, this\nis what the if-statement looks like in Python."},"474.63":{"start":"474.63","dur":"8.08","text":"Basically, it\u2019s &quot;if&quot; and then the thing\nyou&#39;re testing, and then a colon. Then you"},"482.71":{"start":"482.71","dur":"8.609","text":"indent, and then whatever you want to do if\nthat&#39;s true. The indentation is important."},"491.32":{"start":"491.319","dur":"8.38","text":"That tells Python that this line of code goes\nwith the if-statement. If you type something"},"499.70":{"start":"499.699","dur":"6.62","text":"else here and it&#39;s still indented, it&#39;s still\npart of the if-statement. But if you remove"},"506.32":{"start":"506.319","dur":"12.231","text":"the indentation and type something else, then\nthat happens regardless of the if-statement."},"518.55":{"start":"518.55","dur":"8.48","text":"If we run this, it doesn&#39;t say &quot;windy&quot; because\n1.3 is not greater than 10, but it does say"},"527.03":{"start":"527.03","dur":"11.09","text":"&quot;done&quot;. So if we change this number to 10.3\nand run it, then it says the &quot;windy&quot; statement"},"538.12":{"start":"538.12","dur":"5.71","text":"and then it says &quot;done&quot;. Any questions on\nthat?"},"543.83":{"start":"543.83","dur":"4.5","text":"-Can you also do it again as &quot;else&quot;?\n-Of course, that&#39;s the next step."},"548.33":{"start":"548.33","dur":"7.53","text":"Do you have to do the indentation by pressing\n&quot;Tab&quot;?"},"555.86":{"start":"555.86","dur":"7.46","text":"You can do &quot;Tab&quot; or spaces. If you&#39;re writing\ncode in a text editor, the important thing"},"563.32":{"start":"563.32","dur":"7.76","text":"is that you&#39;re consistent. If you hit &quot;Tab&quot;\nhere, then for each line that goes in that"},"571.08":{"start":"571.08","dur":"6.55","text":"&quot;if&quot;, you have to also hit &quot;Tab&quot;.\n[audience question]"},"578.56":{"start":"578.56","dur":"7.56","text":"Yeah. A lot of editors are intelligent. They\ndo it for you. In Jupyter here, it indented"},"586.14":{"start":"586.14","dur":"8.06","text":"for me. I&#39;ll show you that here.\n-Just by virtue of having &quot;if&quot; on the line..."},"594.20":{"start":"594.2","dur":"5.72","text":"The colon. The colon tells it that the next\nline is probably indented. But it&#39;s up to"},"599.93":{"start":"599.93","dur":"8.63","text":"you to make sure the indentation is correct.\nLet&#39;s say we want to have it print something"},"608.56":{"start":"608.56","dur":"10.6","text":"if it&#39;s not windy. Then you say &quot;print &#39;not\nso windy&#39;&quot;, but it still says &quot;windy&quot; because"},"619.16":{"start":"619.16","dur":"9.66","text":"10.3 is still greater than 10. If I change\nthat back to 1.3, now it says &quot;not so windy&quot;."},"628.96":{"start":"628.96","dur":"6.98","text":"You can even stack these up. That&#39;s &quot;elif&quot;."},"641.12":{"start":"641.12","dur":"5.42","text":"Then you can say something like that. You can have as many &quot;elif&quot;s as you want"},"646.54":{"start":"646.54","dur":"4.65","text":"and you&#39;ll have all these different conditions that you&#39;re"},"651.19":{"start":"651.19","dur":"9.35","text":"testing for. This is basically saying that\nif the value is greater than 10, do this."},"660.54":{"start":"660.54","dur":"5.18","text":"If it&#39;s less than 1... if it&#39;s not greater\nthan 10, but it&#39;s less than 1, do this. If"},"665.72":{"start":"665.72","dur":"5.29","text":"it&#39;s not greater than 10 and not less than\n1, then you come to the &quot;else&quot;, which is the"},"671.01":{"start":"671.01","dur":"12.29","text":"catchall. You don&#39;t have to have the &quot;else&quot;,\nbut usually you will. If I pick a number that&#39;s"},"683.30":{"start":"683.3","dur":"11.969","text":"less than 1, then it writes &quot;calm&quot; here. You&#39;re\nnot always going to be printing words. In"},"695.27":{"start":"695.269","dur":"7.551","text":"this case, you&#39;ll be doing something for illustration.\nAnd you can have multiple lines here. You"},"702.82":{"start":"702.82","dur":"12.009","text":"can say &quot;w=w+1&quot;, like if you were counting\nthe number of windy days, something like that."},"714.83":{"start":"714.829","dur":"11.061","text":"But then you&#39;d have to have &quot;w=0&quot;, &quot;c=0&quot;.\nYou can have multiple lines underneath the"},"725.89":{"start":"725.89","dur":"9.069","text":"\u201cif\u201d as long as they&#39;re all indented.\nAny questions about that? Is everybody running"},"734.96":{"start":"734.959","dur":"6.681","text":"the notebook?\n-I missed the part that got you running Jupyter."},"741.64":{"start":"741.64","dur":"13.05","text":"Oh, sorry. Let&#39;s bring that up. Where is it?\nWhat you want to do is you go to the directory..."},"754.69":{"start":"754.69","dur":"6.589","text":"-Oh, ok. Got it.\n-Yeah. Just say &quot;Jupyter&quot;, space, &quot;notebook&quot;,"},"761.28":{"start":"761.28","dur":"8.66","text":"space, and then the notebook file. Anybody\nelse having issues?"},"772.38":{"start":"772.38","dur":"2.46","text":"Alright, that&#39;s pretty good."},"777.94":{"start":"777.94","dur":"4.92","text":"So we have if-statements. And feel free to play around. This is a notebook. You&#39;re"},"782.86":{"start":"782.86","dur":"6.789","text":"not going to break anything. Do whatever you\nwant in these cells. You can add your own"},"789.65":{"start":"789.649","dur":"10.19","text":"cells and try things. I&#39;m going to move on\nto looping. There are all kinds of different"},"799.84":{"start":"799.839","dur":"6.06","text":"ways to do looping. Typically you want to\ndo looping when you want to accomplish the"},"805.90":{"start":"805.899","dur":"8.831","text":"same task on several different pieces of information.\nThe very basic version of that is, let&#39;s say"},"814.73":{"start":"814.73","dur":"6.39","text":"you have a list of numbers and you want to\nloop through each number and do something"},"821.12":{"start":"821.12","dur":"9.269","text":"with it. In this case, let&#39;s keep it simple\nhere. Let&#39;s just print &quot;value&quot;. What this"},"830.39":{"start":"830.389","dur":"9.111","text":"does is I give it a list of numbers and then\nI say &quot;for&quot; and then I give a name. This name"},"839.50":{"start":"839.5","dur":"8.19","text":"is just part of the loop. This is the thing\nthat is changing as we loop through the list."},"847.69":{"start":"847.69","dur":"6.579","text":"Then I say &quot;in&quot; and then the list of things\nto loop over. If you&#39;re used to other programming"},"854.27":{"start":"854.269","dur":"7.211","text":"languages that have a more cumbersome for-loop\nstyle, where you have to worry about indexing"},"861.48":{"start":"861.48","dur":"5.13","text":"and stuff like that, you don&#39;t have to do\nthat here. It&#39;s pretty much just &quot;I want to"},"866.61":{"start":"866.61","dur":"7.979","text":"loop through the items in this container&quot;.\nWhat it does is, for each one of those items,"},"874.59":{"start":"874.589","dur":"5.211","text":"it will print the value. You can see it prints\nfour things because there were four things"},"879.80":{"start":"879.8","dur":"6.63","text":"in the list. Any questions about that?\n-But what if you do... suppose you were looping"},"886.43":{"start":"886.43","dur":"5.72","text":"through latitudes and longitudes and you wanted\nto have two..."},"892.15":{"start":"892.15","dur":"11.17","text":"Ok, that depends. In this case, I&#39;m showing\na very simple Python list. In that case, you&#39;d"},"903.32":{"start":"903.32","dur":"10.199","text":"be using the numpy array. There would be a\nslightly different mechanism but I can show"},"913.52":{"start":"913.519","dur":"12.111","text":"that in a minute. That&#39;s a good question.\nI can change what I&#39;m doing here. I can multiply"},"925.63":{"start":"925.63","dur":"7.42","text":"by 3, which then instead of showing the individual\nitems in the list, it shows some sort of transformation"},"933.05":{"start":"933.05","dur":"8.55","text":"of them. Let&#39;s do &quot;plus 2&quot;, because that&#39;s\nin my examples below. This is the basic for-loop."},"941.60":{"start":"941.6","dur":"5.06","text":"Notice there&#39;s a colon at the end and the\nprint statement is indented. It&#39;s the same"},"946.66":{"start":"946.66","dur":"8.27","text":"rules as before. You can do multiple things.\nYou could say &quot;a=value+2&quot;. You can have multiple"},"954.93":{"start":"954.93","dur":"6.149","text":"lines here and they all happen each time through\nthe loop. Yes?"},"961.08":{"start":"961.079","dur":"10.87","text":"If you wanted to run the test through the\nsecond and third element of values... [inaudible]"},"971.95":{"start":"971.949","dur":"8.871","text":"Second and third? The 5 and the 21? Ok. Because the indexing starts at 0, the 5 is actually"},"980.82":{"start":"980.82","dur":"11.009","text":"index 1. So I put a 1 here and I want to go\nto two, but you actually have to put the 1"},"991.83":{"start":"991.829","dur":"8.702","text":"after. So it&#39;s 3. If we do that, it does the\n5 and the 21 but it&#39;s adding 2 to them."},"1004.70":{"start":"1004.7","dur":"4.32","text":"The things that are indented, the two lines,\nare part of the for-loop?"},"1009.03":{"start":"1009.029","dur":"3.3","text":"-Right.\n-It knows that the for-loop has ended when"},"1012.33":{"start":"1012.329","dur":"7.87","text":"it encounters something that is not indented?\n-Right, yes. That&#39;s typical of Python. In other"},"1020.20":{"start":"1020.199","dur":"6.16","text":"languages, like in Fortran or something or\nMatlab, it&#39;ll have the word &quot;end&quot; or something"},"1026.36":{"start":"1026.359","dur":"6.12","text":"to signify the end of the loop or the end\nof the if-statement. But in Python, it relies"},"1032.48":{"start":"1032.479","dur":"6.94","text":"on the indentation for that. In other programming\nlanguages, indentation is optional and highly"},"1039.42":{"start":"1039.419","dur":"7.57","text":"recommended. In Python, it&#39;s required.\n-Indentation can be with spaces or tabs?"},"1046.99":{"start":"1046.989","dur":"8.111","text":"It&#39;s up to you. There&#39;s no required amount\nof indentation or style of indentation, as"},"1055.10":{"start":"1055.1","dur":"9.029","text":"long as each line is consistent. Yes, Matt?\n-I did the for-value as \u201cvalue space 1:3"},"1064.13":{"start":"1064.129","dur":"4.66","text":"space colon\u201d.\n-Those aren&#39;t spaces, those are square brackets."},"1068.79":{"start":"1068.789","dur":"2.24","text":"-They&#39;re just hard to see.\n-Oh!"},"1071.03":{"start":"1071.029","dur":"6.7","text":"Sorry. It was highlighting them because of\nwhere my cursor was. It&#39;s square brackets."},"1077.73":{"start":"1077.729","dur":"6.601","text":"The square brackets are saying I want to look\nup something inside the values list."},"1084.33":{"start":"1084.33","dur":"7.99","text":"But if you wanted to nest the for-loop inside\nanother for-loop, is it another set of indentations?"},"1092.32":{"start":"1092.32","dur":"11.68","text":"Yes. You could...let&#39;s try that. Let&#39;s insert\na cell below and let&#39;s do \u201cvalues2D equals\u201d..."},"1113.40":{"start":"1113.4","dur":"19.719","text":"This would be for row in values2D, for col, or\nfor val in row...that is looping. This here"},"1133.12":{"start":"1133.119","dur":"9.62","text":"is a list of lists, which I don&#39;t really recommend\nusing too much. The numpy stuff is better."},"1142.74":{"start":"1142.739","dur":"8.451","text":"This first one is looping through the outer\nlist and the second loop is looping, taking"},"1151.19":{"start":"1151.19","dur":"11.049","text":"the outer list as its input and then looping\nthrough that list. Sort of staged. I&#39;m printing"},"1162.24":{"start":"1162.239","dur":"6.06","text":"the value each time. This is just going through\nthe whole thing. I can do other stuff, like"},"1168.30":{"start":"1168.299","dur":"11.031","text":"I could say... and then you can see it does\nthe equal signs once per row, so you can do"},"1179.33":{"start":"1179.33","dur":"4.969","text":"all kinds of stuff like that. You can see\nfrom the indentation that this print goes"},"1184.30":{"start":"1184.3","dur":"14.64","text":"with this for-loop and not this one. Any questions\nabout that?"},"1198.94":{"start":"1198.94","dur":"3.22","text":"Ok. If you wanted to...going back"},"1202.17":{"start":"1202.169","dur":"5","text":"to this example, if you wanted to loop through\nthe values, get a new number for each one"},"1207.17":{"start":"1207.169","dur":"10.651","text":"and store that, you&#39;d have to do something\nlike this, at least as far as we know so far."},"1217.82":{"start":"1217.82","dur":"7.52","text":"In this case, I&#39;ve created a new, empty list\nand I&#39;m looping through the values list and"},"1225.34":{"start":"1225.34","dur":"8.179","text":"then for each value I&#39;m appending to the new\nlist the new value and then I&#39;m printing out"},"1233.52":{"start":"1233.519","dur":"11.071","text":"the new list. You can see I&#39;ve got a list\nhere, as opposed to up here where it just"},"1244.59":{"start":"1244.59","dur":"4.669","text":"printed each thing but it didn&#39;t store them\nanywhere. Here, I&#39;ve actually stored the list"},"1249.26":{"start":"1249.259","dur":"9.081","text":"in the variable. But this is a lot of... it&#39;s\nvery wordy and Python doesn&#39;t like that. There&#39;s"},"1258.34":{"start":"1258.34","dur":"8.839","text":"a better way to do that. So if you go down\nhere, this is the same exact thing. What this"},"1267.18":{"start":"1267.179","dur":"9.22","text":"does is, you say \u201cthis variable, equals, square\nbrackets\u201d and then you actually do the for-loop"},"1276.40":{"start":"1276.399","dur":"7.01","text":"in the square brackets, essentially. You&#39;re\nsaying \u201cfor v in values\u201d, but the thing"},"1283.41":{"start":"1283.409","dur":"7.041","text":"that goes before the word &quot;for&quot; is what you\nwant to stick in the resulting list. If you"},"1290.45":{"start":"1290.45","dur":"4.599","text":"think about it, it&#39;s taking this...you kind\nof have to read it from right to left. You"},"1295.05":{"start":"1295.049","dur":"8.43","text":"take this list, you loop through it with the\nvalue v each time and then you calculate v+2"},"1303.48":{"start":"1303.479","dur":"7.56","text":"each time. Because that&#39;s in square brackets,\nyou store that as a list. This is doing the"},"1311.04":{"start":"1311.039","dur":"6.73","text":"same thing as this loop up here. It&#39;s just\na more compact way of saying it."},"1317.77":{"start":"1317.769","dur":"8.97","text":"-[audience question]\n-Right. In this case...otherwise, if you said"},"1326.74":{"start":"1326.739","dur":"9.471","text":".append and it wasn&#39;t defined, it wouldn&#39;t\nknow what you were talking about. What this"},"1336.21":{"start":"1336.21","dur":"5.5","text":"does is it produces a resulting list first\nand then it stores it in the variable that"},"1341.71":{"start":"1341.71","dur":"8.829","text":"you name it. You don&#39;t have pre-define it.\nI have to show you this because you&#39;ll see"},"1350.54":{"start":"1350.539","dur":"10.34","text":"it a lot in other people&#39;s code and it&#39;s pretty\nuseful. Any other questions so far? Alright."},"1360.88":{"start":"1360.88","dur":"8.88","text":"Another thing you can do. Let&#39;s say you have\na function, and here&#39;s how you define a function."},"1369.76":{"start":"1369.76","dur":"6.06","text":"It&#39;s pretty similar to what we have seen.\nYou&#39;ve got &quot;def&quot; which means &quot;define&quot; and"},"1375.83":{"start":"1375.83","dur":"6.929","text":"then the name of the function, the inputs\nof the function, and then a colon. All the"},"1382.76":{"start":"1382.759","dur":"5.85","text":"indented lines after that are part of the\nfunction definition. What I&#39;m saying here"},"1388.61":{"start":"1388.609","dur":"5.78","text":"is I send it something called &quot;old value&quot;\nand then it calculates a new value based on"},"1394.39":{"start":"1394.389","dur":"6.191","text":"the old value and then it returns the new\nvalue. If I have a value of 50 and I call"},"1400.58":{"start":"1400.58","dur":"9.679","text":"it function and store it and look at the output,\nthe result is 50+2. What you can do then is"},"1410.26":{"start":"1410.259","dur":"8.061","text":"you can take this idea up here, combine it\nwith the function, and then you get this."},"1418.32":{"start":"1418.32","dur":"10.609","text":"You say for all the v&#39;s in values, call the\nfunction on the v&#39;s and then store the results."},"1428.93":{"start":"1428.929","dur":"5.63","text":"That results in the same list as the other\nways."},"1434.56":{"start":"1434.559","dur":"8.8","text":"This might have been something we covered\nlast time, but for the def, does Python understand...is"},"1443.36":{"start":"1443.359","dur":"7.65","text":"that specific to defining a function?\n-Pretty much, yeah. Def just means I&#39;m defining"},"1451.01":{"start":"1451.009","dur":"18.6","text":"a function. There are other things you can\ndefine in Python that use other words there."},"1469.61":{"start":"1469.609","dur":"10.63","text":"This is a slightly more advanced idea here.\nHere we have to look at this closely. When"},"1480.24":{"start":"1480.239","dur":"6.591","text":"When I write this here, I&#39;m calling the function\ncalled &quot;compute new value&quot; and I&#39;m giving"},"1486.83":{"start":"1486.83","dur":"8.49","text":"it a value. I&#39;m giving it information. It&#39;s\nrunning and it&#39;s giving me an output. Here,"},"1495.32":{"start":"1495.32","dur":"8.299","text":"it looks like I&#39;m calling &quot;compute new value&quot;\non the value v but I&#39;m not really because"},"1503.62":{"start":"1503.619","dur":"6.5","text":"this is sort of symbolic. What I&#39;m saying\nis for all the v in values, I&#39;m going to be"},"1510.12":{"start":"1510.119","dur":"8.35","text":"doing this with each one of those v&#39;s. Instead\nof calling the function, this is like a description."},"1518.47":{"start":"1518.469","dur":"7.55","text":"You&#39;re telling Python you want it to call\nthe function. The automatic looping that happens"},"1526.02":{"start":"1526.019","dur":"5.52","text":"with the \u201cfor\u201d here is calling the function\nfor you. Even though this looks very similar"},"1531.54":{"start":"1531.539","dur":"7.44","text":"to this, they&#39;re slightly different meanings.\nHere is another way of looking at it where"},"1538.98":{"start":"1538.979","dur":"7.12","text":"I&#39;m calling a function called &quot;Map&quot; and instead\nof calling the function &quot;compute new value&quot;,"},"1546.10":{"start":"1546.099","dur":"8.741","text":"I&#39;m passing the function into Map. I&#39;m telling\nMap to use this function. I&#39;m giving it a"},"1554.84":{"start":"1554.84","dur":"9.569","text":"list of values and if I run this, this doesn&#39;t\nwork. It says I have a Map. What you actually"},"1564.41":{"start":"1564.409","dur":"11.86","text":"have to do is put lists around it to convert\nthe Map to a list. What this does is for each"},"1576.27":{"start":"1576.269","dur":"7.78","text":"value in value, it calls the function on that\nvalue. It&#39;s exactly the same as this; it&#39;s"},"1584.05":{"start":"1584.049","dur":"9.07","text":"just another way to write it.\n-It&#39;s not any more efficient?"},"1593.12":{"start":"1593.119","dur":"7.221","text":"It could be. There&#39;s actually similar functions\nin the numpy that are more efficient than"},"1600.34":{"start":"1600.34","dur":"12.26","text":"looping yourself but this one&#39;s a little easier\nto comprehend so I&#39;m showing that first."},"1615.97":{"start":"1615.969","dur":"6.39","text":"Does that make any sense? Here&#39;s \u201cvalues\u201d,\nthere&#39;s \u201cvalues.\u201d Here&#39;s \u201ccompute new"},"1622.36":{"start":"1622.359","dur":"5.06","text":"value\u201d, there&#39;s \u201ccompute new value\u201d.\nIt&#39;s just that the &quot;v&quot; and the &quot;for v&quot; part"},"1627.42":{"start":"1627.419","dur":"6.171","text":"are handled by Map. And the reason you have\nto put &quot;list&quot; here is because Map returns"},"1633.59":{"start":"1633.59","dur":"7.61","text":"something called an iterator, which is...\nactually, when you do the for-loop up here"},"1641.20":{"start":"1641.2","dur":"6.859","text":"and you put values there, Python converts\nthat list into an iterator. An iterator is"},"1648.06":{"start":"1648.059","dur":"7.78","text":"a thing you use to go through lists. The trick\nis that you don&#39;t have to have the entire"},"1655.84":{"start":"1655.839","dur":"5.82","text":"list in your memory. The iterator can figure\nout what the next value is every time you"},"1661.66":{"start":"1661.659","dur":"5.48","text":"ask it. It&#39;s good for for-loops because you\ndon&#39;t have to remember everything; you just"},"1667.14":{"start":"1667.139","dur":"7.16","text":"have to know where to look. It&#39;s mostly a\nthing that happens under the hood but it is"},"1674.30":{"start":"1674.299","dur":"11.88","text":"a concept that Python programming encounters.\nFor example, you can use the Map thing directly"},"1686.18":{"start":"1686.179","dur":"9.641","text":"into a for-loop. Instead of storing this in\na variable and putting that variable here,"},"1695.82":{"start":"1695.82","dur":"10.919","text":"I just put the Map directly and what that\nallows me to do is go through the list that"},"1706.74":{"start":"1706.739","dur":"7.451","text":"the Map would produce without actually storing\nthe entire list. The for-loop sees the Map"},"1714.19":{"start":"1714.19","dur":"4.869","text":"as an iterator and it tells it &quot;Give me the\nfirst item in the list, the give me the second,"},"1719.06":{"start":"1719.059","dur":"6.401","text":"then give me the third one&quot;. It keeps doing\nthat until Map says that there are no more."},"1725.46":{"start":"1725.46","dur":"11.98","text":"This is much more efficient that doing this\nfirst and then doing... if you were to write..."},"1741.90":{"start":"1741.9","dur":"11.619","text":"What is going on here? You could write that\nas doing the same exact thing. You would be"},"1753.52":{"start":"1753.519","dur":"6.56","text":"looping over the list that you made up here\nbut this version is more efficient."},"1761.16":{"start":"1761.16","dur":"2.82","text":"Just two different ways of doing it."},"1768.82":{"start":"1768.82","dur":"5.94","text":"Now for the next\nlevel of advancement. Are there any questions so far?"},"1774.76":{"start":"1774.76","dur":"8.32","text":"Ok. You don&#39;t necessarily have to\nfollow all of this just yet but these are"},"1783.08":{"start":"1783.08","dur":"6.809","text":"concepts that I think are very useful. We\ncan talk more in depth about them if people"},"1789.89":{"start":"1789.889","dur":"12.9","text":"are interested later. The lambda is a way\nof defining a function without defining a function."},"1802.79":{"start":"1802.789","dur":"11.551","text":"Here, if we compare this up here...\nI&#39;m going to copy this down, just for reference."},"1815.64":{"start":"1815.64","dur":"6.879","text":"Before, I gave it the name of a function and\nit would call that function inside the Map"},"1822.52":{"start":"1822.519","dur":"15.23","text":"loop. Here, instead I am defining a function\non the fly. Lambda is a fancy computer science"},"1837.75":{"start":"1837.749","dur":"7.331","text":"word. What I am saying is I have a variable\nv that is my input and then the output is"},"1845.08":{"start":"1845.08","dur":"6.799","text":"v+2. What this entire thing does is Python\ngenerates a function for me that has that"},"1851.88":{"start":"1851.879","dur":"10.89","text":"input and that output. It gives that function\nto the Map thing. It basically removes the"},"1862.77":{"start":"1862.769","dur":"6.96","text":"overhead of having to write all this stuff\nin the situations where that makes sense."},"1869.73":{"start":"1869.729","dur":"4.37","text":"Sometimes you do want to have a function and\nyou want to call it but sometimes, if it&#39;s"},"1874.10":{"start":"1874.099","dur":"5.25","text":"a quick and dirty thing that you&#39;re doing,\nthen a lambda is easier to see what&#39;s going"},"1879.35":{"start":"1879.349","dur":"5.63","text":"on. You can see v is turning into v+2 and\nthat&#39;s all you need to know."},"1884.98":{"start":"1884.979","dur":"7.4","text":"If you had a function that involved a two-step\ntransformation, could you use this lambda"},"1892.38":{"start":"1892.379","dur":"6.6","text":"syntax to do that? Suppose you wanted to first\nadd 2 to v and then..."},"1898.98":{"start":"1898.979","dur":"4.76","text":"-Times 3.\n-Would you represent any other form as a line?"},"1903.74":{"start":"1903.74","dur":"6.28","text":"Right. You can do that but once you start\ngetting a lot of that, then the lambda doesn&#39;t"},"1910.03":{"start":"1910.029","dur":"9.8","text":"make sense. Lambdas are meant more for\npretty terse things."},"1924.10":{"start":"1924.1","dur":"6.78","text":"It&#39;s very contextual. If for some reason I was expecting v to be a list,"},"1930.88":{"start":"1930.88","dur":"5.1","text":"then I might have to do something like v is 0."},"1938.14":{"start":"1938.14","dur":"7.52","text":"It just depends. If you have something\ncomplicated then you should put it in a function."},"1945.67":{"start":"1945.669","dur":"10.86","text":"The lambdas are typically for something that&#39;s\npretty short and to the point."},"1956.94":{"start":"1956.94","dur":"4.46","text":"I think there&#39;s a way to append \nmultiple statements there but I haven&#39;t"},"1961.40":{"start":"1961.4","dur":"7.42","text":"looked into that so I&#39;m\nnot sure. Let&#39;s comment this out and then"},"1968.83":{"start":"1968.83","dur":"10.1","text":"run this. This is doing the same thing as\nbefore. It&#39;s producing the same list"},"1978.93":{"start":"1978.93","dur":"8.429","text":"You can take a lambda and store it in a variable\nand then that variable becomes a function."},"1987.36":{"start":"1987.359","dur":"10.93","text":"Here, I&#39;ve defined my lambda. It takes two\ninputs: an x and a y. It produces this output,"},"1998.29":{"start":"1998.289","dur":"5.92","text":"which is just some equation involving x and\ny. If I store that into the variable func"},"2004.21":{"start":"2004.209","dur":"8.121","text":"and I call func with 3 and 4, it returns that\noutput with 5. If you wanted to write all"},"2012.33":{"start":"2012.33","dur":"6.639","text":"that out in a more explicit way, you would\ndo it as a function. This function is functionally"},"2018.97":{"start":"2018.969","dur":"9.86","text":"the same as this lambda. It&#39;s just two different\nwas of doing things. Any questions on that?"},"2028.83":{"start":"2028.829","dur":"6.93","text":"Confusions? Or &quot;Why did you go over this?&quot;\nquestions?"},"2035.76":{"start":"2035.759","dur":"5.64","text":"[audience question]\n-You don&#39;t need to use lambda. It&#39;s completely"},"2041.40":{"start":"2041.399","dur":"8.2","text":"optional. But there will be situations where...one\nof the reasons I&#39;m going over these things"},"2049.60":{"start":"2049.599","dur":"4.371","text":"is because you are going to see them in other\npeople&#39;s code. You need to have some idea"},"2053.97":{"start":"2053.97","dur":"6.879","text":"of what they mean. It terms of using it yourself,\nyou don&#39;t have to use it until you&#39;re ready."},"2060.85":{"start":"2060.849","dur":"4.22","text":"You&#39;ll be ready when you realize, &quot;Dang, I\nhave to write all these little functions all"},"2065.07":{"start":"2065.069","dur":"5.381","text":"over the place and I&#39;m only using them in\none spot and it would be nice if I didn&#39;t"},"2070.45":{"start":"2070.45","dur":"3.99","text":"have to do extra work.&quot; The lambda takes care\nof that for you."},"2074.44":{"start":"2074.44","dur":"8.08","text":"That seems like it would be very useful, for\nexample, if you had to do unit conversions."},"2082.52":{"start":"2082.52","dur":"4.56","text":"-Right.\n-...one set of units but you want them in another set."},"2087.08":{"start":"2087.08","dur":"9.319","text":"Right, exactly. These are just things I think"},"2096.40":{"start":"2096.399","dur":"11.15","text":"you should have some idea of what they are.\nAny other questions? Wow, it&#39;s already 1:12."},"2107.55":{"start":"2107.549","dur":"11.26","text":"Let&#39;s move on. This is going to be a little\ndifferent. This was supposed to be not doing that."},"2118.81":{"start":"2118.809","dur":"9.551","text":"Ok. This is a little bit of a diversion\nbecause we&#39;re going to need this later. One"},"2128.37":{"start":"2128.369","dur":"7.631","text":"thing you sometimes need to do in Python is\ncall another program. That other program could"},"2136.00":{"start":"2136","dur":"7.589","text":"be very simple, like a little utility, or\nit could be you&#39;re running a model and Python"},"2143.59":{"start":"2143.589","dur":"8.921","text":"is managing the running of that. There&#39;s a\nfew ways to do that. There&#39;s a module called"},"2152.51":{"start":"2152.51","dur":"10.12","text":"Subprocess. If you load that and do &quot;Call&quot;\nand then you give it a list, the first item"},"2162.63":{"start":"2162.63","dur":"4.469","text":"in the list is the command you want to run\nand then everything else after that is the"},"2167.10":{"start":"2167.099","dur":"7.23","text":"arguments to that command. If you were typing\nthis on the Command line, it would look like"},"2174.33":{"start":"2174.329","dur":"11.641","text":"&quot;open&quot;... that, for example. If I ran that\non the command line, it would open this file"},"2185.97":{"start":"2185.97","dur":"11.98","text":"here. Ok, great. If I do it in Python, it&#39;s\nthe same thing. If I run this, it does the"},"2197.95":{"start":"2197.95","dur":"10.75","text":"same exact thing. It&#39;s just written in a slightly\ndifferent way. If you want to actually see"},"2208.70":{"start":"2208.7","dur":"8.639","text":"the output of that program, then you would\nuse &quot;Check Output&quot;. It runs this program,"},"2217.34":{"start":"2217.339","dur":"5.041","text":"that program does some stuff, spits out some\noutput, the output is stored here, and then"},"2222.38":{"start":"2222.38","dur":"9.709","text":"you can do something with it. If you&#39;re in\nJupyter, you can do all that more easily with"},"2232.09":{"start":"2232.089","dur":"11.821","text":"the exclamation point command. You say &quot;!&quot; and\nthe command you want to run, and it does that."},"2243.91":{"start":"2243.91","dur":"10.57","text":"-You have in 29, the b and the \\n...\n-The echo command prints the line with the"},"2254.48":{"start":"2254.48","dur":"9.19","text":"return character after it. The \\n is the return\ncharacter and the b and the quotes mean this"},"2263.67":{"start":"2263.67","dur":"9.619","text":"is what Python calls a byte string, basically\na list of characters. Python hasn&#39;t quite"},"2273.29":{"start":"2273.289","dur":"10.161","text":"converted this into its own string type. Because\nthis is coming from another program, it&#39;s"},"2283.45":{"start":"2283.45","dur":"7.619","text":"not in a nice format. In this case, Jupyter\nis doing some extra processing to make everything"},"2291.07":{"start":"2291.069","dur":"11.71","text":"smooth. Usually when you&#39;re processing something\nlike this, you&#39;d say &quot;output.trim&quot;, I think"},"2302.78":{"start":"2302.779","dur":"8.22","text":"it is. Oh, it&#39;s a bytes object. Let&#39;s try\nthis. Output equals..."},"2325.02":{"start":"2325.02","dur":"4.34","text":"What is it? I forget the command."},"2332.48":{"start":"2332.48","dur":"7.82","text":"Trim... it&#39;s not trim, it&#39;s something\nelse. There&#39;s a command that strips off the"},"2340.31":{"start":"2340.309","dur":"6.46","text":"extra characters but I can&#39;t remember what\nit is."},"2356.56":{"start":"2356.56","dur":"5.8","text":"-I think it&#39;s &quot;strip&quot;.\n-Strip. Ok, thank you."},"2364.90":{"start":"2364.9","dur":"3.88","text":"Yeah, &quot;trim&quot; I think is Perl."},"2370.26":{"start":"2370.26","dur":"7.42","text":"That didn&#39;t work. It got worse. Well,\nI don&#39;t know what to do here."},"2377.68":{"start":"2377.68","dur":"6.72","text":"I could figure it out, but that would take too long."},"2384.40":{"start":"2384.4","dur":"4.94","text":"Weird. Oh well."},"2390.90":{"start":"2390.9","dur":"4.94","text":"That&#39;s running an external program, which I will be doing in a second."},"2395.84":{"start":"2395.84","dur":"3.84","text":"First,\nI have to explain. The next part I want to"},"2399.68":{"start":"2399.68","dur":"6.889","text":"cover is gridded data, which is very common\nin the atmospheric science and the ocean science"},"2406.57":{"start":"2406.569","dur":"7.841","text":"when you have model output or reanalysis.\nAnything that comes from a nice computer model"},"2414.41":{"start":"2414.41","dur":"10.48","text":"that can give you regular information. For\nthat, I&#39;m going to show this picture."},"2434.34":{"start":"2434.34","dur":"8.8","text":"Let\u2019s say you have data on a latitude--longitude\ngrid. Over here you&#39;ve got the two-dimensional"},"2443.14":{"start":"2443.14","dur":"8.26","text":"grid of information and then each row has...\nthat should have started at 0. Oops. Each"},"2451.40":{"start":"2451.4","dur":"8.25","text":"row has its own index and each column has\nits own index. You also have associated with"},"2459.65":{"start":"2459.65","dur":"7.909","text":"those rows and columns latitudes and longitudes.\nThat longitude is a separate piece of information"},"2467.56":{"start":"2467.559","dur":"7.06","text":"from the actual numerical data on the grid.\nSame with the latitude. You have to associate"},"2474.62":{"start":"2474.619","dur":"9.521","text":"the two in order to use this information.\nThe number of rows in your data matches the"},"2484.14":{"start":"2484.14","dur":"5.229","text":"number of latitudes that you have and the\nnumber of columns matches the number of longitudes."},"2489.37":{"start":"2489.369","dur":"7.551","text":"It&#39;s a nice, regular format but you have to\ndeal with all three of them. That gets more"},"2496.92":{"start":"2496.92","dur":"8.649","text":"complicated when you have the time axis. Here\nis your nice two-dimensional grid for time,"},"2505.57":{"start":"2505.569","dur":"5.76","text":"the first time index. Then you have a third\ndimension going backwards, of each additional"},"2511.33":{"start":"2511.329","dur":"6.28","text":"time index, which has another grid of data\nassociated with it. In that case, you have"},"2517.61":{"start":"2517.609","dur":"10.72","text":"a third coordinate, which is your time dimension\ngoing back there. When you have data like"},"2528.33":{"start":"2528.329","dur":"8.301","text":"this, there are a lot of separate pieces of\ninformation that have to go together. Typically,"},"2536.63":{"start":"2536.63","dur":"7.169","text":"this is put into what is called a NetCDF file,\nwhich is a particular format that stores the"},"2543.80":{"start":"2543.799","dur":"7.06","text":"grid, the coordinates, and all kinds of other\nmetadata, which is data about the data so"},"2550.86":{"start":"2550.86","dur":"7.48","text":"that you can use it correctly. Who here is\nfamiliar with NetCDF in some way?"},"2560.32":{"start":"2560.32","dur":"7.939","text":"I&#39;ll show that a little bit. The first thing we&#39;ll do,\nI&#39;ve got a NetCDF file. That&#39;s probably the"},"2568.26":{"start":"2568.259","dur":"9.76","text":"main reason the zip file was so big. I&#39;m going\nto run this program called ncdump, which shows"},"2578.02":{"start":"2578.019","dur":"9.721","text":"some information about the NetCDF file. It\ntells me here the dimensions. These are the"},"2587.74":{"start":"2587.74","dur":"6.93","text":"three coordinates in the file. It has a time\ncoordinate, a latitude, and a longitude coordinate."},"2594.67":{"start":"2594.67","dur":"7.22","text":"In these numbers here, it is saying there\nare 361 latitudes in the grid and there are"},"2601.89":{"start":"2601.89","dur":"7.949","text":"540 longitudes in the grid. &quot;Unlimited&quot; just\nmeans the time axis is allowed to grow. Right"},"2609.84":{"start":"2609.839","dur":"8.601","text":"now there&#39;s 248 time coordinates in the file.\nIf you look down here, these are variables"},"2618.44":{"start":"2618.44","dur":"7.75","text":"now, below here. The latitude variable is\nindexed on the latitude dimension, which means"},"2626.19":{"start":"2626.19","dur":"6.52","text":"there are 361 actual latitude values. It distinguishes\nbetween dimensions and variables but they&#39;re"},"2632.71":{"start":"2632.71","dur":"7.149","text":"usually named the same in the case of coordinates.\nThis is giving you things like units, it&#39;s"},"2639.86":{"start":"2639.859","dur":"6.291","text":"in &quot;degrees north&quot;, it&#39;s called &quot;latitude&quot;\nand stuff like that. There&#39;s a longitude and"},"2646.15":{"start":"2646.15","dur":"7.959","text":"a time as well. Time is always interesting\nbecause it doesn&#39;t store year, month, day,"},"2654.11":{"start":"2654.109","dur":"8.031","text":"hour, minute, second. It stores it in, in\nthis case, number of days since this particular"},"2662.14":{"start":"2662.14","dur":"10.25","text":"moment. If it has the value 1 for time, that\nmeans one day after January 1st, 1900. If"},"2672.39":{"start":"2672.39","dur":"4.81","text":"it has the value...this is kind of giving\nyou more information, telling you the minimum"},"2677.20":{"start":"2677.2","dur":"7.839","text":"and maximum numbers, which is telling you\n41,000 days after 1900. That&#39;s some number"},"2685.04":{"start":"2685.039","dur":"8.29","text":"of years. Up here is the real variable that\nwe are interested in. This is the air temperature"},"2693.33":{"start":"2693.329","dur":"6.311","text":"variable. You can see it has indexes along\nall three dimensions. It is that three-dimensional"},"2699.64":{"start":"2699.64","dur":"3.75","text":"grid with the latitude, longitude, and time\ngoing back. Yes?"},"2703.39":{"start":"2703.39","dur":"5.78","text":"-I keep getting an error: ncdump not found.\n-That&#39;s because you don&#39;t have it installed"},"2709.17":{"start":"2709.17","dur":"5.879","text":"on your computer. Sorry. It&#39;s an external\nprogram, it&#39;s not part of Python. I didn&#39;t"},"2715.05":{"start":"2715.049","dur":"10.881","text":"think about that. I thought it came with the\nPython stuff but maybe not. There are other"},"2725.93":{"start":"2725.93","dur":"4.129","text":"ways to get this information with Python;\nthis was just the quickest way that I knew"},"2730.06":{"start":"2730.059","dur":"11.131","text":"to get it. Did you install the NetCDF package?\nOk, because in my instructions I had mentioned"},"2741.19":{"start":"2741.19","dur":"5.31","text":"that you could install that. That&#39;s probably\nwhy you don&#39;t have it. You&#39;d have to install"},"2746.50":{"start":"2746.5","dur":"12.359","text":"that using the Conda command. You can just\ntry it right now. Conda install NetCDF4."},"2758.86":{"start":"2758.859","dur":"9.541","text":"That should bring the ncdump command with it. You\nget here that the units of T_air are Celcius"},"2768.40":{"start":"2768.4","dur":"6.6","text":"and it has information about FillValue and\nMissing Value. That&#39;s not terribly important"},"2775.00":{"start":"2775","dur":"10.039","text":"to us because the NetCDF commands deal with\nthat themselves. This whole thing is basically"},"2785.04":{"start":"2785.039","dur":"5.74","text":"designed to define this one variable, plus\nall the coordinates that go with it. Yes?"},"2790.78":{"start":"2790.779","dur":"6.901","text":"Since I&#39;m playing catch-up, what do I have\nto do to get this file in my...?"},"2797.68":{"start":"2797.68","dur":"3.32","text":"Oh, let me see here."},"2809.80":{"start":"2809.8","dur":"2.739","text":"After you install the\nAnaconda..."},"2814.04":{"start":"2814.04","dur":"3.16","text":"-That&#39;s done. I did all that.\n-Did you do that?"},"2817.20":{"start":"2817.2","dur":"2.58","text":"-Yep.\n-Do you mean the notebook."},"2819.78":{"start":"2819.78","dur":"3.88","text":"-Yeah, I want the notebook.\n-Oh, sorry."},"2823.66":{"start":"2823.66","dur":"5.959","text":"-Thank you.\n-Hang on. For that you want to go into the"},"2829.62":{"start":"2829.619","dur":"6.5","text":"directory where you unzipped the data file\nand just call Jupyter notebook."},"2836.12":{"start":"2836.119","dur":"10.291","text":"-Oh, ok. I probably don&#39;t have the data files.\n-So go here and download this zip file. When"},"2846.41":{"start":"2846.41","dur":"7.209","text":"you&#39;ve downloaded it, unzip it, which in Windows\nI think you can right click on it and unzip"},"2853.62":{"start":"2853.619","dur":"10.071","text":"it or...what is the word? Expand it, or something\nlike that. Or extract, that&#39;s the word. Extract it."},"2863.69":{"start":"2863.69","dur":"5.12","text":"You were saying with the particular data we"},"2868.81":{"start":"2868.81","dur":"7.89","text":"were looking at, T_air at 10^15 or something\nspecified as missing..."},"2876.70":{"start":"2876.7","dur":"16.809","text":"I guess I should explain that. The file just\nstores a bunch of numbers, plus this information"},"2893.51":{"start":"2893.509","dur":"7.02","text":"that&#39;s shown here. What they typically do...\nthere are cases when you have data, there"},"2900.53":{"start":"2900.529","dur":"6.33","text":"are cells in the data where you don&#39;t actually\nhave data. Because this is all designed to"},"2906.86":{"start":"2906.859","dur":"6.69","text":"be a regularly spaced data grid, you have\nto have something there. So they pick a value"},"2913.55":{"start":"2913.549","dur":"7.191","text":"that lies outside of the normal range of numbers\nand use that to indicate &quot;there&#39;s actually"},"2920.74":{"start":"2920.74","dur":"13.7","text":"not data here&quot;. This is what they call the\nmissing value. Most programs that read NetCDF"},"2934.44":{"start":"2934.44","dur":"5.879","text":"files will handle that for you. But if you\nwere doing it in a very low-level way, you&#39;d have to look"},"2940.32":{"start":"2940.319","dur":"7.69","text":"for that value yourself and somehow\nmark or recognize that that&#39;s invalid information."},"2948.01":{"start":"2948.009","dur":"5.38","text":"I think you answered the question, but Python knows you.."},"2953.39":{"start":"2953.389","dur":"9.41","text":"Yeah, the NetCDF4 module will deal with that."},"2962.80":{"start":"2962.799","dur":"11.57","text":"That&#39;ll be part of it. They use Fill Value\nand Missing Value because different programs"},"2974.37":{"start":"2974.369","dur":"8.82","text":"look for different names for that. It&#39;s just\nthe number that means &quot;invalid&quot; in this particular"},"2983.19":{"start":"2983.189","dur":"5.12","text":"situation. Different files might use different\nnumbers for that."},"2989.34":{"start":"2989.34","dur":"7.46","text":"But that&#39;s so when you read the file, you\ndon&#39;t have to skip to a predetermined"},"2996.80":{"start":"2996.8","dur":"6.04","text":"value of what represents missing because then it\nwould depend on what the data was supposed"},"3002.84":{"start":"3002.84","dur":"4.14","text":"to look like.\n-Exactly. If your data actually took on values"},"3006.98":{"start":"3006.98","dur":"3.44","text":"close to 1 to the...\n-You wouldn&#39;t want to use those."},"3010.42":{"start":"3010.42","dur":"6.12","text":"Exactly. You&#39;d want to use some other crazy\nnumber."},"3016.54":{"start":"3016.54","dur":"3.039","text":"Usually these numbers are chosen automatically"},"3019.58":{"start":"3019.579","dur":"8.52","text":"when the file was saved but it depends on\nwho created the file and stuff."},"3030.84":{"start":"3030.84","dur":"6.9","text":"Any questions so far about what I&#39;m talking about or what I&#39;m doing? Yes?"},"3037.74":{"start":"3037.74","dur":"6.14","text":"[audience question]\n-What operating system do you have?"},"3043.88":{"start":"3043.88","dur":"5.659","text":"-Windows 10.\n-I don&#39;t know."},"3049.54":{"start":"3049.539","dur":"9.92","text":"I had that problem when I was installing just\nan hour ago Anaconda,"},"3059.46":{"start":"3059.46","dur":"11.92","text":"when I tried to install the 64-bit version. But when I switched to the 32-bit version, it worked."},"3071.39":{"start":"3071.39","dur":"12.439","text":"You could try that. DLLs are the way that\nWindows handles dynamic code and when you"},"3083.83":{"start":"3083.829","dur":"8.43","text":"have a DLL error, that&#39;s usually a pain to\ndeal with. In general, it means that something"},"3092.26":{"start":"3092.259","dur":"8.181","text":"went wrong, probably during the installation.\nOr when you told Conda to install something,"},"3100.44":{"start":"3100.44","dur":"6.329","text":"maybe it didn&#39;t work. It depends on which\nDLL it&#39;s complaining about and stuff. Since"},"3106.77":{"start":"3106.769","dur":"6.57","text":"it&#39;s Windows, the usual answer is to do something\ndrastic like uninstall it and reinstall it"},"3113.34":{"start":"3113.339","dur":"6.2","text":"or something like that. The 32-bit might be\na good work-around."},"3119.54":{"start":"3119.539","dur":"3.36","text":"You probably had Conda installed already,\nright?"},"3122.90":{"start":"3122.9","dur":"4.32","text":"-Yeah, I had it for a while.\n-It may just be generic DLL..."},"3127.23":{"start":"3127.23","dur":"5.06","text":"-So when did it give you that error?\n-Whenever I tried to call ncdump or when I"},"3132.29":{"start":"3132.29","dur":"5.42","text":"I tried the next slide which was using NetCDF4. It won&#39;t do that either."},"3137.71":{"start":"3137.71","dur":"3.34","text":"Maybe something  happened when I tried installing NetCDF4."},"3141.05":{"start":"3141.05","dur":"2.11","text":"When did you install NetCDF4?"},"3143.16":{"start":"3143.16","dur":"5.44","text":"-A half hour ago.\n-Was it before or after you opened the notebook?"},"3148.60":{"start":"3148.6","dur":"3.74","text":"-Oh!\n-If you did it after you opened the notebook,"},"3152.34":{"start":"3152.34","dur":"3.679","text":"then the notebook is using a version of Python\nbefore you installed NetCDF."},"3156.02":{"start":"3156.019","dur":"3.99","text":"I feel like I closed it and reopened it. I\ndon&#39;t know. Let me try that."},"3160.01":{"start":"3160.009","dur":"8.26","text":"You could reset the kernel. Restart your kernel,\nthat might help. But I can&#39;t take time to"},"3168.27":{"start":"3168.269","dur":"12.171","text":"debug that right now. It&#39;s a Windows, painful\nthing. I&#39;m sorry that some people are having"},"3180.44":{"start":"3180.44","dur":"15.96","text":"issues with this. If you have major problems,\nyou could always put Anaconda on a Linux server"},"3196.40":{"start":"3196.4","dur":"9.98","text":"that doesn&#39;t have the Windows things. Or we\ncan sit down and work on it later, offline."},"3209.58":{"start":"3209.58","dur":"10.759","text":"Any other questions at this point? Now I&#39;m\ngoing to use the NetCDF library, or module,"},"3220.34":{"start":"3220.339","dur":"6.841","text":"and I&#39;m going to point it to the same data\nfile that I did the ncdump with. And this"},"3227.18":{"start":"3227.18","dur":"9.929","text":"is the with-statement, which I didn&#39;t cover\nyet. With the NetCDF thing, what you"},"3237.11":{"start":"3237.109","dur":"7.271","text":"have to do... the library does not load the\nentire contents of the file into memory when"},"3244.38":{"start":"3244.38","dur":"5.909","text":"you open it. This is good because you can\nopen very, very large files. You might only"},"3250.29":{"start":"3250.289","dur":"7.47","text":"be interested in a subset of the data in that\nfile. What you have to do is open the file,"},"3257.76":{"start":"3257.759","dur":"6.161","text":"do some stuff with the file... basically extract\nthe parts you want, and then close the file."},"3263.92":{"start":"3263.92","dur":"7.829","text":"Closing the file is very important but it&#39;s\noften forgotten. What Python did is come up"},"3271.75":{"start":"3271.749","dur":"7.27","text":"with this with-statement, which is like an\nautomatic open-close. What we are doing is"},"3279.02":{"start":"3279.019","dur":"10.181","text":"we are saying &quot;With this thing&quot; (that&#39;s the\ncommand to open the file), and by saying &quot;as"},"3289.20":{"start":"3289.2","dur":"7.909","text":"ds&quot;, I am giving a name to the open file so\nI can use it. What happens is when the indentation"},"3297.11":{"start":"3297.109","dur":"8.68","text":"stops, then the close happens automatically.\nIt&#39;s just nice. It&#39;s indented because there&#39;s"},"3305.79":{"start":"3305.789","dur":"5.671","text":"a colon there and it&#39;s a visual indication\nthat what you are doing there relies on something"},"3311.46":{"start":"3311.46","dur":"8.5","text":"that is temporary. The ds, here, is a temporary\nexistence as long as I&#39;m in the \u201cwith\u201d."},"3319.96":{"start":"3319.96","dur":"2.849","text":"Once I&#39;m done with the \u201cwith\u201d, ds is not\nvalid anymore."},"3322.81":{"start":"3322.809","dur":"7.131","text":"So that syntax in the parenthesis, the &#39;r&#39;?\nDoes that mean &quot;read&quot;?"},"3329.94":{"start":"3329.94","dur":"7.839","text":"This is particular to the way NetCDF works. It&#39;s saying\n&quot;Here&#39;s the file I want to open&quot; and &#39;r&#39; means"},"3337.78":{"start":"3337.779","dur":"6.191","text":"I&#39;m opening it to read it. You can also use\na &#39;w&#39; to say &quot;I want to write to it&quot;. Then"},"3343.97":{"start":"3343.97","dur":"3.829","text":"you would be doing very different things.\nYou would actually be taking data you already"},"3347.80":{"start":"3347.799","dur":"6.131","text":"have in variables and sticking it in the file\nand stuff like that. Writing to a NetCDF is"},"3353.93":{"start":"3353.93","dur":"9.55","text":"a whole other talk, probably. Reading from\nit is not too bad. I&#39;m saying, open this file"},"3363.48":{"start":"3363.48","dur":"10.5","text":"for reading, call it ds while it&#39;s open, and\nwe&#39;re going to do some stuff with ds. First,"},"3373.98":{"start":"3373.98","dur":"9.46","text":"look up here. You&#39;ve got dimensions and variables.\nI&#39;m actually saying ds.variables. It&#39;s very"},"3383.44":{"start":"3383.44","dur":"7.799","text":"similar to this layout up here. Then I&#39;m saying\nthe name of the variable I want to look up,"},"3391.24":{"start":"3391.239","dur":"11.411","text":"which matches this name here. That whole thing\n(ds.variables &#39;Tair&#39;) refers to the entire"},"3402.65":{"start":"3402.65","dur":"10.24","text":"concept of that variable, not just the data.\nI can say &#39;long_name&#39;. I can say..."},"3416.70":{"start":"3416.7","dur":"13.059","text":"I want to see the units. Whatever. Here I&#39;m doing\nthe same thing with the long variable. If"},"3429.76":{"start":"3429.759","dur":"7.701","text":"you put the [:] there, that means &quot;take all\nof the data from that variable and store it"},"3437.46":{"start":"3437.46","dur":"7.25","text":"in here&quot;. Do the same thing with latitude\nafter that."},"3444.71":{"start":"3444.71","dur":"6.92","text":"So the with command is more like creating\na link to the file rather than... [inaudible]?"},"3451.63":{"start":"3451.63","dur":"7.82","text":"The &quot;with&quot; doesn&#39;t do that. The nc4 does that.\nThe nc4 is essentially opening that file and"},"3459.45":{"start":"3459.45","dur":"7.829","text":"looking inside of it. When you do these types\nof statements, you are telling the nc4 to"},"3467.28":{"start":"3467.279","dur":"5.691","text":"do things with the file. Essentially, what\nthis line is doing is shuttling information"},"3472.97":{"start":"3472.97","dur":"4.829","text":"out of the file into memory. That information\nwas not brought into memory until we asked"},"3477.80":{"start":"3477.799","dur":"7.171","text":"for it because you may not want all of it.\nFor example, instead of saying colon, I could"},"3484.97":{"start":"3484.97","dur":"8.599","text":"say &quot;I just want longitudes 0-9 and that way\nI get a subset of the data instead of everything."},"3493.57":{"start":"3493.569","dur":"6.9","text":"If you just wanted to go ahead and load the\nentire file with all the variables, how would"},"3500.47":{"start":"3500.469","dur":"6.251","text":"you do it?\n-You&#39;d have to have one of these lines for"},"3506.72":{"start":"3506.72","dur":"10.349","text":"each variable. You&#39;d have to specifically\nask for each one. Here, I&#39;m grabbing T_air"},"3517.07":{"start":"3517.069","dur":"5.811","text":"but not all of it. You can see here I have\nthree different things in the square brackets"},"3522.88":{"start":"3522.88","dur":"8.79","text":"because there are three dimensions to this.\nTime is first, then lat, then lon. What I&#39;m"},"3531.67":{"start":"3531.67","dur":"8.46","text":"saying down here is I want the 100th time\nslice and then I want all the latitudes and"},"3540.13":{"start":"3540.13","dur":"5.6","text":"all the longitudes. I&#39;m right there pulling\nout a subset of the data."},"3545.73":{"start":"3545.73","dur":"9.869","text":"To follow up on the question that was just\nasked, there&#39;s no way to open the NetCDF file"},"3555.60":{"start":"3555.599","dur":"6.341","text":"within Python and at that point look at what&#39;s\nin the NetCDF?"},"3561.94":{"start":"3561.94","dur":"2.16","text":"Yeah, you can do this."},"3568.82":{"start":"3568.82","dur":"4.959","text":"-So that would tell you everything that&#39;s in there?\n-You can look through the file yourself if"},"3573.78":{"start":"3573.779","dur":"9.59","text":"you don&#39;t know what&#39;s in there, but it is\nnot trivial to try to write code that can"},"3583.37":{"start":"3583.369","dur":"6.17","text":"deal with any file you give it. You are pretty\nmuch going to be writing code either for that"},"3589.54":{"start":"3589.539","dur":"8.391","text":"specific file or for a family of related files\nthat are all of the same format. You can browse"},"3597.93":{"start":"3597.93","dur":"4.97","text":"through that data if you want to.\n-I guess there I was thinking about Ferret."},"3602.90":{"start":"3602.9","dur":"7.12","text":"Understanding that you&#39;re going to open a\nNetCDF file and all of those variables are"},"3610.02":{"start":"3610.02","dur":"4.719","text":"then read in.\n-Actually, they&#39;re not read in. The same thing"},"3614.74":{"start":"3614.739","dur":"5.04","text":"as here, they are looked at but the data isn&#39;t\nactually brought into Ferret until you actually"},"3619.78":{"start":"3619.779","dur":"6.431","text":"use them for something. Ferret is handling\nthat behind your back so you don&#39;t have to"},"3626.21":{"start":"3626.21","dur":"5.7","text":"worry about it. With Python, you have to be\na little more explicit. It&#39;s very similar."},"3631.91":{"start":"3631.91","dur":"7.639","text":"Where I ask it to print &quot;ds.variables&quot;, it&#39;s\nprinting all this information, but it&#39;s not"},"3639.55":{"start":"3639.549","dur":"5.161","text":"printing the actual numbers. It&#39;s just\nprinting stuff it knows about the data. That&#39;s"},"3644.71":{"start":"3644.71","dur":"5.859","text":"exactly what happens when you say &quot;Show Data&quot;\nin Ferret. It&#39;s the same thing. It&#39;s just"},"3650.57":{"start":"3650.569","dur":"5.25","text":"formatted differently. Anything--yes?\n-Instead of getting all of that, all it gave"},"3655.82":{"start":"3655.819","dur":"9.161","text":"me was temperature 2m above the displacement\nheight. That&#39;s all it said."},"3664.98":{"start":"3664.98","dur":"10.009","text":"I changed this code here. Feel free to...the\noriginal code in the notebook just had the"},"3674.99":{"start":"3674.989","dur":"8.681","text":"name that it printed. If you look, I&#39;m printing\nds.variables, ds.variables \u2018Tair\u2019 .long_name,"},"3683.67":{"start":"3683.67","dur":"7.389","text":"ds.variables Tair .units... all those things\nare output here. Here&#39;s what you have. Temperature"},"3691.06":{"start":"3691.059","dur":"9.361","text":"at 2 meters above the displacement height.\nThat&#39;s the long name and Celsius is the units."},"3700.42":{"start":"3700.42","dur":"8.899","text":"All these things I can do and play around\nwith. Once I&#39;m done with the &quot;with&quot;, ds vaporizes."},"3709.32":{"start":"3709.319","dur":"12.831","text":"If I try to do something with ds...let&#39;s comment\nthis one out...then it says &quot;not a valid ID&quot;."},"3722.15":{"start":"3722.15","dur":"12.339","text":"It&#39;s saying &quot;that&#39;s not open anymore&quot;, essentially.\nWe don&#39;t do that outside of the &quot;with&quot;."},"3734.49":{"start":"3734.489","dur":"6.971","text":"I&#39;m typing the type of lon so we can see that\nthis is actually giving us a numpy array,"},"3741.46":{"start":"3741.46","dur":"7.08","text":"which is very useful because that&#39;s a lot\neasier to deal with than regular lists."},"3748.54":{"start":"3748.54","dur":"11.12","text":"If we did Tair.shape, we can see T_air is 361x540,\nwhich matches the number of latitudes by the"},"3759.67":{"start":"3759.67","dur":"10.109","text":"number of longitudes. We also know that T_air,\nthe original, was also 248 time slices but"},"3769.78":{"start":"3769.779","dur":"6.6","text":"we extracted only one of them. That&#39;s why\nthe shape is two-dimensional instead of three-dimensional."},"3780.32":{"start":"3780.32","dur":"12.44","text":"If we look at the shape of latitude, it&#39;s\none-dimensional of length 361. Any questions?"},"3792.77":{"start":"3792.769","dur":"8.55","text":"That should remind you of this picture. Before,\nwe had three-dimensional data and we took"},"3801.32":{"start":"3801.319","dur":"5.561","text":"a two-dimensional slice out of it. We have\nthis two-dimensional data, the T_air, and"},"3806.88":{"start":"3806.88","dur":"6.459","text":"then we have out latitudes. The size of the\nlatitude matches the number of rows and the"},"3813.34":{"start":"3813.339","dur":"8","text":"size of the longitude matches the number of\ncolumns. Let&#39;s confirm that."},"3822.56":{"start":"3822.56","dur":"4.9","text":"You can see here, latitude matches the first one"},"3827.46":{"start":"3827.46","dur":"7.48","text":"and longitude\nmatches the second one. Any questions? Ok."},"3838.24":{"start":"3838.24","dur":"10.1","text":"What time is it? Can&#39;t tell. 1:41, ok. 20\nminutes, that&#39;s pretty good."},"3852.82":{"start":"3852.82","dur":"15.74","text":"What I wanted to do was...here I&#39;m creating indices into\nthe latitude array. I know the latitude goes"},"3868.57":{"start":"3868.569","dur":"10.861","text":"up to 361. This variable is just a list of\nnumbers from 200 to 280. In fact, let&#39;s split"},"3879.43":{"start":"3879.43","dur":"13.51","text":"this up a little bit. Let&#39;s start with this\nand just take a look at that. The np.arange"},"3892.94":{"start":"3892.94","dur":"6.73","text":"function gives us a list of numbers from A\nto B, but you can see that it actually doesn&#39;t"},"3899.67":{"start":"3899.67","dur":"6.98","text":"include the last one, just like the range\nfunction in Python. This is just a normal,"},"3906.65":{"start":"3906.65","dur":"6.599","text":"Python way of doing things. It does start...\n- I thought that it automatically iterates by"},"3913.25":{"start":"3913.249","dur":"2.73","text":"1.\n-Yes. If I didn&#39;t want it to iterate by 1,"},"3915.98":{"start":"3915.979","dur":"11.75","text":"I could tell it like this. It&#39;s the starting\nvalue, a little bit after the stopping value,"},"3927.73":{"start":"3927.729","dur":"13.691","text":"and the interval. Let&#39;s go back to 1. In fact,\nI&#39;ll just change that to a 1. We&#39;ll do the"},"3941.42":{"start":"3941.42","dur":"12.02","text":"same thing here. That&#39;s 400 to 500, except\nit&#39;s really 400-499. It never does the last one."},"3954.88":{"start":"3954.88","dur":"4.48","text":"I may be just a little lost here. How does"},"3959.36":{"start":"3959.36","dur":"12.479","text":"it know what it&#39;s acting on? The np.arange?\n-This is just a normal function. Arange inside"},"3971.84":{"start":"3971.839","dur":"10.68","text":"of the np library or module. I&#39;m just giving\nit some inputs and it&#39;s producing an output."},"3982.52":{"start":"3982.519","dur":"6.171","text":"There&#39;s nothing else happening. There&#39;s no\nconnection to what I was doing above, yet."},"3988.69":{"start":"3988.69","dur":"4.58","text":"-So these are just numbers that have been generated\nby this command?"},"3993.27":{"start":"3993.27","dur":"6.569","text":"-Yeah. I&#39;m arbitrarily creating a list of numbers.\n-Now I understand."},"3999.84":{"start":"3999.839","dur":"9.581","text":"Then what I can do is I can say...instead\nof printing out the numbers, I can print out"},"4009.42":{"start":"4009.42","dur":"10.579","text":"the latitudes at those numbers. Now I&#39;m dealing\nwith the 200th latitude in the latitude list."},"4020.00":{"start":"4019.999","dur":"13.84","text":"It goes through the 279th latitude in the\nlatitude list. If I do the same thing here,"},"4033.84":{"start":"4033.839","dur":"8.801","text":"this is the 400-500th longitudes. You can\nsee here that the longitudes are spaced by"},"4042.64":{"start":"4042.64","dur":"16.24","text":"2\/3 of a degree, it looks like. What I would\nlike to do is then take those same ranges"},"4058.88":{"start":"4058.88","dur":"12.159","text":"and extract a subset of the T_air data that\ngoes with them. If I did it...let&#39;s do &quot;Edit&quot;,"},"4071.04":{"start":"4071.039","dur":"10.28","text":"&quot;Split Cell&quot;... if I did it like this... oops,\nthose were the wrong numbers. 200-280."},"4082.98":{"start":"4082.98","dur":"5.24","text":"If  I did it like that, it would work fine. But\nI want to reuse these numbers up here and"},"4088.22":{"start":"4088.22","dur":"3.32","text":"that doesn&#39;t actually work."},"4094.80":{"start":"4094.8","dur":"9.52","text":"What was it? lat_ind,\nlon_ind. That gives me an error. If you are"},"4104.33":{"start":"4104.33","dur":"6.039","text":"familiar with Matlab, you might have a clue\nwhat that is about. The solution is to use"},"4110.37":{"start":"4110.369","dur":"5.39","text":"meshgrid. When you have a two-dimensional\narray and you want to look up stuff from the"},"4115.76":{"start":"4115.759","dur":"6.16","text":"two-dimensional array, you have to have two-dimensional indices. What I&#39;m trying to give it here"},"4121.92":{"start":"4121.92","dur":"6.339","text":"is two one-dimensional indices. Instead, I need to give it two two-dimensional indices"},"4128.26":{"start":"4128.259","dur":"9.201","text":"so it knows which row and which column in every case. In that case, you use the meshgrid"},"4137.46":{"start":"4137.46","dur":"9.899","text":"function. You take the two sets of indices\nand you create a new set of indices. Let&#39;s"},"4147.36":{"start":"4147.359","dur":"17.13","text":"split that out. lat_ind was the numbers 200-279\nbut mlat is the numbers from 200-279 repeated"},"4164.49":{"start":"4164.489","dur":"14.841","text":"100 times. It&#39;s now two-dimensional. If we\nlook at... &quot;Insert below&quot;, mlon. What you"},"4179.33":{"start":"4179.33","dur":"7.61","text":"can see if you look closely is that mlat goes\nfrom 200-279 horizontally and then repeats"},"4186.94":{"start":"4186.94","dur":"10","text":"vertically, whereas mlon goes from 400-499\nvertically and repeats horizontally. If you"},"4196.94":{"start":"4196.94","dur":"11.69","text":"look at the i,j location in mlat and combine\nthat with the i,j location in mlon, you get"},"4208.63":{"start":"4208.63","dur":"14.469","text":"a unique pair of coordinates. Now I can put\nthose into my t_air and look up... let&#39;s"},"4223.10":{"start":"4223.099","dur":"11.491","text":"split that out. Now I&#39;ve got that and this\nis now an array. Actually, let&#39;s look at the"},"4234.59":{"start":"4234.59","dur":"23.859","text":"shape. We can see that this is 100x80. We&#39;ve\nnow taken the\u2026 the lat indices were 400-500."},"4258.45":{"start":"4258.449","dur":"14.831","text":"I mean the lon ones...there&#39;s 100 lons and\n80 lats. This is showing as 100x80, although"},"4273.28":{"start":"4273.28","dur":"9.01","text":"that feels backwards to me. I&#39;m not sure.\nThis was originally 361x540."},"4284.84":{"start":"4284.84","dur":"6.76","text":"-Yeah, it&#39;s gotten mixed up.\n-Isn&#39;t because you have the meshgrid?"},"4291.60":{"start":"4291.6","dur":"3.22","text":"I probably have the meshgrid wrong."},"4302.76":{"start":"4302.76","dur":"9.06","text":"That&#39;s wrong too though. Lon should go to 540."},"4313.97":{"start":"4313.969","dur":"10.02","text":"There we go. Apparently, I had the directionality\nwrong. Let&#39;s try that again. There. That may"},"4323.99":{"start":"4323.989","dur":"13.121","text":"be why some other things didn&#39;t work. Subset\nA was actually inputting these things directly,"},"4337.11":{"start":"4337.11","dur":"12.16","text":"the ranges directly. Subset B was using the\nmeshgrid. I&#39;m trying here to compare the two"},"4349.27":{"start":"4349.27","dur":"9.51","text":"and you can see that the shapes are the same\nand it has a big list of trues because it"},"4358.78":{"start":"4358.78","dur":"4.859","text":"is comparing each item to each other item.\nAre they equal? That&#39;s what the two equals"},"4363.64":{"start":"4363.639","dur":"7.64","text":"signs mean. If I say &quot;all&quot;, then I am saying..."},"4378.28":{"start":"4378.28","dur":"4.399","text":"If I say &quot;does subset A equal subset B?&quot; and"},"4382.68":{"start":"4382.679","dur":"5.5","text":"then I say &quot;all&quot; to mean &quot;are they all true?&quot;\nSo this gives me &quot;true&quot; to say &quot;yes, they&#39;re"},"4388.18":{"start":"4388.18","dur":"8.72","text":"equal&quot;. They&#39;re the same. Does that make sense?\nAny questions?"},"4399.56":{"start":"4399.56","dur":"4.76","text":"I&#39;m not sure if I got that. Can you go over\nit again?"},"4404.32":{"start":"4404.32","dur":"6.62","text":"-Which part?\n-The subset A. It gives a list of numbers,"},"4410.94":{"start":"4410.94","dur":"5.78","text":"from 200-280 and from 400-500, right?\n-Right."},"4416.72":{"start":"4416.72","dur":"7.76","text":"And then on this whole line, it should be\nsubset B. You were creating indexes, which"},"4424.48":{"start":"4424.48","dur":"7.92","text":"is the same lat and lon. If these are the\nsame numbers, I don&#39;t understand why it doesn&#39;t work."},"4432.40":{"start":"4432.4","dur":"4.26","text":"They are the same numbers so conceptually"},"4436.67":{"start":"4436.67","dur":"8.86","text":"it should work. The problem is, writing numbers\nwith a colon in it is different from inputting"},"4445.53":{"start":"4445.53","dur":"16.55","text":"an array. It&#39;s treated different by Python\nand also numpy. When you give it arrays instead"},"4462.08":{"start":"4462.08","dur":"9.36","text":"of ranges, it treats those as &quot;this is the\nlist of things I want to pull out&quot;. It doesn&#39;t"},"4471.44":{"start":"4471.44","dur":"10.19","text":"treat them as a range, it treats them as a\nlist. Since you&#39;re giving it two lists, then"},"4481.63":{"start":"4481.63","dur":"5.68","text":"each list is for a different coordinate. Since\nthe shape of the array is two-dimensional,"},"4487.31":{"start":"4487.31","dur":"5.75","text":"the coordinates lists need to be two-dimensional.\nIn this case, this is a shortcut for saying"},"4493.06":{"start":"4493.06","dur":"11.74","text":"&quot;rows 200 to 280 and columns 400 to 500&quot;.\nIn the second form, even though to our mind"},"4504.80":{"start":"4504.8","dur":"5.73","text":"it looks like the same idea, to Python it\nhas a different purpose because you can do"},"4510.53":{"start":"4510.53","dur":"9.609","text":"other things with this. Like if you have a\nlist of true-false values, just like in Matlab,"},"4520.14":{"start":"4520.139","dur":"4.451","text":"you can stick that in there and it will give\nyou all the values that correspond to the"},"4524.59":{"start":"4524.59","dur":"10.25","text":"indices at the true items in the list. This\nis more versatile so you have to be more explicit."},"4534.84":{"start":"4534.84","dur":"6.049","text":"The whole meshgrid thing is to illustrate\nthe right way to do that. If you do this in"},"4540.89":{"start":"4540.889","dur":"10.991","text":"Matlab, it&#39;s the same problem.\n[audience question]"},"4551.88":{"start":"4551.88","dur":"4.52","text":"But if you have a two-dimensional array and\nyou give it two different arrays that are"},"4556.40":{"start":"4556.4","dur":"5.449","text":"not the same size, it&#39;s not going to like\nthat."},"4561.85":{"start":"4561.849","dur":"8.941","text":"[audience question]\nMaybe not, but this is how Python, or how"},"4570.79":{"start":"4570.79","dur":"14.19","text":"numpy requires it. Not much time left. I&#39;m\ngoing to skip over this one for a second because"},"4584.98":{"start":"4584.98","dur":"5.59","text":"I didn&#39;t get it to work. One thing that&#39;s\ncool though: there&#39;s this other module called"},"4590.57":{"start":"4590.57","dur":"8.52","text":"Xray. It&#39;s a wrapper around the NetCDF4 module.\nWhat it does is, this whole thing I was talking"},"4599.09":{"start":"4599.09","dur":"9.08","text":"about with the indices...you have to use the\nindices for both the latitudes and the data,"},"4608.17":{"start":"4608.17","dur":"8.68","text":"right? Xray takes that requirement away. You\ncan actually tell."},"4616.85":{"start":"4616.85","dur":"4.329","text":"Here, I&#39;m doing with X-ray.open_dataset."},"4621.18":{"start":"4621.179","dur":"5.08","text":"I&#39;m giving it the name of the dataset. It&#39;s\nvery similar to the &quot;with&quot; for the NetCDF."},"4626.26":{"start":"4626.26","dur":"8.06","text":"I&#39;m saying &quot;ds.T_air&quot;. Instead of saying ds.variables\n&#39;Tair&#39;, I&#39;m just directly saying &quot;T_air&quot;."},"4634.33":{"start":"4634.33","dur":"4.61","text":"I want to select and then I can actually give\nit latitudes and longitudes I want to select"},"4638.94":{"start":"4638.94","dur":"6.54","text":"on. If you know Ferret, this is how Ferret\nworks. You can say &quot;I want to deal with things"},"4645.48":{"start":"4645.48","dur":"8.48","text":"in coordinates, not in indices.&quot; Xray lets\nyou do that. If I do this, since I&#39;m giving"},"4653.96":{"start":"4653.96","dur":"5.06","text":"it a single latitude, a single longitude,\nand a single time coordinate, it&#39;s giving"},"4659.02":{"start":"4659.02","dur":"4.76","text":"me a single value back. It&#39;s pulling that\none value out of the entire three-dimensional"},"4663.78":{"start":"4663.78","dur":"5.39","text":"T_air list.\n-Do they have to be exact latitudes and longitudes?"},"4669.17":{"start":"4669.17","dur":"6.23","text":"I don&#39;t think so but I haven&#39;t played around\nwith this a whole lot. This is mainly just"},"4675.40":{"start":"4675.4","dur":"4.12","text":"to let you know it&#39;s out there and you might\nwant to try it."},"4679.52":{"start":"4679.52","dur":"3.86","text":"-Could you give it a range?\n-Yeah, there&#39;s a way to give it ranges and"},"4683.38":{"start":"4683.38","dur":"9.359","text":"stuff. The syntax is a little funny but essentially\nthe same kinds of ideas you can do in Ferret,"},"4692.74":{"start":"4692.739","dur":"5.67","text":"in terms of selecting information through\ncoordinates, you can do with Xray. It was"},"4698.41":{"start":"4698.409","dur":"6.221","text":"designed that way.\nDoes that mean you can kind of use this as"},"4704.63":{"start":"4704.63","dur":"8.01","text":"a shortcut for doing...?\n-Exactly. But you need to know both sides because"},"4712.64":{"start":"4712.64","dur":"14.2","text":"when things go wrong, you need to understand\nwhy. If I had more time to play with this,"},"4726.84":{"start":"4726.84","dur":"10.85","text":"I could have probably done the exact same\nexample with Xray. The Basemap thing, I couldn&#39;t"},"4737.69":{"start":"4737.69","dur":"9.34","text":"get it to work. What I can do is show is what\nBasemap is supposed to do."},"4757.12":{"start":"4757.12","dur":"8.559","text":"With Basemap, you can create projections and draw your data on those projections. The Pyplot functions"},"4765.68":{"start":"4765.679","dur":"8.25","text":"can do things like contouring, field contours,\nand stuff like that. What the Basemap does..."},"4773.93":{"start":"4773.929","dur":"10.891","text":"in fact, I should enlarge this. What I&#39;m looking\nat is matplotlib.org\/basemap. Basemap is this"},"4784.82":{"start":"4784.82","dur":"6.62","text":"module that lets you do this stuff. It basically\nlets you project your data onto an actual"},"4791.44":{"start":"4791.44","dur":"9.87","text":"globe, in this case, or other projections.\nI really wanted to show you exactly how to"},"4801.31":{"start":"4801.31","dur":"11.3","text":"do this but I was having trouble with my data.\nHere&#39;s a crazy one. Anyway, this is what you"},"4812.61":{"start":"4812.61","dur":"8.71","text":"would do along the same lines as Ferret: fill,\ncontour, stuff like that. You can use different"},"4821.32":{"start":"4821.32","dur":"9.669","text":"projections and do different things with it.\nI can try to get that to work and send it"},"4830.99":{"start":"4830.989","dur":"7.371","text":"to everyone once I have it working. It&#39;s pretty\ncool. As you can see, there&#39;s a lot of lines"},"4838.36":{"start":"4838.36","dur":"6.31","text":"of code necessary to do these because you\nhave to be really specific about what the"},"4844.67":{"start":"4844.67","dur":"7.799","text":"projection is and what exactly you want it\nto do. Once you have it figured out once,"},"4852.47":{"start":"4852.469","dur":"7.741","text":"it&#39;s probably easier to do it again. Oh, this\nis neat. This is specific points on the map"},"4860.21":{"start":"4860.21","dur":"7.88","text":"and I think they are even different sized\ndots, which is pretty nice. The Basemap is"},"4868.09":{"start":"4868.09","dur":"3.72","text":"what you want to do if you want to map your\n2D data."},"4871.81":{"start":"4871.81","dur":"15.76","text":"-Is there a way of turning that into a function?\n-Absolutely. You could definitely start to"},"4887.57":{"start":"4887.57","dur":"5.149","text":"write a function where you give it a NetCDF\nfile and tell it a variable you want it to"},"4892.72":{"start":"4892.719","dur":"4.601","text":"look at. It can pull out the latitudes and\nlongitudes, make a map out of it, and plot"},"4897.32":{"start":"4897.32","dur":"6.169","text":"it and do a lot of this stuff semi-automatically.\nBut you&#39;d have to write that code. There&#39;s"},"4903.49":{"start":"4903.489","dur":"4.5","text":"probably somebody out there who&#39;s already\nwritten that code."},"4909.54":{"start":"4909.54","dur":"4.98","text":"-If you write a lot of it, you&#39;ve got Ferret.\n-Yeah, basically. There actually is a Python"},"4914.53":{"start":"4914.53","dur":"8.83","text":"wrapper for Ferret, where you can actually\nuse Ferret within Python. I think it&#39;s also"},"4923.36":{"start":"4923.36","dur":"6.66","text":"useful to know how to do it natively in Python\nas well. I think the reason you&#39;d want to"},"4930.02":{"start":"4930.02","dur":"5.55","text":"use Python is so you have more control. Once\nyou hit the limits of what Ferret can do,"},"4935.57":{"start":"4935.57","dur":"3.85","text":"then you have to leave Ferret completely in\norder to do the next thing, so you might as"},"4939.42":{"start":"4939.42","dur":"5.89","text":"well not rely on that. But that could be a\nbridge. You could have some Ferret code that"},"4945.31":{"start":"4945.31","dur":"5.179","text":"you bring into Python through PyFerret and\nthen figure out how to translate it back into"},"4950.49":{"start":"4950.489","dur":"13.96","text":"Basemap and Xray and everything else. Let\nme quickly show one other thing. The Pandas"},"4964.45":{"start":"4964.449","dur":"8.74","text":"library is for reading column data. Let me\nshow you what I&#39;m talking about."},"4979.00":{"start":"4979","dur":"8.54","text":"If I have a spreadsheet... and this is not Excel, but\nit&#39;s good enough for demo. Let&#39;s say I have"},"4987.55":{"start":"4987.55","dur":"8.26","text":"a spreadsheet with a bunch of data in it and\nthen I save it as a csv (Comma Separated Values)"},"4995.81":{"start":"4995.81","dur":"13.81","text":"format, then I can read that csv file using\nPandas. Oops, I have to do this first and"},"5009.62":{"start":"5009.62","dur":"11.12","text":"then this. And look at that. It&#39;s a nice table\nshowing all the data. Pandas recognizes the"},"5020.75":{"start":"5020.75","dur":"9.55","text":"numerical data. This is sort of like a spreadsheet\nbut also sort of like a database. You can"},"5030.30":{"start":"5030.3","dur":"6.48","text":"do searches and find the data that is interesting.\nIt&#39;s very different from NetCDF. NetCDF is"},"5036.78":{"start":"5036.78","dur":"5.81","text":"meant for uniform grids and numerical data.\nThis is meant for where you have columns where"},"5042.59":{"start":"5042.59","dur":"14.879","text":"each column has a different meaning and purpose.\nFor example, here I&#39;m extracting a particular"},"5057.47":{"start":"5057.469","dur":"18.21","text":"column. I&#39;m just using the column header name\nto do that. Let&#39;s take this off, first."},"5075.68":{"start":"5075.679","dur":"8.331","text":"This is a particular data format of Pandas that\nstores the numbers and some other information."},"5084.01":{"start":"5084.01","dur":"9","text":"But if I put the .get_values on the end, now\nit becomes a regular numpy array. I&#39;ve pulled"},"5093.01":{"start":"5093.01","dur":"4.29","text":"the numbers out of a spreadsheet in 3 lines\nof code."},"5097.30":{"start":"5097.3","dur":"4.919","text":"-So what was it reading in this case?\n-It was reading the csv file that was saved"},"5102.22":{"start":"5102.219","dur":"8.081","text":"from this spreadsheet. This is an Excel spreadsheet\nand you go into... I don&#39;t actually have Excel,"},"5110.30":{"start":"5110.3","dur":"9.54","text":"but you can do the equivalent and export it\nas csv. You save it as a csv file instead"},"5119.84":{"start":"5119.84","dur":"13.049","text":"of an xls file. Then when you go here, you\nsay &quot;pd.read_csv&quot;. And you can give it lots"},"5132.89":{"start":"5132.889","dur":"8.25","text":"of information about your csv file if you\nneed to. This would be useful for people who"},"5141.14":{"start":"5141.139","dur":"8.151","text":"have data that&#39;s not in the NetCDF format.\nOnce it&#39;s in the Pandas array, you can do"},"5149.29":{"start":"5149.29","dur":"4.4","text":"stuff with that. You can average it and plot\nit and all that kind of stuff."},"5153.69":{"start":"5153.69","dur":"10.4","text":"-Do you have any idea how to transform [inaudible]?\n-Which one?"},"5164.09":{"start":"5164.09","dur":"12.47","text":"[inaudible]\n-There are many options. There&#39;s a module in"},"5176.56":{"start":"5176.56","dur":"10.429","text":"Python called datetime that would probably\nbe my first stop. Datetime can recognize date-like"},"5186.99":{"start":"5186.989","dur":"6.801","text":"information. You would probably have to tell\nit &quot;This is month\/day\/year&quot; or something but"},"5193.79":{"start":"5193.79","dur":"7.22","text":"then it would turn that into something that\nthen you can deal with as a date. You could"},"5201.01":{"start":"5201.01","dur":"7.74","text":"even convert that into &quot;number of days since\n1900&quot; or whatever you need it to be. I think"},"5208.75":{"start":"5208.75","dur":"3.09","text":"Pandas has some of that functionality in it\nalso."},"5211.84":{"start":"5211.84","dur":"11.88","text":"-Can you show that? If you grab that column,\nwhat values would it return?"},"5223.72":{"start":"5223.72","dur":"11.02","text":"I have to get the name of it. Let&#39;s go down\nhere."},"5243.32":{"start":"5243.32","dur":"6.72","text":"Hang on. I have to figure out what the exact syntax is here."},"5259.52":{"start":"5259.52","dur":"8.16","text":"This is just a list\nof strings, first of all. But if I say that,"},"5267.69":{"start":"5267.69","dur":"10.34","text":"that&#39;s that string. Then I can say &quot;Import\ndatetime&quot; and then &quot;date&quot;."},"5284.56":{"start":"5284.56","dur":"7.68","text":"Ok, it didn&#39;t like that. Let&#39;s see. I know there&#39;s a way to do\nthis."},"5298.82":{"start":"5298.82","dur":"5.58","text":"Typically I have to look things up in order to get it right."},"5310.18":{"start":"5310.18","dur":"3.78","text":"Let&#39;s see if that works."},"5315.46":{"start":"5315.46","dur":"4.28","text":"How do you do that? I know there&#39;s a way to do that."},"5330.14":{"start":"5330.14","dur":"7.64","text":"Basically this is the procedure:\nyou Google it and you see how...That&#39;s it!"},"5345.80":{"start":"5345.8","dur":"12.42","text":"Come on. Really? Strptime... right. That&#39;s\nwhat I was doing wrong."},"5363.34":{"start":"5363.34","dur":"20.46","text":"And now it doesn&#39;t like what I did. Really? I&#39;m trying to type too fast. Well, almost."},"5390.08":{"start":"5390.08","dur":"16.42","text":"Oh, there&#39;s a different library that has a different format here. There we go. So now this is an object that"},"5406.50":{"start":"5406.5","dur":"4.79","text":"specifically knows the year, the month, the\nday, the hour, and the minute. And then you"},"5411.29":{"start":"5411.29","dur":"7.47","text":"can do other stuff like that. I guess that\nwas a good example of how relatively easy"},"5418.76":{"start":"5418.76","dur":"5.7","text":"it is to figure out something in Python, even\nthough it took me a minute. Once I found the"},"5424.46":{"start":"5424.46","dur":"7.08","text":"information, using it wasn&#39;t that bad.\n-So the rest of us can multiply by a factor"},"5431.54":{"start":"5431.54","dur":"7.619","text":"of 10...\n-That factor will decrease as you do it more."},"5439.16":{"start":"5439.159","dur":"8.131","text":"I guess we&#39;re about out of time. Any last\nquestions? Thank you all for coming."},"5447.29":{"start":"5447.29","dur":"3.41","text":"[applause]"}}